{"version":3,"sources":["components/uielements/upload.js","components/contacts/deleteButton.js","components/contacts/contactCard.style.js","components/contacts/singleView.js","components/contacts/editView.js","components/contacts/contactList.style.js","components/contacts/contactList.js","containers/Profile/fakeData.js","containers/Profile/contacts.style.js","containers/Profile/editProfile.js","containers/Profile/profile.js"],"names":["antd__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","Upload","_this$props","this","props","contact","deleteContact","name","firstName","concat","lastName","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_feedback_popconfirm__WEBPACK_IMPORTED_MODULE_6__","title","okText","cancelText","onConfirm","notification","id","_uielements_button__WEBPACK_IMPORTED_MODULE_7__","icon","type","className","Component","WDContactCardWrapper","styled","div","_templateObject","borderRadius","palette","boxShadow","transition","ContactCardWrapper","WithDirection","otherAttributes","extraInfos","forEach","attribute","value","push","key","_contactCard_style__WEBPACK_IMPORTED_MODULE_6__","avatar","alt","src","beforeUpload","file","size","_this","Object","C_Users_aamer_Documents_react_golf_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","editContact","event","target","react__WEBPACK_IMPORTED_MODULE_6___default","_uielements_input__WEBPACK_IMPORTED_MODULE_8__","placeholder","rows","onChange","_contactCard_style__WEBPACK_IMPORTED_MODULE_11__","_uielements_upload__WEBPACK_IMPORTED_MODULE_9__","showUploadList","action","antd__WEBPACK_IMPORTED_MODULE_7__","WDContactListWrapper","ContactListWrapper","ContactList","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","singleContact","bind","assertThisInitialized","state","search","seectedId","changeContact","activeClass","react_default","onClick","deleteButton","setState","_this2","contacts","toUpperCase","filter","includes","filterContacts","input","context","intl","formatMessage","length","customScrollBar","map","intlMessages","contextTypes","PropTypes","object","isRequired","JSON","parse","WDContactsWrapper","ContactsWrapper","EditProfile","handleChange","contactAction","addContact","viewChange","Content","Layout","Profile","editView","selectedContact","console","log","style","background","layout","uielements_button","editProfile_EditProfile","email","singleView","connect","_state$Contacts","Contacts"],"mappings":"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","file":"static/js/16.67ddb171.chunk.js","sourcesContent":["import { Upload } from 'antd';\r\n\r\nexport default Upload;","import React, { Component } from 'react';\r\nimport Popconfirm from '../feedback/popconfirm';\r\nimport Button from '../uielements/button';\r\nimport notification from '../notification';\r\n\r\nexport default class extends Component {\r\n  render() {\r\n    const { contact, deleteContact } = this.props;\r\n    let name = '';\r\n    if (contact.firstName) {\r\n      name = `${contact.firstName} `;\r\n    }\r\n    if (contact.lastName) {\r\n      name = `${name}${contact.lastName}`;\r\n    }\r\n    if (!name) {\r\n      name = 'No Name';\r\n    }\r\n    return (\r\n      <Popconfirm\r\n        title={`Sure to delete ${name}?`}\r\n        okText=\"DELETE\"\r\n        cancelText=\"No\"\r\n        onConfirm={() => {\r\n          notification('error', `${name} Deleted`, '');\r\n          deleteContact(contact.id);\r\n        }}\r\n      >\r\n        <Button icon=\"close\" type=\"button\" className=\"isoDeleteBtn\" />\r\n      </Popconfirm>\r\n    );\r\n  }\r\n}\r\n","import styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\nimport { transition, borderRadius, boxShadow } from '../../settings/style-util';\r\nimport WithDirection from '../../settings/withDirection';\r\n\r\nconst WDContactCardWrapper = styled.div`\r\n  width: 100%;\r\n  height: calc(100% - 145px);\r\n  padding: 0 35px;\r\n  display: -webkit-flex;\r\n  display: -ms-flex;\r\n  display: flex;\r\n\r\n  @media only screen and (max-width: 600px) {\r\n    flex-direction: column;\r\n  }\r\n\r\n  @media only screen and (max-width: 767px) {\r\n    padding: 0 20px;\r\n  }\r\n\r\n  @media only screen and (min-width: 767px) and (max-width: 990px) {\r\n    flex-direction: column;\r\n  }\r\n\r\n  .isoContactCardHead {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 120px;\r\n    flex-shrink: 0;\r\n    margin-right: ${props =>\r\n      props['data-rtl'] === 'rtl' ? 'inherit' : '50px'};\r\n    margin-left: ${props => (props['data-rtl'] === 'rtl' ? '50px' : 'inherit')};\r\n    flex-shrink: 0;\r\n\r\n    @media only screen and (max-width: 600px) {\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    @media only screen and (min-width: 767px) and (max-width: 990px) {\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    .isoPersonImage {\r\n      width: 120px;\r\n      height: 120px;\r\n      display: flex;\r\n      flex-shrink: 0;\r\n      align-items: center;\r\n      justify-content: center;\r\n      margin-bottom: 10px;\r\n      overflow: hidden;\r\n      ${borderRadius('5px')};\r\n\r\n      .avatar-uploader {\r\n        width: 100%;\r\n        height: 100%;\r\n      }\r\n\r\n      img {\r\n        width: 100%;\r\n        height: 100%;\r\n        object-fit: cover;\r\n      }\r\n    }\r\n\r\n    .isoPersonName {\r\n      font-size: 15px;\r\n      font-weight: 500;\r\n      color: ${palette('text', 0)};\r\n      line-height: 1.5;\r\n      margin: 0;\r\n    }\r\n  }\r\n\r\n  .isoContactInfoWrapper {\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    @media only screen and (max-width: 767px) {\r\n      padding: 20px 0;\r\n    }\r\n\r\n    .isoContactCardInfos {\r\n      width: 100%;\r\n      display: flex;\r\n      flex-shrink: 0;\r\n      align-items: baseline;\r\n      flex-direction: row;\r\n      margin-bottom: 15px;\r\n\r\n      @media only screen and (max-width: 430px) {\r\n        flex-direction: column;\r\n        margin-bottom: 20px;\r\n      }\r\n\r\n      .isoInfoLabel {\r\n        font-size: 14px;\r\n        font-weight: 500;\r\n        color: ${palette('text', 0)};\r\n        line-height: 1.5;\r\n        margin: 0;\r\n        margin-right: ${props =>\r\n          props['data-rtl'] === 'rtl' ? 'inherit' : '15px'};\r\n        margin-left: ${props =>\r\n          props['data-rtl'] === 'rtl' ? '15px' : 'inherit'};\r\n        text-align: ${props =>\r\n          props['data-rtl'] === 'rtl' ? 'right' : 'left'};\r\n        min-width: 80px;\r\n        position: relative;\r\n\r\n        @media only screen and (max-width: 430px) {\r\n          margin-bottom: 5px;\r\n          margin-right: ${props =>\r\n            props['data-rtl'] === 'rtl' ? 'inherit' : '0'};\r\n          margin-left: ${props =>\r\n            props['data-rtl'] === 'rtl' ? '0' : 'inherit'};\r\n          padding-right: ${props =>\r\n            props['data-rtl'] === 'rtl' ? 'inherit' : '10px'};\r\n          padding-left: ${props =>\r\n            props['data-rtl'] === 'rtl' ? '10px' : 'inherit'};\r\n          min-width: 0;\r\n        }\r\n\r\n        &::after {\r\n          content: ':';\r\n          position: absolute;\r\n          right: ${props => (props['data-rtl'] === 'rtl' ? 'inherit' : '0')};\r\n          left: ${props => (props['data-rtl'] === 'rtl' ? '0' : 'inherit')};\r\n        }\r\n      }\r\n\r\n      .isoInfoDetails {\r\n        font-size: 14px;\r\n        font-weight: 400;\r\n        color: ${palette('text', 2)};\r\n        line-height: 1.5;\r\n        margin: 0;\r\n        text-align: ${props =>\r\n          props['data-rtl'] === 'rtl' ? 'right' : 'left'};\r\n      }\r\n\r\n      input {\r\n        font-size: 14px;\r\n        font-weight: 400;\r\n        color: ${palette('text', 2)};\r\n        line-height: inherit;\r\n        height: 36px;\r\n        padding: 0 15px;\r\n        margin: 0;\r\n        border: 1px solid ${palette('border', 0)};\r\n        outline: 0 !important;\r\n        overflow: hidden;\r\n        background-color: #ffffff;\r\n        ${boxShadow('none')};\r\n        ${borderRadius('3px')};\r\n        ${transition()};\r\n\r\n        &:focus {\r\n          border-color: ${palette('primary', 0)};\r\n          ${boxShadow('0 0 0 2px rgba(68, 130, 255, 0.2)')};\r\n          outline: 0;\r\n        }\r\n\r\n        &:hover {\r\n          border-color: ${palette('primary', 0)};\r\n        }\r\n\r\n        &::-webkit-input-placeholder {\r\n          color: ${palette('grayscale', 0)};\r\n        }\r\n\r\n        &:-moz-placeholder {\r\n          color: ${palette('grayscale', 0)};\r\n        }\r\n\r\n        &::-moz-placeholder {\r\n          color: ${palette('grayscale', 0)};\r\n        }\r\n        &:-ms-input-placeholder {\r\n          color: ${palette('grayscale', 0)};\r\n        }\r\n      }\r\n\r\n      textarea {\r\n        font-size: 14px;\r\n        font-weight: 400;\r\n        color: ${palette('text', 2)};\r\n        line-height: 24px;\r\n        height: 210px;\r\n        padding: 10px 15px;\r\n        margin: 0;\r\n        border: 1px solid ${palette('border', 0)};\r\n        outline: 0 !important;\r\n        background-color: #ffffff;\r\n        ${boxShadow('none')};\r\n        ${borderRadius('3px')};\r\n        ${transition()};\r\n\r\n        &:focus {\r\n          border-color: ${palette('primary', 0)};\r\n          ${boxShadow('0 0 0 2px rgba(68, 130, 255, 0.2)')};\r\n          outline: 0;\r\n        }\r\n\r\n        &:hover {\r\n          border-color: ${palette('primary', 0)};\r\n        }\r\n\r\n        &::-webkit-input-placeholder {\r\n          color: ${palette('grayscale', 0)};\r\n        }\r\n\r\n        &:-moz-placeholder {\r\n          color: ${palette('grayscale', 0)};\r\n        }\r\n\r\n        &::-moz-placeholder {\r\n          color: ${palette('grayscale', 0)};\r\n        }\r\n        &:-ms-input-placeholder {\r\n          color: ${palette('grayscale', 0)};\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ContactCardWrapper = WithDirection(WDContactCardWrapper);\r\n\r\nexport { ContactCardWrapper };\r\n","import React, { Component } from 'react';\r\nimport { ContactCardWrapper } from './contactCard.style';\r\n\r\nexport default class extends Component {\r\n  render() {\r\n    const { contact, otherAttributes } = this.props;\r\n    const name = contact.name ? contact.name : 'No Name';\r\n    const extraInfos = [];\r\n    otherAttributes.forEach(attribute => {\r\n      const value = contact[attribute.value];\r\n      if (value) {\r\n        extraInfos.push(\r\n          <div className=\"isoContactCardInfos\" key={attribute.value}>\r\n            <p className=\"isoInfoLabel\">{`${attribute.title}`}</p>\r\n            <p className=\"isoInfoDetails\">{value}</p>\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n    return (\r\n      <ContactCardWrapper className=\"isoContactCard\">\r\n        <div className=\"isoContactCardHead\">\r\n          <div className=\"isoPersonImage\">\r\n            {contact.avatar ? <img alt=\"#\" src={contact.avatar} /> : ''}\r\n          </div>\r\n          <h1 className=\"isoPersonName\">{name}</h1>\r\n        </div>\r\n        <div className=\"isoContactInfoWrapper\">{extraInfos}</div>\r\n      </ContactCardWrapper>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Icon } from 'antd';\r\nimport Input, { Textarea } from '../uielements/input';\r\nimport Upload from '../uielements/upload';\r\nimport notification from '../notification';\r\nimport { ContactCardWrapper } from './contactCard.style';\r\nimport './upload.css';\r\n\r\nfunction beforeUpload(file) {\r\n\r\n  \r\n  const isJPG = file.type === 'image/jpeg';\r\n  if (!isJPG) {\r\n    notification('error', 'You can only upload JPG file!', '');\r\n    return false;\r\n  }\r\n  const isLt2M = file.size / 1024 / 1024 < 2;\r\n  if (!isLt2M) {\r\n    notification('error', 'Image must smaller than 2MB!', '');\r\n    return false;\r\n  }\r\n  notification('success', 'Image uploaded successfully!', '');\r\n  return true;\r\n}\r\nexport default class extends Component {\r\n  render() {\r\n    const { contact, otherAttributes } = this.props;\r\n    const name = contact.name ? contact.name : 'No Name';\r\n    const extraInfos = [];\r\n    const names = [\r\n      { value: 'firstName', title: 'First Name' },\r\n      { value: 'lastName', title: 'Last Name' }\r\n    ];\r\n    [...names, ...otherAttributes].forEach(attribute => {\r\n      const value = contact[attribute.value];\r\n      const editContact = event => {\r\n        contact[attribute.value] = event.target.value;\r\n        let name = '';\r\n        if (contact.firstName) {\r\n          name = `${contact.firstName} `;\r\n        }\r\n        if (contact.lastName) {\r\n          name = `${name}${contact.lastName}`;\r\n        }\r\n        contact.name = name;\r\n        this.props.editContact(contact);\r\n      };\r\n      if (attribute.value === 'note') {\r\n        extraInfos.push(\r\n          <div className=\"isoContactCardInfos\" key={attribute.value}>\r\n            <p className=\"isoInfoLabel\">{`${attribute.title}`}</p>\r\n            <Textarea\r\n              placeholder={`${attribute.title}`}\r\n              value={value}\r\n              type=\"textarea\"\r\n              rows={5}\r\n              onChange={event => editContact(event)}\r\n            />\r\n          </div>\r\n        );\r\n      } else {\r\n        extraInfos.push(\r\n          <div className=\"isoContactCardInfos\" key={attribute.value}>\r\n            <p className=\"isoInfoLabel\">{`${attribute.title}`}</p>\r\n            <Input\r\n              placeholder={`${attribute.title}`}\r\n              value={value}\r\n              onChange={event => editContact(event)}\r\n            />\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n    return (\r\n      <ContactCardWrapper className=\"isoContactCard\">\r\n        <div className=\"isoContactCardHead\">\r\n          <div className=\"isoPersonImage\">\r\n            <Upload\r\n              className=\"avatar-uploader\"\r\n              name=\"avatar\"\r\n              showUploadList={false}\r\n              beforeUpload={beforeUpload}\r\n              action=\"\"\r\n            >\r\n              {contact.avatar ? (\r\n                <img src={contact.avatar} alt=\"\" className=\"avatar\" />\r\n              ) : (\r\n                ''\r\n              )}\r\n              <Icon type=\"plus\" className=\"avatar-uploader-trigger\" />\r\n            </Upload>\r\n          </div>\r\n          <h1 className=\"isoPersonName\">{name}</h1>\r\n        </div>\r\n        <div className=\"isoContactInfoWrapper\">{extraInfos}</div>\r\n      </ContactCardWrapper>\r\n    );\r\n  }\r\n}\r\n","import styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\nimport { transition, borderRadius, boxShadow } from '../../settings/style-util';\r\nimport WithDirection from '../../settings/withDirection';\r\n\r\nconst WDContactListWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n\r\n  .isoNoResultMsg {\r\n    padding: 15px 20px;\r\n    text-align: center;\r\n    color: ${palette('secondary', 2)};\r\n    font-weight: 500;\r\n    font-size: 14px;\r\n  }\r\n\r\n  .isoSearchBar {\r\n    .ant-input {\r\n      width: 100%;\r\n      font-size: 14px;\r\n      font-weight: 400;\r\n      color: ${palette('text', 0)};\r\n      line-height: inherit;\r\n      height: 69px;\r\n      padding: 0 20px;\r\n      padding-left: ${props =>\r\n        props['data-rtl'] === 'rtl' ? 'inherit' : '35px'};\r\n      padding-right: ${props =>\r\n        props['data-rtl'] === 'rtl' ? '35px' : 'inherit'};\r\n      border: 0;\r\n      border-bottom: 1px solid ${palette('border', 0)};\r\n      outline: 0 !important;\r\n      overflow: hidden;\r\n      background-color: #ffffff;\r\n      ${boxShadow('none')};\r\n      ${borderRadius()};\r\n      ${transition()};\r\n\r\n      @media only screen and (max-width: 767px) {\r\n        height: 50px;\r\n      }\r\n\r\n      &:hover,\r\n      &:focus {\r\n        border-color: ${palette('border', 0)} !important;\r\n      }\r\n\r\n      &::-webkit-input-placeholder {\r\n        color: ${palette('grayscale', 0)};\r\n      }\r\n\r\n      &:-moz-placeholder {\r\n        color: ${palette('grayscale', 0)};\r\n      }\r\n\r\n      &::-moz-placeholder {\r\n        color: ${palette('grayscale', 0)};\r\n      }\r\n      &:-ms-input-placeholder {\r\n        color: ${palette('grayscale', 0)};\r\n      }\r\n    }\r\n  }\r\n\r\n  .ant-input-suffix {\r\n    left: 10px;\r\n    right: auto;\r\n    color: ${palette('grayscale', 0)};\r\n  }\r\n\r\n  .isoContactList {\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    max-height: 100%;\r\n    overflow: hidden;\r\n    overflow-y: auto;\r\n\r\n    .contactListScrollbar {\r\n      height: calc(100vh - 200px);\r\n\r\n      @media only screen and (max-width: 767px) {\r\n        max-height: 60vh;\r\n      }\r\n    }\r\n\r\n    .isoSingleContact {\r\n      width: 100%;\r\n      margin: 0;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: flex-start;\r\n      flex-shrink: 0;\r\n      padding: 15px 20px;\r\n      padding-right: ${props =>\r\n        props['data-rtl'] === 'rtl' ? '20px' : '35px'};\r\n      padding-left: ${props => (props['data-rtl'] === 'rtl' ? '35px' : '20px')};\r\n      border-bottom: 1px solid ${palette('border', 0)};\r\n      text-align: ${props => (props['data-rtl'] === 'rtl' ? 'right' : 'left')};\r\n      position: relative;\r\n      cursor: pointer;\r\n\r\n      &.active {\r\n        background-color: ${palette('secondary', 1)};\r\n      }\r\n\r\n      &:last-child {\r\n        border-bottom: 0;\r\n      }\r\n\r\n      .isoAvatar {\r\n        width: 35px;\r\n        height: 35px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        margin-right: ${props =>\r\n          props['data-rtl'] === 'rtl' ? 'inherit' : '15px'};\r\n        margin-left: ${props =>\r\n          props['data-rtl'] === 'rtl' ? '15px' : 'inherit'};\r\n        flex-shrink: 0;\r\n        overflow: hidden;\r\n        ${borderRadius('50%')};\r\n\r\n        img {\r\n          width: 100%;\r\n          height: 100%;\r\n          object-fit: cover;\r\n        }\r\n      }\r\n\r\n      .isoContactName {\r\n        h3 {\r\n          font-size: 15px;\r\n        }\r\n      }\r\n\r\n      .isoNoteText {\r\n        width: calc(100% - 60px);\r\n        margin-right: ${props =>\r\n          props['data-rtl'] === 'rtl' ? 'inherit' : '20px'};\r\n        margin-left: ${props =>\r\n          props['data-rtl'] === 'rtl' ? '20px' : 'inherit'};\r\n        padding: 20px 0;\r\n        cursor: pointer;\r\n\r\n        h3 {\r\n          width: 100%;\r\n          white-space: nowrap;\r\n          text-overflow: ellipsis;\r\n          overflow: hidden;\r\n          color: ${palette('secondary', 2)};\r\n          font-weight: 500;\r\n        }\r\n\r\n        .isoNoteCreatedDate {\r\n          font-size: 13px;\r\n          color: ${palette('grayscale', 0)};\r\n        }\r\n      }\r\n\r\n      .isoDeleteBtn {\r\n        width: 24px;\r\n        height: 24px;\r\n        background-color: transparent;\r\n        flex-shrink: 0;\r\n        position: absolute;\r\n        top: 20px;\r\n        right: ${props => (props['data-rtl'] === 'rtl' ? 'inherit' : '5px')};\r\n        left: ${props => (props['data-rtl'] === 'rtl' ? '5px' : 'inherit')};\r\n        padding: 0;\r\n        border: 0;\r\n        font-size: 14px;\r\n        color: ${palette('grayscale', 0)};\r\n        ${transition()};\r\n\r\n        &:hover {\r\n          color: ${palette('primary', 0)};\r\n        }\r\n      }\r\n    }\r\n\r\n    .isoNotlistNotice {\r\n      font-size: 14px;\r\n      font-weight: 400;\r\n      color: ${palette('grayscale', 0)};\r\n      line-height: inherit;\r\n      padding: 30px 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ContactListWrapper = WithDirection(WDContactListWrapper);\r\n\r\nexport { ContactListWrapper };\r\n","import React, { Component } from 'react';\r\nimport IntlMessages from '../utility/intlMessages';\r\nimport { InputSearch } from '../uielements/input';\r\nimport DeleteButton from './deleteButton';\r\nimport { PropTypes } from 'prop-types';\r\nimport { ContactListWrapper } from './contactList.style';\r\nimport Scrollbar from '../utility/customScrollBar';\r\n\r\nfunction filterContacts(contacts, search) {\r\n  search = search.toUpperCase();\r\n  return search\r\n    ? contacts.filter(contact => contact.name.toUpperCase().includes(search))\r\n    : contacts;\r\n}\r\n\r\nexport default class ContactList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.singleContact = this.singleContact.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.state = {\r\n      search: '',\r\n    };\r\n  }\r\n  singleContact(contact) {\r\n    const { seectedId, deleteContact, changeContact } = this.props;\r\n    const activeClass = seectedId === contact.id ? 'active' : '';\r\n    const onChange = () => changeContact(contact.id);\r\n    return (\r\n      <div\r\n        key={contact.id}\r\n        className={`${activeClass} isoSingleContact`}\r\n        onClick={onChange}\r\n      >\r\n        <div className=\"isoAvatar\">\r\n          {contact.avatar ? <img alt=\"#\" src={contact.avatar} /> : ''}\r\n        </div>\r\n        <div className=\"isoContactName\">\r\n          <h3>{contact.name ? contact.name : 'No Name'}</h3>\r\n        </div>\r\n        <DeleteButton deleteContact={deleteContact} contact={contact} />\r\n      </div>\r\n    );\r\n  }\r\n  onChange(event) {\r\n    this.setState({ search: event.target.value });\r\n  }\r\n  render() {\r\n    const { search } = this.state;\r\n    const contacts = filterContacts(this.props.contacts, search);\r\n    return (\r\n      <ContactListWrapper className=\"isoContactListWrapper\">\r\n        <InputSearch\r\n          placeholder={this.context.intl.formatMessage({\r\n            id: 'contactlist.searchContacts',\r\n          })}\r\n          value={search}\r\n          onChange={this.onChange}\r\n          className=\"isoSearchBar\"\r\n        />\r\n        {contacts && contacts.length > 0 ? (\r\n          <div className=\"isoContactList\">\r\n            <Scrollbar className=\"contactListScrollbar\">\r\n              {contacts.map(contact => this.singleContact(contact))}\r\n            </Scrollbar>\r\n          </div>\r\n        ) : (\r\n          <span className=\"isoNoResultMsg\">\r\n            {<IntlMessages id=\"Component.contacts.noOption\" />}\r\n          </span>\r\n        )}\r\n      </ContactListWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nContactList.contextTypes = {\r\n  intl: PropTypes.object.isRequired,\r\n};\r\n","export const otherAttributes = [\r\n \r\n  { title: 'First Name', value: 'firstName', type: 'phoneNumber' },\r\n  { title: 'Last Name', value: 'lastName', type: 'phoneNumber' },\r\n  { title: 'Email', value: 'mobile', type: 'phoneNumber' },\r\n  { title: 'Gender', value: 'home', type: 'phoneNumber' },\r\n  { title: 'Status', value: 'company', type: 'company' },\r\n  { title: 'SG Handicap', value: 'work', type: 'phoneNumber' }\r\n  \r\n];\r\n\r\nconst contactList = JSON.parse(\r\n  `[{\r\n  \"id\": 22143,\r\n  \"avatar\": \"https://s3.amazonaws.com/uifaces/faces/twitter/dvdwinden/128.jpg\",\r\n  \"firstName\": \"Benjamin\",\r\n  \"lastName\": \"Jacobi\",\r\n  \"name\": \"Benjamin Jacobi\",\r\n  \"mobile\": \"8888888888\",\r\n  \"home\": \"555555555\",\r\n  \"company\": \"Casper Inc\",\r\n  \"work\": \"777777777777\"\r\n}]`\r\n);\r\n\r\nexport default class fakeData {\r\n  constructor(size = 10) {\r\n    this.size = size;\r\n    this.datas = [];\r\n  }\r\n  dataModel(index) {\r\n    return contactList[index];\r\n  }\r\n  getObjectAt(index) {\r\n    if (index < 0 || index > this.size) {\r\n      return undefined;\r\n    }\r\n    if (this.datas[index] === undefined) {\r\n      this.datas[index] = this.dataModel(index);\r\n    }\r\n    return this.datas[index];\r\n  }\r\n  getAll() {\r\n    if (this.datas.length < this.size) {\r\n      for (let i = 0; i < this.size; i++) {\r\n        this.getObjectAt(i);\r\n      }\r\n    }\r\n    return this.datas\r\n      .slice()\r\n      .sort(\r\n        (contact1, contact2) =>\r\n          `${contact1.firstName}${contact1.LastName}`.toUpperCase() >\r\n          `${contact2.firstName}${contact2.LastName}`.toUpperCase()\r\n      );\r\n  }\r\n\r\n  getSize() {\r\n    return this.size;\r\n  }\r\n}\r\n","import styled from \"styled-components\";\r\nimport { palette } from \"styled-theme\";\r\nimport { transition, borderRadius } from \"../../settings/style-util\";\r\nimport WithDirection from \"../../settings/withDirection\";\r\n\r\nconst WDContactsWrapper = styled.div`\r\n  padding: 50px 35px;\r\n  display: flex;\r\n  ${\"\" /* max-height: calc(100vh - 130px); */} @media only screen and (max-width: 767px) {\r\n    padding: 50px 20px;\r\n    flex-direction: column;\r\n    height: auto;\r\n  }\r\n\r\n  @media only screen and (min-width: 767px) and (max-width: 990px) {\r\n    padding: 40px 30px;\r\n  }\r\n\r\n  .isoContactListBar {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-shrink: 0;\r\n    background: #ffffff;\r\n    border: 1px solid ${palette(\"border\", 0)};\r\n    width: 320px;\r\n    overflow: hidden;\r\n    overflow-y: auto;\r\n\r\n    @media only screen and (max-width: 767px) {\r\n      width: auto !important;\r\n      margin-bottom: 20px;\r\n      min-width: 0 !important;\r\n      max-width: 100% !important;\r\n      flex: 0 !important;\r\n    }\r\n\r\n    @media only screen and (min-width: 767px) and (max-width: 990px) {\r\n      width: 270px !important;\r\n      flex: 0 0 270px !important;\r\n    }\r\n  }\r\n\r\n  .isoContactBoxWrapper {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    background-color: #ffffff;\r\n    border: 1px solid ${palette(\"border\", 0)};\r\n    border-left: ${props => (props[\"data-rtl\"] === \"rtl\" ? \"inherit\" : \"0\")};\r\n    border-right: ${props => (props[\"data-rtl\"] === \"rtl\" ? \"0\" : \"inherit\")};\r\n    position: relative;\r\n\r\n    .isoContactBox {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n\r\n    .contactBoxScrollbar {\r\n      height: calc(100vh - 225px);\r\n    }\r\n\r\n    .isoContactControl {\r\n      width: 100%;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: flex-start;\r\n      flex-shrink: 0;\r\n      padding: 30px;\r\n      background-color: #ffffff;\r\n\r\n      @media only screen and (max-width: 767px) {\r\n        padding: 30px 20px;\r\n      }\r\n\r\n      button:not(.isoAddContactBtn) {\r\n        font-size: 16px;\r\n        color: ${palette(\"secondary\", 0)};\r\n        width: 35px;\r\n        height: 35px;\r\n        display: flex;\r\n        align-items: center;\r\n        text-align: center;\r\n        justify-content: center;\r\n        background-color: #ffffff;\r\n        outline: 0;\r\n        padding: 0;\r\n        border: 1px solid ${palette(\"border\", 0)};\r\n        margin-left: ${props =>\r\n          props[\"data-rtl\"] === \"rtl\" ? \"inherit\" : \"-1px\"};\r\n        margin-right: ${props =>\r\n          props[\"data-rtl\"] === \"rtl\" ? \"-1px\" : \"inherit\"};\r\n        cursor: pointer;\r\n        ${borderRadius()};\r\n        ${transition()};\r\n\r\n        i {\r\n          width: 100%;\r\n        }\r\n\r\n        span {\r\n          display: none;\r\n        }\r\n\r\n        &:first-child {\r\n          margin-left: ${props =>\r\n            props[\"data-rtl\"] === \"rtl\" ? \"inherit\" : \"0\"};\r\n          margin-right: ${props =>\r\n            props[\"data-rtl\"] === \"rtl\" ? \"0\" : \"inherit\"};\r\n        }\r\n\r\n        &:hover {\r\n          color: ${palette(\"primary\", 0)};\r\n          background-color: ${palette(\"grayscale\", 7)};\r\n        }\r\n      }\r\n\r\n      .isoAddContactBtn {\r\n        background-color: ${palette(\"primary\", 0)};\r\n        border: 0;\r\n        height: 30px;\r\n        padding: 0 15px;\r\n        margin-left: ${props =>\r\n          props[\"data-rtl\"] === \"rtl\" ? \"inherit\" : \"auto\"};\r\n        margin-right: ${props =>\r\n          props[\"data-rtl\"] === \"rtl\" ? \"auto\" : \"inherit\"};\r\n        ${borderRadius(\"3px\")};\r\n        ${transition()};\r\n\r\n        span {\r\n          font-size: 12px;\r\n          font-weight: 400;\r\n          padding: 0;\r\n          text-transform: uppercase;\r\n          color: #ffffff;\r\n        }\r\n\r\n        &:hover {\r\n          background-color: ${palette(\"primary\", 1)};\r\n        }\r\n      }\r\n    }\r\n    .jaMgbw .isoContactInfoWrapper .isoContactCardInfos {\r\n      width: 100%;\r\n      display: -webkit-box;\r\n      display: -webkit-flex;\r\n      display: -ms-flexbox;\r\n      display: flex;\r\n      -webkit-flex-shrink: 0;\r\n      -ms-flex-negative: 0;\r\n      flex-shrink: 0;\r\n      -webkit-align-items: baseline;\r\n      -webkit-box-align: baseline;\r\n      -ms-flex-align: baseline;\r\n      align-items: baseline;\r\n      -webkit-flex-direction: row;\r\n      -ms-flex-direction: row;\r\n      flex-direction: row;\r\n      margin-bottom: 15px;\r\n  }\r\n\r\n  .jaMgbw {\r\n    width: 100%;\r\n    height: calc(100% - 145px);\r\n    padding: 0 35px;\r\n    display: -webkit-flex;\r\n    display: -ms-flex;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n}\r\n\r\n    .edit-contact-wrapper {\r\n      padding:20px;\r\n      width: 100%;\r\n    }\r\n    .editcontact-field  {\r\n      margin-bottom: 20px;\r\n    }\r\n  \r\n    .editcontact-field  input[type=\"radio\"]{\r\n      margin-right: 20px;\r\n      margin-left:10px;\r\n      vertical-align: middle;\r\n    }\r\n    .editcontact-field label {\r\n      width: 20%;\r\n      margin-right: 20px;\r\n      min-width: 80px;\r\n      margin-right: 20px;\r\n      display: inline-block;\r\n    }\r\n\r\n    .editcontact-field input[type=\"text\"], select{\r\n      font-size: 14px;\r\n      font-weight: 400;\r\n      color: #979797;\r\n      line-height: inherit;\r\n      height: 36px;\r\n      padding: 0 15px;\r\n      margin: 0;\r\n      border: 1px solid #e9e9e9;\r\n      outline: 0 !important;\r\n      overflow: hidden;\r\n      background-color: #ffffff;\r\n      -webkit-box-shadow: none;\r\n      -moz-box-shadow: none;\r\n      box-shadow: none;\r\n      -webkit-border-radius: 3px;\r\n      -moz-border-radius: 3px;\r\n      -ms-transition: 3px;\r\n      -o-border-radius: 3px;\r\n      border-radius: 3px;\r\n      -webkit-transition: all 0.3s cubic-bezier(0.215,0.61,0.355,1);\r\n      -moz-transition: all 0.3s cubic-bezier(0.215,0.61,0.355,1);\r\n      -ms-transition: all 0.3s cubic-bezier(0.215,0.61,0.355,1);\r\n      -o-transition: all 0.3s cubic-bezier(0.215,0.61,0.355,1);\r\n      -webkit-transition: all 0.3s cubic-bezier(0.215,0.61,0.355,1);\r\n      transition: all 0.3s cubic-bezier(0.215,0.61,0.355,1);\r\n      box-sizing: content-box;\r\n      width: 62%;\r\n    }\r\n\r\n  }\r\n`;\r\n\r\nconst ContactsWrapper = WithDirection(WDContactsWrapper);\r\n\r\nexport { ContactsWrapper };\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class EditProfile extends Component { \r\n    handleChange = (event) => {\r\n        this.setState({value: event.target.value});\r\n      }\r\n    render() {\r\n        return(\r\n           <div className=\"isoContactCard sc-jzJRlG jaMgbw \">\r\n      <div className=\"isoContactCardHead\"><div className=\"isoPersonImage\"><img alt=\"#\" src=\"https://s3.amazonaws.com/uifaces/faces/twitter/dvdwinden/128.jpg\" /></div><h1 className=\"isoPersonName\">Benjamin Jacobi</h1></div>\r\n          <div className=\"isoContactInfoWrapper edit-contact-wrapper\">\r\n            \r\n            <div className=\"editcontact-field\">\r\n                <label>First Name</label>\r\n                <input type=\"text\" value=\"shashank\" onChange={this.handleChange}  />\r\n            </div>\r\n            <div className=\"editcontact-field\">\r\n                <label>Last Name</label>\r\n                <input type=\"text\" value=\"Jaiswal\" onChange={this.handleChange}  />\r\n            </div>\r\n            <div className=\"editcontact-field\">\r\n                <label>First Name</label>\r\n                <input type=\"text\" value=\"shashank@gmail.com\" onChange={this.handleChange}  />\r\n            </div>\r\n            <div className=\"editcontact-field\">\r\n                <label>First Name</label>\r\n                MALE<input type=\"radio\" name=\"gender\" value=\"male\"  onChange={this.handleChange} />\r\n                Female<input type=\"radio\" name=\"gender\" value=\"female\"  onChange={this.handleChange} />\r\n            </div>\r\n            <div className=\"editcontact-field\">\r\n                <label>SG Handicap</label>\r\n                Yes<input type=\"radio\" name=\"handicap\" value=\"Yes\"  onChange={this.handleChange}/>\r\n                No<input type=\"radio\" name=\"handicap\" value=\"No\"  onChange={this.handleChange}/>\r\n            </div>\r\n         \r\n            <div className=\"editcontact-field\">\r\n                <label>Status </label>\r\n               <select  onChange={this.handleChange}>\r\n                    <option value=\"grapefruit\">AMATEUR</option>\r\n                    <option value=\"lime\">PRO</option>\r\n                    <option value=\"coconut\">COACH</option>\r\n                    <option value=\"mango\">TEAM COACH</option>\r\n                    <option value=\"mango\">INSTITUTIONS</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\n\r\nimport contactAction from \"../../redux/contacts/actions\";\r\nimport { Layout, Icon } from \"antd\";\r\nimport Button from \"../../components/uielements/button\";\r\nimport ContactList from \"../../components/contacts/contactList\";\r\nimport SingleContactView from \"../../components/contacts/singleView\";\r\nimport EditContactView from \"../../components/contacts/editView\";\r\nimport DeleteButton from \"../../components/contacts/deleteButton\";\r\nimport { otherAttributes } from \"./fakeData\";\r\nimport IntlMessages from \"../../components/utility/intlMessages\";\r\nimport { ContactsWrapper } from \"./contacts.style\";\r\nimport Scrollbar from \"../../components/utility/customScrollBar.js\";\r\nimport EditProfile from \"./editProfile\";\r\nimport { connect } from \"react-redux\";\r\nimport actions from './../../redux/Profile/actions';\r\nconst {\r\n  changeContact,\r\n  addContact,\r\n  editContact,\r\n  deleteContact,\r\n  viewChange\r\n} = contactAction;\r\n\r\nconst { Content } = Layout;\r\nclass Profile extends Component {\r\n\r\n  // componentDidMount() {\r\n  //   this.props.getDataProfile();\r\n  // }\r\n\r\n   \r\n  render() {\r\n\r\n    // const {\r\n    //   Overview:\r\n    //   {\r\n    //     recollectionData:\r\n    //     {\r\n    //       data_recollection,\r\n          \r\n    //     } = []\r\n    //   } = []\r\n    // } = this.props;\r\n\r\n    // console.log(\"redux profile data\", data_recollection)\r\n\r\n\r\n    const {\r\n      contacts,\r\n      seectedId,\r\n      editView,\r\n      changeContact,\r\n      addContact,\r\n      editContact,\r\n      deleteContact,\r\n      viewChange\r\n    } = this.props;\r\n    \r\n    const selectedContact = seectedId\r\n      ? contacts.filter(contact => contact.id === seectedId)[0]\r\n      : null;\r\n    const onVIewChange = () => viewChange(!editView);\r\n    console.log(\"selectedContact\",selectedContact,editContact);\r\n    const myContact = {\r\n        firstName:\"asdasd\",\r\n        lastName:\"aaa\",\r\n        email:\"abc@gmail.com\",\r\n    };\r\n    return (\r\n\r\n\r\n      <ContactsWrapper\r\n        className=\"isomorphicContacts\"\r\n        style={{ background: \"none\" }}\r\n      >\r\n       \r\n        <Layout className=\"isoContactBoxWrapper\">\r\n          {selectedContact ? (\r\n            <Content className=\"isoContactBox\">\r\n              <div className=\"isoContactControl\">\r\n                <Button type=\"button\" onClick={onVIewChange}>\r\n                  {editView ? <Icon type=\"check\" /> : <Icon type=\"edit\" />}{\" \"}\r\n                </Button>\r\n                <DeleteButton\r\n                  deleteContact={deleteContact}\r\n                  contact={selectedContact}\r\n                />\r\n       \r\n              </div>\r\n\r\n              <Scrollbar className=\"contactBoxScrollbar\">\r\n                {editView ? (\r\n                  <EditProfile contact={myContact} />\r\n                ) : (\r\n                  <SingleContactView\r\n                    contact={selectedContact}\r\n                    otherAttributes={otherAttributes}\r\n                  />\r\n                )}\r\n              </Scrollbar>\r\n            </Content>\r\n          ) : (\r\n            <div className=\"isoContactControl\">\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={addContact}\r\n                className=\"isoAddContactBtn\"\r\n              >\r\n                <IntlMessages id=\"contactlist.addNewContact\" />\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </Layout>\r\n      </ContactsWrapper>\r\n\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    console.log(\"satte\",state);\r\n  const { contacts, seectedId, editView } = state.Contacts;\r\n  return {\r\n    contacts,\r\n    seectedId,\r\n    editView\r\n  };\r\n}\r\nexport default connect(mapStateToProps, {\r\n  changeContact,\r\n  addContact,\r\n  editContact,\r\n  deleteContact,\r\n  viewChange\r\n})(Profile);\r\n\r\n// const mapStateToProps = state => {\r\n//   return state;\r\n// };\r\n\r\n\r\n// export default connect(mapStateToProps, actions)(Profile);\r\n"],"sourceRoot":""}