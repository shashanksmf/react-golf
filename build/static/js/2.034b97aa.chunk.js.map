{"version":3,"sources":["../node_modules/chart.js/src/helpers/index.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/lodash/_setToArray.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/chart.js/src/core/core.element.js","../node_modules/chart.js/src/core/core.scaleService.js","../node_modules/chart.js/src/elements/index.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/helpers/helpers.core.js","../node_modules/chart.js/src/chart.js","../node_modules/chartjs-color/index.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/platforms/platform.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.tooltip.js","../node_modules/chart.js/src/core/core.js","../node_modules/chart.js/src/helpers/helpers.easing.js","../node_modules/chart.js/src/helpers/helpers.canvas.js","../node_modules/chart.js/src/helpers/helpers.options.js","../node_modules/chart.js/src/core/core.helpers.js","../node_modules/color-convert/index.js","../node_modules/color-convert/conversions.js","../node_modules/chartjs-color-string/color-string.js","../node_modules/color-name/index.js","../node_modules/chart.js/src/elements/element.arc.js","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.js","../node_modules/chart.js/src/elements/element.rectangle.js","../node_modules/chart.js/src/platforms/platform.basic.js","../node_modules/chart.js/src/platforms/platform.dom.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js","../node_modules/chart.js/src/controllers/controller.bar.js","../node_modules/chart.js/src/controllers/controller.bubble.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/controllers/controller.line.js","../node_modules/chart.js/src/controllers/controller.polarArea.js","../node_modules/chart.js/src/controllers/controller.radar.js","../node_modules/chart.js/src/controllers/controller.scatter.js","../node_modules/chart.js/src/charts/Chart.Bar.js","../node_modules/chart.js/src/charts/Chart.Bubble.js","../node_modules/chart.js/src/charts/Chart.Doughnut.js","../node_modules/chart.js/src/charts/Chart.Line.js","../node_modules/chart.js/src/charts/Chart.PolarArea.js","../node_modules/chart.js/src/charts/Chart.Radar.js","../node_modules/chart.js/src/charts/Chart.Scatter.js","../node_modules/chart.js/src/plugins/index.js","../node_modules/chart.js/src/plugins/plugin.filler.js","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.title.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js"],"names":["module","exports","__webpack_require__","easing","canvas","options","helpers","_set","scope","values","merge","this","set","index","result","Array","size","forEach","value","process","d","__webpack_exports__","Doughnut","Pie","Line","Bar","HorizontalBar","Radar","Polar","Bubble","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_5__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_5___default","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","_temp","_this","_len","args","_key","apply","concat","handleOnClick","event","chartInstance","_this$props","props","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","ref","element","componentWillMount","undefined","componentDidMount","renderChart","componentDidUpdate","redraw","destroy","updateChart","shouldComponentUpdate","nextProps","_props","type","plugins","legend","height","width","nextData","transformDataProp","shadowDataProp","componentWillUnmount","data","memoizeDataProps","datasets","map","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","dataset","label","console","error","_this2","a","configMerge","currentDatasets","config","nextDatasets","currentDatasetsIndexed","next","current","splice","point","pid","otherProps","rest","update","_props2","node","defaultProps","render","_props3","id","createElement","onClick","Component","propTypes","oneOfType","object","func","isRequired","number","arrayOf","bool","propName","componentName","controllers","Error","display","position","_React$Component2","_this4","_ref","_React$Component3","_this6","_ref2","_React$Component4","_this8","_ref3","_React$Component5","_this10","_ref4","_React$Component6","_this12","_ref5","_React$Component7","_this14","_ref6","_React$Component8","_this16","_ref7","_React$Component9","_this18","_ref8","_React$Component10","Scatter","_this20","_ref9","defaults","color","Element","configuration","extend","initialize","hidden","pivot","me","_view","clone","_model","_start","transition","ease","model","start","view","ilen","actual","origin","c0","c1","valid","mix","rgbString","isFinite","interpolate","tooltipPosition","x","y","hasValue","isNumber","inherits","layouts","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","scale","updateScaleDefaults","additions","addScalesToLayout","chart","each","scales","fullWidth","weight","addBox","Arc","Point","Rectangle","filterByPosition","array","where","v","sortByWeight","reverse","_tmpIndex_","sort","b","v0","v1","item","boxes","push","removeBox","layoutItem","configure","prop","layoutOptions","layout","padding","toPadding","leftPadding","left","rightPadding","right","topPadding","top","bottomPadding","bottom","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartWidth","chartHeight","chartAreaHeight","verticalBoxWidth","horizontalBoxHeight","maxChartAreaWidth","maxChartAreaHeight","minBoxSizes","box","minSize","isHorizontal","horizontal","maxHorizontalLeftPadding","maxHorizontalRightPadding","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","getPadding","boxPadding","Math","max","verticalBox","totalLeftBoxesWidth","totalRightBoxesWidth","totalTopBoxesHeight","totalBottomBoxesHeight","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","chartArea","minBox","Ticks","labelsFromTicks","ticks","labels","getLineValue","offsetGridLines","lineValue","getPixelForTick","computeTextSize","context","tick","font","isArray","longestText","measureText","parseFontOptions","valueOrDefault","globalDefaults","global","fontSize","defaultFontSize","style","fontStyle","defaultFontStyle","family","fontFamily","defaultFontFamily","fontString","parseLineHeight","toLineHeight","lineHeight","offset","gridLines","lineWidth","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","borderDash","borderDashOffset","scaleLabel","labelString","beginAtZero","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","callback","formatters","minor","major","paddingLeft","paddingTop","paddingRight","paddingBottom","getTicks","_ticks","mergeTicksOptions","beforeUpdate","maxWidth","maxHeight","margins","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","noop","tickOpts","userCallback","ctx","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","cos","sin","opts","scaleLabelOpts","gridLineOpts","isFullWidth","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","longestLabelWidth","labelHeight","min","firstLabelWidth","lastLabelWidth","handleMargins","getRightValue","rawValue","isNullOrUndef","NaN","getLabelForIndex","getPixelForValue","getValueForPixel","pixel","finalVal","round","innerHeight","getPixelForDecimal","decimal","valueOffset","getBasePixel","getBaseValue","_autoSkip","skipRatio","maxTicks","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","maxTicksLimit","floor","draw","optionMajorTicks","isRotated","tickFontColor","fontColor","defaultFontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","scaleLabelPadding","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","tx1","ty1","tx2","ty2","x1","y1","x2","y2","labelX","labelY","zeroLineIndex","valueAtIndexOrDefault","textAlign","textBaseline","labelYOffset","xLineValue","aliasPixel","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","rotation","itemToDraw","save","strokeStyle","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","restore","translate","rotate","fillStyle","lineCount","fillText","scaleLabelX","scaleLabelY","halfLineHeight","PI","linear","tickValue","delta","abs","logDelta","log10","tickString","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","pow","uid","toString","isObject","defaultValue","fn","thisArg","loopable","len","arrayEquals","a0","a1","klen","k","_merger","tval","sval","_mergerIf","mergeIf","sources","merger","setFn","extensions","ChartElement","Surrogate","__super__","callCallback","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","Chart","Animation","animationService","elements","Interaction","platform","Scale","scaleService","Tooltip","register","window","Legend","_element","Title","title","pluginService","PluginBase","canvasHelpers","layoutService","convert","string","Color","rgb","hsl","hsv","hwb","cmyk","alpha","vals","getRgba","setValues","getHsla","getHwb","r","red","l","lightness","w","whiteness","c","cyan","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","val","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","hexString","rgbaString","percentString","hslString","hslaString","hwbString","keyword","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","degrees","mixinColor","p","w1","w2","toJSON","slice","spaces","maxes","getValues","space","charAt","capped","chans","sname","svalues","currentStep","numSteps","onAnimationProgress","onAnimationComplete","defineProperty","get","animation","duration","onProgress","onComplete","frameDuration","animations","dropFrames","request","addAnimation","lazy","animating","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","startTime","Date","now","framesToDrop","advance","endTime","count","getRelativePosition","e","native","parseVisibleItems","handler","meta","j","jlen","isDatasetVisible","getDatasetMeta","skip","getIntersectItems","inRange","getNearestItems","intersect","distanceMetric","minDistance","Number","POSITIVE_INFINITY","nearestItems","center","getCenterPoint","distance","getDistanceMetricForAxis","axis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","indexMode","items","datasetIndex","_index","modes","single","_datasetIndex","x-axis","nearest","ret","getArea","intersectsItem","inXRange","inYRange","basic","dom","implementation","_enabled","acquireContext","releaseContext","addEventListener","removeEventListener","_plugins","_cacheId","plugin","unregister","idx","clear","getAll","notify","hook","descriptor","params","method","descriptors","cache","$plugins","_invalidate","tooltips","enabled","custom","mode","backgroundColor","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","borderColor","borderWidth","callbacks","beforeTitle","tooltipItems","labelCount","xLabel","afterTitle","beforeBody","beforeLabel","tooltipItem","yLabel","labelColor","labelTextColor","_options","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","el","pos","eventPosition","nearestElement","distanceBetweenPoints","tp","mergeOpacity","colorString","opacity","pushOrConcat","base","toPush","splitNewlines","str","String","split","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","getBeforeAfterBodyLines","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","xScale","yScale","existingModel","active","_active","_data","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","_xScale","_yScale","_scale","filter","itemSort","_chart","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","line","getTooltipSize","vm","paddingAndSize","radiusAndPadding","getBackgroundPoint","lf","rf","olf","orf","yf","midX","midY","determineAlignment","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","pt","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","fillRect","strokeRect","drawFooter","drawBackground","radius","quadraticCurveTo","closePath","fill","hasTooltipContent","handleEvent","getElementsAtEventForMode","responsive","responsiveAnimationDuration","maintainAspectRatio","events","hover","onHover","animationDuration","defaultColor","showLines","construct","effects","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","s","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","clearRect","roundedRect","arcTo","rect","drawPoint","edgeLength","xOffset","yOffset","isNaN","arc","SQRT2","leftX","topY","sideSize","drawImage","clipArea","area","clip","unclipArea","previous","flip","steppedLine","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","drawRoundedRectangle","matches","match","resolve","inputs","parseMaxStyle","styleValue","parentProperty","valueInPixels","parseInt","parentNode","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","document","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","scaleMerge","slen","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","parseFloat","almostEquals","epsilon","almostWhole","rounded","NEGATIVE_INFINITY","sign","exponent","log","LOG10E","powerOf10","toDegrees","radians","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","pixelWidth","splineCurve","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","splineCurveMonotone","points","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","nextItem","loop","previousItem","niceNum","range","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","mouseX","mouseY","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getStyle","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","_calculatePadding","container","parentDimension","parent","host","getMaximumWidth","clientWidth","cw","getMaximumHeight","clientHeight","h","ch","property","currentStyle","getPropertyValue","retinaScale","forceRatio","pixelRatio","devicePixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","textWidth","numberOfLines","CanvasGradient","getHoverColor","colorValue","CanvasPattern","conversions","Converter","arg","pair","exec","from","to","convs","routeSpace","fspace","rgb2hsl","g","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","reverseKeywords","JSON","stringify","rgb2xyz","rgb2lab","xyz","z","hsl2rgb","t1","t2","t3","hsv2rgb","hi","f","q","hwb2rgb","wh","bl","cmyk2rgb","m","xyz2rgb","xyz2lab","lab2xyz","lab","lab2lch","lab2rgb","lch2lab","lch","hr","keyword2rgb","cssKeywords","rgb2lch","hsl2hsv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2lch","lch2xyz","lch2rgb","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","colorNames","rgba","percentaString","hsla","num","hexDouble","toUpperCase","getRgb","getHsl","getAlpha","reverseNames","name","inLabelRange","hoverRadius","chartX","chartY","pointRelativePosition","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","sA","eA","lineJoin","borderCapStyle","borderJoinStyle","capBezierPoints","currentVM","spanGaps","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","xRange","hitRadius","pointStyle","hoverBorderWidth","isVertical","bar","getBarBounds","halfWidth","halfHeight","rectangle","borderSkipped","signX","signY","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","corners","startCorner","cornerAt","corner","bounds","getContext","EXPANDO_KEY","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","eventListenerOptions","supports","passive","_addEventListener","listener","_removeEventListener","createEvent","nativeEvent","addResizeListener","ticking","expando","resizer","cls","cssText","className","innerHTML","expand","childNodes","shrink","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","css","keyframes","_style","setAttribute","getElementsByTagName","appendChild","createTextNode","getElementById","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","removeAttribute","proxies","fromNativeEvent","addEvent","removeEvent","positionIsHorizontal","types","instances","initConfig","_bufferedRender","controller","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","newHeight","newSize","onResize","scalesOptions","scaleOptions","xAxes","xAxisOptions","yAxes","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","updateIndex","linkScales","ControllerClass","resetElements","reset","newOptions","buildOrUpdateElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","easingValue","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","_meta","xAxisID","yAxisID","getVisibleDatasetCount","generateLegend","legendCallback","unbindEvents","toBase64Image","toDataURL","_chartInstance","listeners","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","Controller","arrayEvents","unlistenArrayEvents","stub","_chartjs","DatasetController","datasetElementType","dataElementType","addElements","getMeta","getDataset","getScaleForId","scaleID","createMetaDataset","createMetaData","metaData","addElementAndReset","updateElement","res","resyncElements","removeHoverStyle","$previousStyle","setHoverStyle","hoverBackgroundColor","hoverBorderColor","numMeta","numData","insertElements","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","LinearScaleBase","handleTickRangeOptions","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","stepSize","fixedStepSize","generationOptions","dataRange","factor","spacing","niceRange","ceil","niceMin","niceMax","numSpaces","generateTicks","end","ticksAsNumbers","DatasetScale","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","defaultConfig","LinearScale","IDMatches","hasStacks","stacked","stack","valuesPerStack","join","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","tickFontSize","rightValue","innerDimension","LogarithmicScale","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","tickValues","_getFirstTickValue","firstTickValue","animate","angleLines","circular","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","pointLabels","getValueCount","getPointLabelFontOptions","pointLabelOptions","determineLimits","getTextAlignForAngle","text","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","LinearRadialScale","xCenter","yCenter","drawingArea","largestPossibleRadius","pointPosition","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","getDistanceFromCenterForValue","scalingFactor","distanceFromCenter","thisAngle","getPointPositionForValue","getBasePosition","tickFontStyle","tickFontFamily","tickLabelFont","yCenterOffset","drawRadiusLine","angleLineOpts","pointLabelOpts","outerDistance","outerPosition","pointLabelPosition","pointLabelFontColor","drawPointLabels","moment","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","table","skey","tkey","mid","i0","i1","lo","lookup","prev","span","momentify","parser","format","parse","input","time","startOf","valueOf","determineMajorUnit","unit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","last","milliseconds","determineStepSize","TimeScale","warn","timestamp","timestamps","endOf","_horizontal","_table","_timestamps","getLabelCapacity","_unit","diff","as","determineUnitForFormatting","_majorUnit","distribution","curr","buildLookupTable","_offsets","upper","lower","computeOffsets","_labelFormat","momentDate","hasTime","determineLabelFormat","majorUnit","ticksFromTimestamps","tooltipFormat","tickFormatFunction","formatOverride","formats","displayFormats","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","getLabelWidth","ticksOpts","tickLabelWidth","sinRotation","exampleTime","exampleLabel","innerWidth","displayFormat","categoryPercentage","barPercentage","rects","_ruler","getRuler","rectangleOptions","datasetLabel","updateElementGeometry","vscale","getValueScale","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","stacks","getStackCount","getStackIndex","stackCount","pixels","barThickness","computeMinSampleSize","imeta","ivalue","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","horizontalBar","dataPoint","bubble","_resolveElementOptions","dsIndex","dataIndex","animateRotate","animateScale","generateLabels","ds","arcOpts","legendItem","cutoutPercentage","circumference","dataLabel","doughnut","pie","getRingIndex","ringIndex","availableWidth","availableHeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","offsetX","offsetY","total","calculateTotal","animationOpts","centerX","centerY","calculateCircumference","elementOpts","arcs","hoverWidth","lineEnabled","showLine","lineElementOptions","lineTension","stepped","cubicInterpolationMode","updateBezierControlPoints","getPointBackgroundColor","pointBackgroundColor","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","getPointRotation","pointRotation","pointOptions","pointRadius","pointHitRadius","calculatePointY","dsMeta","sumPos","sumNeg","stackedRightValue","controlPoints","capControlPoint","halfBorderWidth","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointHoverRadius","polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","datasetStartAngle","resetRadius","radar","pointElementOptions","scatter","PolarArea","filler","propagate","mappers","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","visible","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","p0","p1","d0","d1","doFill","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","lineDash","legendHitBoxes","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","globalDefault","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","isLineWidthZero","offSet","drawLegendBox","halfFontSize","xLeft","yMiddle","lh","hitBox","createNewLegendAndAttach","legendOpts","beforeInit","afterEvent","titleX","titleY","titleFont","createNewTitleBlockAndAttach","titleOpts","titleBlock","baseAssignValue","keyBy","createAggregator","arrayAggregator","baseAggregator","baseIteratee","setter","initializer","iteratee","accumulator","baseEach"],"mappings":"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","file":"static/js/2.034b97aa.chunk.js","sourcesContent":["'use strict';\n\nmodule.exports = require('./helpers.core');\nmodule.exports.easing = require('./helpers.easing');\nmodule.exports.canvas = require('./helpers.canvas');\nmodule.exports.options = require('./helpers.options');","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = {\n  /**\n   * @private\n   */\n  _set: function _set(scope, values) {\n    return helpers.merge(this[scope] || (this[scope] = {}), values);\n  }\n};","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport find from 'lodash/find';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.chartInstance.destroy();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this2 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this2.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        redraw = _props2.redraw,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        onElementsClick = _props3.onElementsClick,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this4 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this4.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this6 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this6.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this8 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this8.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this10 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this10.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this12 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this12.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this14 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this14.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this16 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this16.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this18 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this18.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this20 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this20.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","'use strict';\n\nvar color = require('chartjs-color');\n\nvar helpers = require('../helpers/index');\n\nfunction interpolate(start, view, model, ease) {\n  var keys = Object.keys(model);\n  var i, ilen, key, actual, origin, target, type, c0, c1;\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    target = model[key]; // if a value is added to the model after pivot() has been called, the view\n    // doesn't contain it, so let's initialize the view to the target value.\n\n    if (!view.hasOwnProperty(key)) {\n      view[key] = target;\n    }\n\n    actual = view[key];\n\n    if (actual === target || key[0] === '_') {\n      continue;\n    }\n\n    if (!start.hasOwnProperty(key)) {\n      start[key] = actual;\n    }\n\n    origin = start[key];\n    type = typeof target;\n\n    if (type === typeof origin) {\n      if (type === 'string') {\n        c0 = color(origin);\n\n        if (c0.valid) {\n          c1 = color(target);\n\n          if (c1.valid) {\n            view[key] = c1.mix(c0, ease).rgbString();\n            continue;\n          }\n        }\n      } else if (type === 'number' && isFinite(origin) && isFinite(target)) {\n        view[key] = origin + (target - origin) * ease;\n        continue;\n      }\n    }\n\n    view[key] = target;\n  }\n}\n\nvar Element = function Element(configuration) {\n  helpers.extend(this, configuration);\n  this.initialize.apply(this, arguments);\n};\n\nhelpers.extend(Element.prototype, {\n  initialize: function initialize() {\n    this.hidden = false;\n  },\n  pivot: function pivot() {\n    var me = this;\n\n    if (!me._view) {\n      me._view = helpers.clone(me._model);\n    }\n\n    me._start = {};\n    return me;\n  },\n  transition: function transition(ease) {\n    var me = this;\n    var model = me._model;\n    var start = me._start;\n    var view = me._view; // No animation -> No Transition\n\n    if (!model || ease === 1) {\n      me._view = model;\n      me._start = null;\n      return me;\n    }\n\n    if (!view) {\n      view = me._view = {};\n    }\n\n    if (!start) {\n      start = me._start = {};\n    }\n\n    interpolate(start, view, model, ease);\n    return me;\n  },\n  tooltipPosition: function tooltipPosition() {\n    return {\n      x: this._model.x,\n      y: this._model.y\n    };\n  },\n  hasValue: function hasValue() {\n    return helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n  }\n});\nElement.extend = helpers.inherits;\nmodule.exports = Element;","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('./core.layouts');\n\nmodule.exports = {\n  // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n  // use the new chart options to grab the correct scale\n  constructors: {},\n  // Use a registration function so that we can move to an ES6 map when we no longer need to support\n  // old browsers\n  // Scale config defaults\n  defaults: {},\n  registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n    this.constructors[type] = scaleConstructor;\n    this.defaults[type] = helpers.clone(scaleDefaults);\n  },\n  getScaleConstructor: function getScaleConstructor(type) {\n    return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n  },\n  getScaleDefaults: function getScaleDefaults(type) {\n    // Return the scale defaults merged with the global settings so that we always use the latest ones\n    return this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\n  },\n  updateScaleDefaults: function updateScaleDefaults(type, additions) {\n    var me = this;\n\n    if (me.defaults.hasOwnProperty(type)) {\n      me.defaults[type] = helpers.extend(me.defaults[type], additions);\n    }\n  },\n  addScalesToLayout: function addScalesToLayout(chart) {\n    // Adds each scale to the chart.boxes array to be sized accordingly\n    helpers.each(chart.scales, function (scale) {\n      // Set ILayoutItem parameters for backwards compatibility\n      scale.fullWidth = scale.options.fullWidth;\n      scale.position = scale.options.position;\n      scale.weight = scale.options.weight;\n      layouts.addBox(chart, scale);\n    });\n  }\n};","'use strict';\n\nmodule.exports = {};\nmodule.exports.Arc = require('./element.arc');\nmodule.exports.Line = require('./element.line');\nmodule.exports.Point = require('./element.point');\nmodule.exports.Rectangle = require('./element.rectangle');","'use strict';\n\nvar helpers = require('../helpers/index');\n\nfunction filterByPosition(array, position) {\n  return helpers.where(array, function (v) {\n    return v.position === position;\n  });\n}\n\nfunction sortByWeight(array, reverse) {\n  array.forEach(function (v, i) {\n    v._tmpIndex_ = i;\n    return v;\n  });\n  array.sort(function (a, b) {\n    var v0 = reverse ? b : a;\n    var v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n  });\n  array.forEach(function (v) {\n    delete v._tmpIndex_;\n  });\n}\n/**\n * @interface ILayoutItem\n * @prop {String} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {Function} update - Takes two parameters: width and height. Returns size of item\n * @prop {Function} getPadding -  Returns an object with padding on the edges\n * @prop {Number} width - Width of item. Must be valid after update()\n * @prop {Number} height - Height of item. Must be valid after update()\n * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\n\n\nmodule.exports = {\n  defaults: {},\n\n  /**\n   * Register a box to a chart.\n   * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n   * @param {Chart} chart - the chart to use\n   * @param {ILayoutItem} item - the item to add to be layed out\n   */\n  addBox: function addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    } // initialize item with default values\n\n\n    item.fullWidth = item.fullWidth || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    chart.boxes.push(item);\n  },\n\n  /**\n   * Remove a layoutItem from a chart\n   * @param {Chart} chart - the chart to remove the box from\n   * @param {Object} layoutItem - the item to remove from the layout\n   */\n  removeBox: function removeBox(chart, layoutItem) {\n    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n   * Sets (or updates) options on the given `item`.\n   * @param {Chart} chart - the chart in which the item lives (or will be added to)\n   * @param {Object} item - the item to configure with the given options\n   * @param {Object} options - the new item options.\n   */\n  configure: function configure(chart, item, options) {\n    var props = ['fullWidth', 'position', 'weight'];\n    var ilen = props.length;\n    var i = 0;\n    var prop;\n\n    for (; i < ilen; ++i) {\n      prop = props[i];\n\n      if (options.hasOwnProperty(prop)) {\n        item[prop] = options[prop];\n      }\n    }\n  },\n\n  /**\n   * Fits boxes of the given chart into the given size by having each box measure itself\n   * then running a fitting algorithm\n   * @param {Chart} chart - the chart\n   * @param {Number} width - the width to fit into\n   * @param {Number} height - the height to fit into\n   */\n  update: function update(chart, width, height) {\n    if (!chart) {\n      return;\n    }\n\n    var layoutOptions = chart.options.layout || {};\n    var padding = helpers.options.toPadding(layoutOptions.padding);\n    var leftPadding = padding.left;\n    var rightPadding = padding.right;\n    var topPadding = padding.top;\n    var bottomPadding = padding.bottom;\n    var leftBoxes = filterByPosition(chart.boxes, 'left');\n    var rightBoxes = filterByPosition(chart.boxes, 'right');\n    var topBoxes = filterByPosition(chart.boxes, 'top');\n    var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n    var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n    sortByWeight(leftBoxes, true);\n    sortByWeight(rightBoxes, false);\n    sortByWeight(topBoxes, true);\n    sortByWeight(bottomBoxes, false); // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n    // What we do to find the best sizing, we do the following\n    // 1. Determine the minimum size of the chart area.\n    // 2. Split the remaining width equally between each vertical axis\n    // 3. Split the remaining height equally between each horizontal axis\n    // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n    // 5. Adjust the sizes of each axis based on it's minimum reported size.\n    // 6. Refit each axis\n    // 7. Position each axis in the final location\n    // 8. Tell the chart the final location of the chart area\n    // 9. Tell any axes that overlay the chart area the positions of the chart area\n    // Step 1\n\n    var chartWidth = width - leftPadding - rightPadding;\n    var chartHeight = height - topPadding - bottomPadding;\n    var chartAreaWidth = chartWidth / 2; // min 50%\n\n    var chartAreaHeight = chartHeight / 2; // min 50%\n    // Step 2\n\n    var verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length); // Step 3\n\n    var horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length); // Step 4\n\n    var maxChartAreaWidth = chartWidth;\n    var maxChartAreaHeight = chartHeight;\n    var minBoxSizes = [];\n\n    function getMinimumBoxSize(box) {\n      var minSize;\n      var isHorizontal = box.isHorizontal();\n\n      if (isHorizontal) {\n        minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n        maxChartAreaHeight -= minSize.height;\n      } else {\n        minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n        maxChartAreaWidth -= minSize.width;\n      }\n\n      minBoxSizes.push({\n        horizontal: isHorizontal,\n        minSize: minSize,\n        box: box\n      });\n    }\n\n    helpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n    var maxHorizontalLeftPadding = 0;\n    var maxHorizontalRightPadding = 0;\n    var maxVerticalTopPadding = 0;\n    var maxVerticalBottomPadding = 0;\n    helpers.each(topBoxes.concat(bottomBoxes), function (horizontalBox) {\n      if (horizontalBox.getPadding) {\n        var boxPadding = horizontalBox.getPadding();\n        maxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n        maxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n      }\n    });\n    helpers.each(leftBoxes.concat(rightBoxes), function (verticalBox) {\n      if (verticalBox.getPadding) {\n        var boxPadding = verticalBox.getPadding();\n        maxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n        maxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n      }\n    }); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n    // be if the axes are drawn at their minimum sizes.\n    // Steps 5 & 6\n\n    var totalLeftBoxesWidth = leftPadding;\n    var totalRightBoxesWidth = rightPadding;\n    var totalTopBoxesHeight = topPadding;\n    var totalBottomBoxesHeight = bottomPadding; // Function to fit a box\n\n    function fitBox(box) {\n      var minBoxSize = helpers.findNextWhere(minBoxSizes, function (minBox) {\n        return minBox.box === box;\n      });\n\n      if (minBoxSize) {\n        if (box.isHorizontal()) {\n          var scaleMargin = {\n            left: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n            right: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n            top: 0,\n            bottom: 0\n          }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n          // on the margin. Sometimes they need to increase in size slightly\n\n          box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n        } else {\n          box.update(minBoxSize.minSize.width, maxChartAreaHeight);\n        }\n      }\n    } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n    helpers.each(leftBoxes.concat(rightBoxes), fitBox);\n    helpers.each(leftBoxes, function (box) {\n      totalLeftBoxesWidth += box.width;\n    });\n    helpers.each(rightBoxes, function (box) {\n      totalRightBoxesWidth += box.width;\n    }); // Set the Left and Right margins for the horizontal boxes\n\n    helpers.each(topBoxes.concat(bottomBoxes), fitBox); // Figure out how much margin is on the top and bottom of the vertical boxes\n\n    helpers.each(topBoxes, function (box) {\n      totalTopBoxesHeight += box.height;\n    });\n    helpers.each(bottomBoxes, function (box) {\n      totalBottomBoxesHeight += box.height;\n    });\n\n    function finalFitVerticalBox(box) {\n      var minBoxSize = helpers.findNextWhere(minBoxSizes, function (minSize) {\n        return minSize.box === box;\n      });\n      var scaleMargin = {\n        left: 0,\n        right: 0,\n        top: totalTopBoxesHeight,\n        bottom: totalBottomBoxesHeight\n      };\n\n      if (minBoxSize) {\n        box.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n      }\n    } // Let the left layout know the final margin\n\n\n    helpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n    totalLeftBoxesWidth = leftPadding;\n    totalRightBoxesWidth = rightPadding;\n    totalTopBoxesHeight = topPadding;\n    totalBottomBoxesHeight = bottomPadding;\n    helpers.each(leftBoxes, function (box) {\n      totalLeftBoxesWidth += box.width;\n    });\n    helpers.each(rightBoxes, function (box) {\n      totalRightBoxesWidth += box.width;\n    });\n    helpers.each(topBoxes, function (box) {\n      totalTopBoxesHeight += box.height;\n    });\n    helpers.each(bottomBoxes, function (box) {\n      totalBottomBoxesHeight += box.height;\n    }); // We may be adding some padding to account for rotated x axis labels\n\n    var leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n    totalLeftBoxesWidth += leftPaddingAddition;\n    totalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n    var topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n    totalTopBoxesHeight += topPaddingAddition;\n    totalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n    // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n    // without calling `fit` again\n\n    var newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n    var newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n    if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n      helpers.each(leftBoxes, function (box) {\n        box.height = newMaxChartAreaHeight;\n      });\n      helpers.each(rightBoxes, function (box) {\n        box.height = newMaxChartAreaHeight;\n      });\n      helpers.each(topBoxes, function (box) {\n        if (!box.fullWidth) {\n          box.width = newMaxChartAreaWidth;\n        }\n      });\n      helpers.each(bottomBoxes, function (box) {\n        if (!box.fullWidth) {\n          box.width = newMaxChartAreaWidth;\n        }\n      });\n      maxChartAreaHeight = newMaxChartAreaHeight;\n      maxChartAreaWidth = newMaxChartAreaWidth;\n    } // Step 7 - Position the boxes\n\n\n    var left = leftPadding + leftPaddingAddition;\n    var top = topPadding + topPaddingAddition;\n\n    function placeBox(box) {\n      if (box.isHorizontal()) {\n        box.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\n        box.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n        box.top = top;\n        box.bottom = top + box.height; // Move to next point\n\n        top = box.bottom;\n      } else {\n        box.left = left;\n        box.right = left + box.width;\n        box.top = totalTopBoxesHeight;\n        box.bottom = totalTopBoxesHeight + maxChartAreaHeight; // Move to next point\n\n        left = box.right;\n      }\n    }\n\n    helpers.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n    left += maxChartAreaWidth;\n    top += maxChartAreaHeight;\n    helpers.each(rightBoxes, placeBox);\n    helpers.each(bottomBoxes, placeBox); // Step 8\n\n    chart.chartArea = {\n      left: totalLeftBoxesWidth,\n      top: totalTopBoxesHeight,\n      right: totalLeftBoxesWidth + maxChartAreaWidth,\n      bottom: totalTopBoxesHeight + maxChartAreaHeight\n    }; // Step 9\n\n    helpers.each(chartAreaBoxes, function (box) {\n      box.left = chart.chartArea.left;\n      box.top = chart.chartArea.top;\n      box.right = chart.chartArea.right;\n      box.bottom = chart.chartArea.bottom;\n      box.update(maxChartAreaWidth, maxChartAreaHeight);\n    });\n  }\n};","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar Element = require('./core.element');\n\nvar helpers = require('../helpers/index');\n\nvar Ticks = require('./core.ticks');\n\ndefaults._set('scale', {\n  display: true,\n  position: 'left',\n  offset: false,\n  // grid line settings\n  gridLines: {\n    display: true,\n    color: 'rgba(0, 0, 0, 0.1)',\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickMarkLength: 10,\n    zeroLineWidth: 1,\n    zeroLineColor: 'rgba(0,0,0,0.25)',\n    zeroLineBorderDash: [],\n    zeroLineBorderDashOffset: 0.0,\n    offsetGridLines: false,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  // scale label\n  scaleLabel: {\n    // display property\n    display: false,\n    // actual label\n    labelString: '',\n    // line height\n    lineHeight: 1.2,\n    // top/bottom padding\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  // label settings\n  ticks: {\n    beginAtZero: false,\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    padding: 0,\n    reverse: false,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 0,\n    labelOffset: 0,\n    // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {}\n  }\n});\n\nfunction labelsFromTicks(ticks) {\n  var labels = [];\n  var i, ilen;\n\n  for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n    labels.push(ticks[i].label);\n  }\n\n  return labels;\n}\n\nfunction getLineValue(scale, index, offsetGridLines) {\n  var lineValue = scale.getPixelForTick(index);\n\n  if (offsetGridLines) {\n    if (index === 0) {\n      lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n    }\n  }\n\n  return lineValue;\n}\n\nfunction computeTextSize(context, tick, font) {\n  return helpers.isArray(tick) ? helpers.longestText(context, font, tick) : context.measureText(tick).width;\n}\n\nfunction parseFontOptions(options) {\n  var valueOrDefault = helpers.valueOrDefault;\n  var globalDefaults = defaults.global;\n  var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n  var style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n  var family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n  return {\n    size: size,\n    style: style,\n    family: family,\n    font: helpers.fontString(size, style, family)\n  };\n}\n\nfunction parseLineHeight(options) {\n  return helpers.options.toLineHeight(helpers.valueOrDefault(options.lineHeight, 1.2), helpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\n}\n\nmodule.exports = Element.extend({\n  /**\n   * Get the padding needed for the scale\n   * @method getPadding\n   * @private\n   * @returns {Padding} the necessary padding\n   */\n  getPadding: function getPadding() {\n    var me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  },\n\n  /**\n   * Returns the scale tick objects ({label, major})\n   * @since 2.7\n   */\n  getTicks: function getTicks() {\n    return this._ticks;\n  },\n  // These methods are ordered by lifecyle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n  mergeTicksOptions: function mergeTicksOptions() {\n    var ticks = this.options.ticks;\n\n    if (ticks.minor === false) {\n      ticks.minor = {\n        display: false\n      };\n    }\n\n    if (ticks.major === false) {\n      ticks.major = {\n        display: false\n      };\n    }\n\n    for (var key in ticks) {\n      if (key !== 'major' && key !== 'minor') {\n        if (typeof ticks.minor[key] === 'undefined') {\n          ticks.minor[key] = ticks[key];\n        }\n\n        if (typeof ticks.major[key] === 'undefined') {\n          ticks.major[key] = ticks[key];\n        }\n      }\n    }\n  },\n  beforeUpdate: function beforeUpdate() {\n    helpers.callback(this.options.beforeUpdate, [this]);\n  },\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this;\n    var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = helpers.extend({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Data min/max\n\n    me.beforeDataLimits();\n    me.determineDataLimits();\n    me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n    // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n    // and must not be accessed directly from outside this class. `this.ticks` being\n    // around for long time and not marked as private, we can't change its structure\n    // without unexpected breaking changes. If you need to access the scale ticks,\n    // use scale.getTicks() instead.\n\n    me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n    // we still support no return (`this.ticks` internally set by calling this method).\n\n    ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n    // COMPAT, we still support no return (`this.ticks` internally changed by calling\n    // this method and supposed to contain only string values).\n\n    labels = me.convertTicksToLabels(ticks) || me.ticks;\n    me.afterTickToLabelConversion();\n    me.ticks = labels; // BACKWARD COMPATIBILITY\n    // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n    // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      label = labels[i];\n      tick = ticks[i];\n\n      if (!tick) {\n        ticks.push(tick = {\n          label: label,\n          major: false\n        });\n      } else {\n        tick.label = label;\n      }\n    }\n\n    me._ticks = ticks; // Tick Rotation\n\n    me.beforeCalculateTickRotation();\n    me.calculateTickRotation();\n    me.afterCalculateTickRotation(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: function afterUpdate() {\n    helpers.callback(this.options.afterUpdate, [this]);\n  },\n  //\n  beforeSetDimensions: function beforeSetDimensions() {\n    helpers.callback(this.options.beforeSetDimensions, [this]);\n  },\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  },\n  afterSetDimensions: function afterSetDimensions() {\n    helpers.callback(this.options.afterSetDimensions, [this]);\n  },\n  // Data limits\n  beforeDataLimits: function beforeDataLimits() {\n    helpers.callback(this.options.beforeDataLimits, [this]);\n  },\n  determineDataLimits: helpers.noop,\n  afterDataLimits: function afterDataLimits() {\n    helpers.callback(this.options.afterDataLimits, [this]);\n  },\n  //\n  beforeBuildTicks: function beforeBuildTicks() {\n    helpers.callback(this.options.beforeBuildTicks, [this]);\n  },\n  buildTicks: helpers.noop,\n  afterBuildTicks: function afterBuildTicks() {\n    helpers.callback(this.options.afterBuildTicks, [this]);\n  },\n  beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n    helpers.callback(this.options.beforeTickToLabelConversion, [this]);\n  },\n  convertTicksToLabels: function convertTicksToLabels() {\n    var me = this; // Convert ticks to strings\n\n    var tickOpts = me.options.ticks;\n    me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n  },\n  afterTickToLabelConversion: function afterTickToLabelConversion() {\n    helpers.callback(this.options.afterTickToLabelConversion, [this]);\n  },\n  //\n  beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n    helpers.callback(this.options.beforeCalculateTickRotation, [this]);\n  },\n  calculateTickRotation: function calculateTickRotation() {\n    var me = this;\n    var context = me.ctx;\n    var tickOpts = me.options.ticks;\n    var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n    // between x offsets between 0 and 1.\n\n    var tickFont = parseFontOptions(tickOpts);\n    context.font = tickFont.font;\n    var labelRotation = tickOpts.minRotation || 0;\n\n    if (labels.length && me.options.display && me.isHorizontal()) {\n      var originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\n      var labelWidth = originalLabelWidth;\n      var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n      var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n      while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n        var angleRadians = helpers.toRadians(labelRotation);\n        cosRotation = Math.cos(angleRadians);\n        sinRotation = Math.sin(angleRadians);\n\n        if (sinRotation * originalLabelWidth > me.maxHeight) {\n          // go back one step\n          labelRotation--;\n          break;\n        }\n\n        labelRotation++;\n        labelWidth = cosRotation * originalLabelWidth;\n      }\n    }\n\n    me.labelRotation = labelRotation;\n  },\n  afterCalculateTickRotation: function afterCalculateTickRotation() {\n    helpers.callback(this.options.afterCalculateTickRotation, [this]);\n  },\n  //\n  beforeFit: function beforeFit() {\n    helpers.callback(this.options.beforeFit, [this]);\n  },\n  fit: function fit() {\n    var me = this; // Reset\n\n    var minSize = me.minSize = {\n      width: 0,\n      height: 0\n    };\n    var labels = labelsFromTicks(me._ticks);\n    var opts = me.options;\n    var tickOpts = opts.ticks;\n    var scaleLabelOpts = opts.scaleLabel;\n    var gridLineOpts = opts.gridLines;\n    var display = opts.display;\n    var isHorizontal = me.isHorizontal();\n    var tickFont = parseFontOptions(tickOpts);\n    var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n    if (isHorizontal) {\n      // subtract the margins to line up with the chartArea if we are a full width scale\n      minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n    } else {\n      minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n    } // height\n\n\n    if (isHorizontal) {\n      minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n    } else {\n      minSize.height = me.maxHeight; // fill all the height\n    } // Are we showing a title for the scale?\n\n\n    if (scaleLabelOpts.display && display) {\n      var scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\n      var scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\n      var deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\n\n      if (isHorizontal) {\n        minSize.height += deltaHeight;\n      } else {\n        minSize.width += deltaHeight;\n      }\n    } // Don't bother fitting the ticks if we are not showing them\n\n\n    if (tickOpts.display && display) {\n      var largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\n      var tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\n      var lineSpace = tickFont.size * 0.5;\n      var tickPadding = me.options.ticks.padding;\n\n      if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n        me.longestLabelWidth = largestTextWidth;\n        var angleRadians = helpers.toRadians(me.labelRotation);\n        var cosRotation = Math.cos(angleRadians);\n        var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n        var labelHeight = sinRotation * largestTextWidth + tickFont.size * tallestLabelHeightInLines + lineSpace * (tallestLabelHeightInLines - 1) + lineSpace; // padding\n\n        minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        me.ctx.font = tickFont.font;\n        var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\n        var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font); // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n        // which means that the right padding is dominated by the font height\n\n        if (me.labelRotation !== 0) {\n          me.paddingLeft = opts.position === 'bottom' ? cosRotation * firstLabelWidth + 3 : cosRotation * lineSpace + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = opts.position === 'bottom' ? cosRotation * lineSpace + 3 : cosRotation * lastLabelWidth + 3;\n        } else {\n          me.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = lastLabelWidth / 2 + 3;\n        }\n      } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n        if (tickOpts.mirror) {\n          largestTextWidth = 0;\n        } else {\n          // use lineSpace for consistency with horizontal axis\n          // tickPadding is not implemented for horizontal\n          largestTextWidth += tickPadding + lineSpace;\n        }\n\n        minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n        me.paddingTop = tickFont.size / 2;\n        me.paddingBottom = tickFont.size / 2;\n      }\n    }\n\n    me.handleMargins();\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n\n  /**\n   * Handle margins and padding interactions\n   * @private\n   */\n  handleMargins: function handleMargins() {\n    var me = this;\n\n    if (me.margins) {\n      me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n      me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n      me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n      me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n    }\n  },\n  afterFit: function afterFit() {\n    helpers.callback(this.options.afterFit, [this]);\n  },\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  },\n  isFullWidth: function isFullWidth() {\n    return this.options.fullWidth;\n  },\n  // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n  getRightValue: function getRightValue(rawValue) {\n    // Null and undefined values first\n    if (helpers.isNullOrUndef(rawValue)) {\n      return NaN;\n    } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n    if (typeof rawValue === 'number' && !isFinite(rawValue)) {\n      return NaN;\n    } // If it is in fact an object, dive in one more level\n\n\n    if (rawValue) {\n      if (this.isHorizontal()) {\n        if (rawValue.x !== undefined) {\n          return this.getRightValue(rawValue.x);\n        }\n      } else if (rawValue.y !== undefined) {\n        return this.getRightValue(rawValue.y);\n      }\n    } // Value is good, return it\n\n\n    return rawValue;\n  },\n\n  /**\n   * Used to get the value to display in the tooltip for the data at the given index\n   * @param index\n   * @param datasetIndex\n   */\n  getLabelForIndex: helpers.noop,\n\n  /**\n   * Returns the location of the given data point. Value can either be an index or a numerical value\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   * @param value\n   * @param index\n   * @param datasetIndex\n   */\n  getPixelForValue: helpers.noop,\n\n  /**\n   * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   * @param pixel\n   */\n  getValueForPixel: helpers.noop,\n\n  /**\n   * Returns the location of the tick at the given index\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   */\n  getPixelForTick: function getPixelForTick(index) {\n    var me = this;\n    var offset = me.options.offset;\n\n    if (me.isHorizontal()) {\n      var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n      var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var pixel = tickWidth * index + me.paddingLeft;\n\n      if (offset) {\n        pixel += tickWidth / 2;\n      }\n\n      var finalVal = me.left + Math.round(pixel);\n      finalVal += me.isFullWidth() ? me.margins.left : 0;\n      return finalVal;\n    }\n\n    var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n    return me.top + index * (innerHeight / (me._ticks.length - 1));\n  },\n\n  /**\n   * Utility for getting the pixel location of a percentage of scale\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   */\n  getPixelForDecimal: function getPixelForDecimal(decimal) {\n    var me = this;\n\n    if (me.isHorizontal()) {\n      var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n      var valueOffset = innerWidth * decimal + me.paddingLeft;\n      var finalVal = me.left + Math.round(valueOffset);\n      finalVal += me.isFullWidth() ? me.margins.left : 0;\n      return finalVal;\n    }\n\n    return me.top + decimal * me.height;\n  },\n\n  /**\n   * Returns the pixel for the minimum chart value\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   */\n  getBasePixel: function getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  },\n  getBaseValue: function getBaseValue() {\n    var me = this;\n    var min = me.min;\n    var max = me.max;\n    return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n  },\n\n  /**\n   * Returns a subset of ticks to be plotted to avoid overlapping labels.\n   * @private\n   */\n  _autoSkip: function _autoSkip(ticks) {\n    var skipRatio;\n    var me = this;\n    var isHorizontal = me.isHorizontal();\n    var optionTicks = me.options.ticks.minor;\n    var tickCount = ticks.length;\n    var labelRotationRadians = helpers.toRadians(me.labelRotation);\n    var cosRotation = Math.cos(labelRotationRadians);\n    var longestRotatedLabel = me.longestLabelWidth * cosRotation;\n    var result = [];\n    var i, tick, shouldSkip; // figure out the maximum number of gridlines to show\n\n    var maxTicks;\n\n    if (optionTicks.maxTicksLimit) {\n      maxTicks = optionTicks.maxTicksLimit;\n    }\n\n    if (isHorizontal) {\n      skipRatio = false;\n\n      if ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > me.width - (me.paddingLeft + me.paddingRight)) {\n        skipRatio = 1 + Math.floor((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount / (me.width - (me.paddingLeft + me.paddingRight)));\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (maxTicks && tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\n      }\n    }\n\n    for (i = 0; i < tickCount; i++) {\n      tick = ticks[i]; // Since we always show the last tick,we need may need to hide the last shown one before\n\n      shouldSkip = skipRatio > 1 && i % skipRatio > 0 || i % skipRatio === 0 && i + skipRatio >= tickCount;\n\n      if (shouldSkip && i !== tickCount - 1) {\n        // leave tick in place but make sure it's not displayed (#4635)\n        delete tick.label;\n      }\n\n      result.push(tick);\n    }\n\n    return result;\n  },\n  // Actually draw the scale on the canvas\n  // @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n  draw: function draw(chartArea) {\n    var me = this;\n    var options = me.options;\n\n    if (!options.display) {\n      return;\n    }\n\n    var context = me.ctx;\n    var globalDefaults = defaults.global;\n    var optionTicks = options.ticks.minor;\n    var optionMajorTicks = options.ticks.major || optionTicks;\n    var gridLines = options.gridLines;\n    var scaleLabel = options.scaleLabel;\n    var isRotated = me.labelRotation !== 0;\n    var isHorizontal = me.isHorizontal();\n    var ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n    var tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n    var tickFont = parseFontOptions(optionTicks);\n    var majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\n    var majorTickFont = parseFontOptions(optionMajorTicks);\n    var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n    var scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n    var scaleLabelFont = parseFontOptions(scaleLabel);\n    var scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\n    var labelRotationRadians = helpers.toRadians(me.labelRotation);\n    var itemsToDraw = [];\n    var axisWidth = me.options.gridLines.lineWidth;\n    var xTickStart = options.position === 'right' ? me.left : me.right - axisWidth - tl;\n    var xTickEnd = options.position === 'right' ? me.left + tl : me.right;\n    var yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\n    var yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\n    helpers.each(ticks, function (tick, index) {\n      // autoskipper skipped this tick (#4635)\n      if (helpers.isNullOrUndef(tick.label)) {\n        return;\n      }\n\n      var label = tick.label;\n      var lineWidth, lineColor, borderDash, borderDashOffset;\n\n      if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n        // Draw the first index specially\n        lineWidth = gridLines.zeroLineWidth;\n        lineColor = gridLines.zeroLineColor;\n        borderDash = gridLines.zeroLineBorderDash;\n        borderDashOffset = gridLines.zeroLineBorderDashOffset;\n      } else {\n        lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\n        lineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\n        borderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n        borderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n      } // Common properties\n\n\n      var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n      var textAlign = 'middle';\n      var textBaseline = 'middle';\n      var tickPadding = optionTicks.padding;\n\n      if (isHorizontal) {\n        var labelYOffset = tl + tickPadding;\n\n        if (options.position === 'bottom') {\n          // bottom\n          textBaseline = !isRotated ? 'top' : 'middle';\n          textAlign = !isRotated ? 'center' : 'right';\n          labelY = me.top + labelYOffset;\n        } else {\n          // top\n          textBaseline = !isRotated ? 'bottom' : 'middle';\n          textAlign = !isRotated ? 'center' : 'left';\n          labelY = me.bottom - labelYOffset;\n        }\n\n        var xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\n        if (xLineValue < me.left) {\n          lineColor = 'rgba(0,0,0,0)';\n        }\n\n        xLineValue += helpers.aliasPixel(lineWidth);\n        labelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n        tx1 = tx2 = x1 = x2 = xLineValue;\n        ty1 = yTickStart;\n        ty2 = yTickEnd;\n        y1 = chartArea.top;\n        y2 = chartArea.bottom + axisWidth;\n      } else {\n        var isLeft = options.position === 'left';\n        var labelXOffset;\n\n        if (optionTicks.mirror) {\n          textAlign = isLeft ? 'left' : 'right';\n          labelXOffset = tickPadding;\n        } else {\n          textAlign = isLeft ? 'right' : 'left';\n          labelXOffset = tl + tickPadding;\n        }\n\n        labelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n        var yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\n        if (yLineValue < me.top) {\n          lineColor = 'rgba(0,0,0,0)';\n        }\n\n        yLineValue += helpers.aliasPixel(lineWidth);\n        labelY = me.getPixelForTick(index) + optionTicks.labelOffset;\n        tx1 = xTickStart;\n        tx2 = xTickEnd;\n        x1 = chartArea.left;\n        x2 = chartArea.right + axisWidth;\n        ty1 = ty2 = y1 = y2 = yLineValue;\n      }\n\n      itemsToDraw.push({\n        tx1: tx1,\n        ty1: ty1,\n        tx2: tx2,\n        ty2: ty2,\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        labelX: labelX,\n        labelY: labelY,\n        glWidth: lineWidth,\n        glColor: lineColor,\n        glBorderDash: borderDash,\n        glBorderDashOffset: borderDashOffset,\n        rotation: -1 * labelRotationRadians,\n        label: label,\n        major: tick.major,\n        textBaseline: textBaseline,\n        textAlign: textAlign\n      });\n    }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n    helpers.each(itemsToDraw, function (itemToDraw) {\n      if (gridLines.display) {\n        context.save();\n        context.lineWidth = itemToDraw.glWidth;\n        context.strokeStyle = itemToDraw.glColor;\n\n        if (context.setLineDash) {\n          context.setLineDash(itemToDraw.glBorderDash);\n          context.lineDashOffset = itemToDraw.glBorderDashOffset;\n        }\n\n        context.beginPath();\n\n        if (gridLines.drawTicks) {\n          context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n          context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n        }\n\n        if (gridLines.drawOnChartArea) {\n          context.moveTo(itemToDraw.x1, itemToDraw.y1);\n          context.lineTo(itemToDraw.x2, itemToDraw.y2);\n        }\n\n        context.stroke();\n        context.restore();\n      }\n\n      if (optionTicks.display) {\n        // Make sure we draw text in the correct color and font\n        context.save();\n        context.translate(itemToDraw.labelX, itemToDraw.labelY);\n        context.rotate(itemToDraw.rotation);\n        context.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\n        context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n        context.textBaseline = itemToDraw.textBaseline;\n        context.textAlign = itemToDraw.textAlign;\n        var label = itemToDraw.label;\n\n        if (helpers.isArray(label)) {\n          var lineCount = label.length;\n          var lineHeight = tickFont.size * 1.5;\n          var y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\n\n          for (var i = 0; i < lineCount; ++i) {\n            // We just make sure the multiline element is a string here..\n            context.fillText('' + label[i], 0, y); // apply same lineSpacing as calculated @ L#320\n\n            y += lineHeight;\n          }\n        } else {\n          context.fillText(label, 0, 0);\n        }\n\n        context.restore();\n      }\n    });\n\n    if (scaleLabel.display) {\n      // Draw the scale label\n      var scaleLabelX;\n      var scaleLabelY;\n      var rotation = 0;\n      var halfLineHeight = parseLineHeight(scaleLabel) / 2;\n\n      if (isHorizontal) {\n        scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n        scaleLabelY = options.position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n      } else {\n        var isLeft = options.position === 'left';\n        scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n        scaleLabelY = me.top + (me.bottom - me.top) / 2;\n        rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n      }\n\n      context.save();\n      context.translate(scaleLabelX, scaleLabelY);\n      context.rotate(rotation);\n      context.textAlign = 'center';\n      context.textBaseline = 'middle';\n      context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n      context.font = scaleLabelFont.font;\n      context.fillText(scaleLabel.labelString, 0, 0);\n      context.restore();\n    }\n\n    if (gridLines.drawBorder) {\n      // Draw the line at the edge of the axis\n      context.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\n      context.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\n      var x1 = me.left;\n      var x2 = me.right + axisWidth;\n      var y1 = me.top;\n      var y2 = me.bottom + axisWidth;\n      var aliasPixel = helpers.aliasPixel(context.lineWidth);\n\n      if (isHorizontal) {\n        y1 = y2 = options.position === 'top' ? me.bottom : me.top;\n        y1 += aliasPixel;\n        y2 += aliasPixel;\n      } else {\n        x1 = x2 = options.position === 'left' ? me.right : me.left;\n        x1 += aliasPixel;\n        x2 += aliasPixel;\n      }\n\n      context.beginPath();\n      context.moveTo(x1, y1);\n      context.lineTo(x2, y2);\n      context.stroke();\n    }\n  }\n});","'use strict';\n\nvar helpers = require('../helpers/index');\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\n\n\nmodule.exports = {\n  /**\n   * Namespace to hold formatters for different types of ticks\n   * @namespace Chart.Ticks.formatters\n   */\n  formatters: {\n    /**\n     * Formatter for value labels\n     * @method Chart.Ticks.formatters.values\n     * @param value the value to display\n     * @return {String|Array} the label to display\n     */\n    values: function values(value) {\n      return helpers.isArray(value) ? value : '' + value;\n    },\n\n    /**\n     * Formatter for linear numeric ticks\n     * @method Chart.Ticks.formatters.linear\n     * @param tickValue {Number} the value to be formatted\n     * @param index {Number} the position of the tickValue parameter in the ticks array\n     * @param ticks {Array<Number>} the list of ticks being converted\n     * @return {String} string representation of the tickValue parameter\n     */\n    linear: function linear(tickValue, index, ticks) {\n      // If we have lots of ticks, don't use the ones\n      var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n      if (Math.abs(delta) > 1) {\n        if (tickValue !== Math.floor(tickValue)) {\n          // not an integer\n          delta = tickValue - Math.floor(tickValue);\n        }\n      }\n\n      var logDelta = helpers.log10(Math.abs(delta));\n      var tickString = '';\n\n      if (tickValue !== 0) {\n        var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n        if (maxTick < 1e-4) {\n          // all ticks are small numbers; use scientific notation\n          var logTick = helpers.log10(Math.abs(tickValue));\n          tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n        } else {\n          var numDecimal = -1 * Math.floor(logDelta);\n          numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n          tickString = tickValue.toFixed(numDecimal);\n        }\n      } else {\n        tickString = '0'; // never show decimal places for 0\n      }\n\n      return tickString;\n    },\n    logarithmic: function logarithmic(tickValue, index, ticks) {\n      var remain = tickValue / Math.pow(10, Math.floor(helpers.log10(tickValue)));\n\n      if (tickValue === 0) {\n        return '0';\n      } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n        return tickValue.toExponential();\n      }\n\n      return '';\n    }\n  }\n};","'use strict';\n/**\n * @namespace Chart.helpers\n */\n\nvar helpers = {\n  /**\n   * An empty function that can be used, for example, for optional callback.\n   */\n  noop: function noop() {},\n\n  /**\n   * Returns a unique id, sequentially generated from a global variable.\n   * @returns {Number}\n   * @function\n   */\n  uid: function () {\n    var id = 0;\n    return function () {\n      return id++;\n    };\n  }(),\n\n  /**\n   * Returns true if `value` is neither null nor undefined, else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @since 2.7.0\n   */\n  isNullOrUndef: function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n  },\n\n  /**\n   * Returns true if `value` is an array, else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @function\n   */\n  isArray: Array.isArray ? Array.isArray : function (value) {\n    return Object.prototype.toString.call(value) === '[object Array]';\n  },\n\n  /**\n   * Returns true if `value` is an object (excluding null), else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @since 2.7.0\n   */\n  isObject: function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n  },\n\n  /**\n   * Returns `value` if defined, else returns `defaultValue`.\n   * @param {*} value - The value to return if defined.\n   * @param {*} defaultValue - The value to return if `value` is undefined.\n   * @returns {*}\n   */\n  valueOrDefault: function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n  },\n\n  /**\n   * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n   * @param {Array} value - The array to lookup for value at `index`.\n   * @param {Number} index - The index in `value` to lookup for value.\n   * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n   * @returns {*}\n   */\n  valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n    return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n  },\n\n  /**\n   * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n   * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n   * @param {Function} fn - The function to call.\n   * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n   * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n   * @returns {*}\n   */\n  callback: function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n      return fn.apply(thisArg, args);\n    }\n  },\n\n  /**\n   * Note(SB) for performance sake, this method should only be used when loopable type\n   * is unknown or in none intensive code (not called often and small loopable). Else\n   * it's preferable to use a regular for() loop and save extra function calls.\n   * @param {Object|Array} loopable - The object or array to be iterated.\n   * @param {Function} fn - The function to call for each item.\n   * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n   * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\n   */\n  each: function each(loopable, fn, thisArg, reverse) {\n    var i, len, keys;\n\n    if (helpers.isArray(loopable)) {\n      len = loopable.length;\n\n      if (reverse) {\n        for (i = len - 1; i >= 0; i--) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      } else {\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      }\n    } else if (helpers.isObject(loopable)) {\n      keys = Object.keys(loopable);\n      len = keys.length;\n\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[keys[i]], keys[i]);\n      }\n    }\n  },\n\n  /**\n   * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n   * @see http://stackoverflow.com/a/14853974\n   * @param {Array} a0 - The array to compare\n   * @param {Array} a1 - The array to compare\n   * @returns {Boolean}\n   */\n  arrayEquals: function arrayEquals(a0, a1) {\n    var i, ilen, v0, v1;\n\n    if (!a0 || !a1 || a0.length !== a1.length) {\n      return false;\n    }\n\n    for (i = 0, ilen = a0.length; i < ilen; ++i) {\n      v0 = a0[i];\n      v1 = a1[i];\n\n      if (v0 instanceof Array && v1 instanceof Array) {\n        if (!helpers.arrayEquals(v0, v1)) {\n          return false;\n        }\n      } else if (v0 !== v1) {\n        // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * Returns a deep copy of `source` without keeping references on objects and arrays.\n   * @param {*} source - The value to clone.\n   * @returns {*}\n   */\n  clone: function clone(source) {\n    if (helpers.isArray(source)) {\n      return source.map(helpers.clone);\n    }\n\n    if (helpers.isObject(source)) {\n      var target = {};\n      var keys = Object.keys(source);\n      var klen = keys.length;\n      var k = 0;\n\n      for (; k < klen; ++k) {\n        target[keys[k]] = helpers.clone(source[keys[k]]);\n      }\n\n      return target;\n    }\n\n    return source;\n  },\n\n  /**\n   * The default merger when Chart.helpers.merge is called without merger option.\n   * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\n   * @private\n   */\n  _merger: function _merger(key, target, source, options) {\n    var tval = target[key];\n    var sval = source[key];\n\n    if (helpers.isObject(tval) && helpers.isObject(sval)) {\n      helpers.merge(tval, sval, options);\n    } else {\n      target[key] = helpers.clone(sval);\n    }\n  },\n\n  /**\n   * Merges source[key] in target[key] only if target[key] is undefined.\n   * @private\n   */\n  _mergerIf: function _mergerIf(key, target, source) {\n    var tval = target[key];\n    var sval = source[key];\n\n    if (helpers.isObject(tval) && helpers.isObject(sval)) {\n      helpers.mergeIf(tval, sval);\n    } else if (!target.hasOwnProperty(key)) {\n      target[key] = helpers.clone(sval);\n    }\n  },\n\n  /**\n   * Recursively deep copies `source` properties into `target` with the given `options`.\n   * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n   * @param {Object} target - The target object in which all sources are merged into.\n   * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n   * @param {Object} [options] - Merging options:\n   * @param {Function} [options.merger] - The merge method (key, target, source, options)\n   * @returns {Object} The `target` object.\n   */\n  merge: function merge(target, source, options) {\n    var sources = helpers.isArray(source) ? source : [source];\n    var ilen = sources.length;\n    var merge, i, keys, klen, k;\n\n    if (!helpers.isObject(target)) {\n      return target;\n    }\n\n    options = options || {};\n    merge = options.merger || helpers._merger;\n\n    for (i = 0; i < ilen; ++i) {\n      source = sources[i];\n\n      if (!helpers.isObject(source)) {\n        continue;\n      }\n\n      keys = Object.keys(source);\n\n      for (k = 0, klen = keys.length; k < klen; ++k) {\n        merge(keys[k], target, source, options);\n      }\n    }\n\n    return target;\n  },\n\n  /**\n   * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n   * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n   * @param {Object} target - The target object in which all sources are merged into.\n   * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n   * @returns {Object} The `target` object.\n   */\n  mergeIf: function mergeIf(target, source) {\n    return helpers.merge(target, source, {\n      merger: helpers._mergerIf\n    });\n  },\n\n  /**\n   * Applies the contents of two or more objects together into the first object.\n   * @param {Object} target - The target object in which all objects are merged into.\n   * @param {Object} arg1 - Object containing additional properties to merge in target.\n   * @param {Object} argN - Additional objects containing properties to merge in target.\n   * @returns {Object} The `target` object.\n   */\n  extend: function extend(target) {\n    var setFn = function setFn(value, key) {\n      target[key] = value;\n    };\n\n    for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n      helpers.each(arguments[i], setFn);\n    }\n\n    return target;\n  },\n\n  /**\n   * Basic javascript inheritance based on the model created in Backbone.js\n   */\n  inherits: function inherits(extensions) {\n    var me = this;\n    var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n      return me.apply(this, arguments);\n    };\n\n    var Surrogate = function Surrogate() {\n      this.constructor = ChartElement;\n    };\n\n    Surrogate.prototype = me.prototype;\n    ChartElement.prototype = new Surrogate();\n    ChartElement.extend = helpers.inherits;\n\n    if (extensions) {\n      helpers.extend(ChartElement.prototype, extensions);\n    }\n\n    ChartElement.__super__ = me.prototype;\n    return ChartElement;\n  }\n};\nmodule.exports = helpers; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.callCallback = helpers.callback;\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.indexOf = function (array, item, fromIndex) {\n  return Array.prototype.indexOf.call(array, item, fromIndex);\n};\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\n\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;","/**\n * @namespace Chart\n */\nvar Chart = require('./core/core')();\n\nChart.helpers = require('./helpers/index'); // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\nrequire('./core/core.helpers')(Chart);\n\nChart.Animation = require('./core/core.animation');\nChart.animationService = require('./core/core.animations');\nChart.defaults = require('./core/core.defaults');\nChart.Element = require('./core/core.element');\nChart.elements = require('./elements/index');\nChart.Interaction = require('./core/core.interaction');\nChart.layouts = require('./core/core.layouts');\nChart.platform = require('./platforms/platform');\nChart.plugins = require('./core/core.plugins');\nChart.Scale = require('./core/core.scale');\nChart.scaleService = require('./core/core.scaleService');\nChart.Ticks = require('./core/core.ticks');\nChart.Tooltip = require('./core/core.tooltip');\n\nrequire('./core/core.controller')(Chart);\n\nrequire('./core/core.datasetController')(Chart);\n\nrequire('./scales/scale.linearbase')(Chart);\n\nrequire('./scales/scale.category')(Chart);\n\nrequire('./scales/scale.linear')(Chart);\n\nrequire('./scales/scale.logarithmic')(Chart);\n\nrequire('./scales/scale.radialLinear')(Chart);\n\nrequire('./scales/scale.time')(Chart); // Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\n\n\nrequire('./controllers/controller.bar')(Chart);\n\nrequire('./controllers/controller.bubble')(Chart);\n\nrequire('./controllers/controller.doughnut')(Chart);\n\nrequire('./controllers/controller.line')(Chart);\n\nrequire('./controllers/controller.polarArea')(Chart);\n\nrequire('./controllers/controller.radar')(Chart);\n\nrequire('./controllers/controller.scatter')(Chart);\n\nrequire('./charts/Chart.Bar')(Chart);\n\nrequire('./charts/Chart.Bubble')(Chart);\n\nrequire('./charts/Chart.Doughnut')(Chart);\n\nrequire('./charts/Chart.Line')(Chart);\n\nrequire('./charts/Chart.PolarArea')(Chart);\n\nrequire('./charts/Chart.Radar')(Chart);\n\nrequire('./charts/Chart.Scatter')(Chart); // Loading built-in plugins\n\n\nvar plugins = require('./plugins');\n\nfor (var k in plugins) {\n  if (plugins.hasOwnProperty(k)) {\n    Chart.plugins.register(plugins[k]);\n  }\n}\n\nChart.platform.initialize();\nmodule.exports = Chart;\n\nif (typeof window !== 'undefined') {\n  window.Chart = Chart;\n} // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\n\nChart.Legend = plugins.legend._element;\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\nChart.Title = plugins.title._element;\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\nChart.pluginService = Chart.plugins;\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\n\nChart.PluginBase = Chart.Element.extend({});\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\n\nChart.canvasHelpers = Chart.helpers.canvas;\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\n\nChart.layoutService = Chart.layouts;","/* MIT license */\nvar convert = require('color-convert');\n\nvar string = require('chartjs-color-string');\n\nvar Color = function Color(obj) {\n  if (obj instanceof Color) {\n    return obj;\n  }\n\n  if (!(this instanceof Color)) {\n    return new Color(obj);\n  }\n\n  this.valid = false;\n  this.values = {\n    rgb: [0, 0, 0],\n    hsl: [0, 0, 0],\n    hsv: [0, 0, 0],\n    hwb: [0, 0, 0],\n    cmyk: [0, 0, 0, 0],\n    alpha: 1\n  }; // parse Color() argument\n\n  var vals;\n\n  if (typeof obj === 'string') {\n    vals = string.getRgba(obj);\n\n    if (vals) {\n      this.setValues('rgb', vals);\n    } else if (vals = string.getHsla(obj)) {\n      this.setValues('hsl', vals);\n    } else if (vals = string.getHwb(obj)) {\n      this.setValues('hwb', vals);\n    }\n  } else if (typeof obj === 'object') {\n    vals = obj;\n\n    if (vals.r !== undefined || vals.red !== undefined) {\n      this.setValues('rgb', vals);\n    } else if (vals.l !== undefined || vals.lightness !== undefined) {\n      this.setValues('hsl', vals);\n    } else if (vals.v !== undefined || vals.value !== undefined) {\n      this.setValues('hsv', vals);\n    } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n      this.setValues('hwb', vals);\n    } else if (vals.c !== undefined || vals.cyan !== undefined) {\n      this.setValues('cmyk', vals);\n    }\n  }\n};\n\nColor.prototype = {\n  isValid: function isValid() {\n    return this.valid;\n  },\n  rgb: function rgb() {\n    return this.setSpace('rgb', arguments);\n  },\n  hsl: function hsl() {\n    return this.setSpace('hsl', arguments);\n  },\n  hsv: function hsv() {\n    return this.setSpace('hsv', arguments);\n  },\n  hwb: function hwb() {\n    return this.setSpace('hwb', arguments);\n  },\n  cmyk: function cmyk() {\n    return this.setSpace('cmyk', arguments);\n  },\n  rgbArray: function rgbArray() {\n    return this.values.rgb;\n  },\n  hslArray: function hslArray() {\n    return this.values.hsl;\n  },\n  hsvArray: function hsvArray() {\n    return this.values.hsv;\n  },\n  hwbArray: function hwbArray() {\n    var values = this.values;\n\n    if (values.alpha !== 1) {\n      return values.hwb.concat([values.alpha]);\n    }\n\n    return values.hwb;\n  },\n  cmykArray: function cmykArray() {\n    return this.values.cmyk;\n  },\n  rgbaArray: function rgbaArray() {\n    var values = this.values;\n    return values.rgb.concat([values.alpha]);\n  },\n  hslaArray: function hslaArray() {\n    var values = this.values;\n    return values.hsl.concat([values.alpha]);\n  },\n  alpha: function alpha(val) {\n    if (val === undefined) {\n      return this.values.alpha;\n    }\n\n    this.setValues('alpha', val);\n    return this;\n  },\n  red: function red(val) {\n    return this.setChannel('rgb', 0, val);\n  },\n  green: function green(val) {\n    return this.setChannel('rgb', 1, val);\n  },\n  blue: function blue(val) {\n    return this.setChannel('rgb', 2, val);\n  },\n  hue: function hue(val) {\n    if (val) {\n      val %= 360;\n      val = val < 0 ? 360 + val : val;\n    }\n\n    return this.setChannel('hsl', 0, val);\n  },\n  saturation: function saturation(val) {\n    return this.setChannel('hsl', 1, val);\n  },\n  lightness: function lightness(val) {\n    return this.setChannel('hsl', 2, val);\n  },\n  saturationv: function saturationv(val) {\n    return this.setChannel('hsv', 1, val);\n  },\n  whiteness: function whiteness(val) {\n    return this.setChannel('hwb', 1, val);\n  },\n  blackness: function blackness(val) {\n    return this.setChannel('hwb', 2, val);\n  },\n  value: function value(val) {\n    return this.setChannel('hsv', 2, val);\n  },\n  cyan: function cyan(val) {\n    return this.setChannel('cmyk', 0, val);\n  },\n  magenta: function magenta(val) {\n    return this.setChannel('cmyk', 1, val);\n  },\n  yellow: function yellow(val) {\n    return this.setChannel('cmyk', 2, val);\n  },\n  black: function black(val) {\n    return this.setChannel('cmyk', 3, val);\n  },\n  hexString: function hexString() {\n    return string.hexString(this.values.rgb);\n  },\n  rgbString: function rgbString() {\n    return string.rgbString(this.values.rgb, this.values.alpha);\n  },\n  rgbaString: function rgbaString() {\n    return string.rgbaString(this.values.rgb, this.values.alpha);\n  },\n  percentString: function percentString() {\n    return string.percentString(this.values.rgb, this.values.alpha);\n  },\n  hslString: function hslString() {\n    return string.hslString(this.values.hsl, this.values.alpha);\n  },\n  hslaString: function hslaString() {\n    return string.hslaString(this.values.hsl, this.values.alpha);\n  },\n  hwbString: function hwbString() {\n    return string.hwbString(this.values.hwb, this.values.alpha);\n  },\n  keyword: function keyword() {\n    return string.keyword(this.values.rgb, this.values.alpha);\n  },\n  rgbNumber: function rgbNumber() {\n    var rgb = this.values.rgb;\n    return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n  },\n  luminosity: function luminosity() {\n    // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n    var rgb = this.values.rgb;\n    var lum = [];\n\n    for (var i = 0; i < rgb.length; i++) {\n      var chan = rgb[i] / 255;\n      lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n    }\n\n    return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n  },\n  contrast: function contrast(color2) {\n    // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n    var lum1 = this.luminosity();\n    var lum2 = color2.luminosity();\n\n    if (lum1 > lum2) {\n      return (lum1 + 0.05) / (lum2 + 0.05);\n    }\n\n    return (lum2 + 0.05) / (lum1 + 0.05);\n  },\n  level: function level(color2) {\n    var contrastRatio = this.contrast(color2);\n\n    if (contrastRatio >= 7.1) {\n      return 'AAA';\n    }\n\n    return contrastRatio >= 4.5 ? 'AA' : '';\n  },\n  dark: function dark() {\n    // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n    var rgb = this.values.rgb;\n    var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n    return yiq < 128;\n  },\n  light: function light() {\n    return !this.dark();\n  },\n  negate: function negate() {\n    var rgb = [];\n\n    for (var i = 0; i < 3; i++) {\n      rgb[i] = 255 - this.values.rgb[i];\n    }\n\n    this.setValues('rgb', rgb);\n    return this;\n  },\n  lighten: function lighten(ratio) {\n    var hsl = this.values.hsl;\n    hsl[2] += hsl[2] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  darken: function darken(ratio) {\n    var hsl = this.values.hsl;\n    hsl[2] -= hsl[2] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  saturate: function saturate(ratio) {\n    var hsl = this.values.hsl;\n    hsl[1] += hsl[1] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  desaturate: function desaturate(ratio) {\n    var hsl = this.values.hsl;\n    hsl[1] -= hsl[1] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  whiten: function whiten(ratio) {\n    var hwb = this.values.hwb;\n    hwb[1] += hwb[1] * ratio;\n    this.setValues('hwb', hwb);\n    return this;\n  },\n  blacken: function blacken(ratio) {\n    var hwb = this.values.hwb;\n    hwb[2] += hwb[2] * ratio;\n    this.setValues('hwb', hwb);\n    return this;\n  },\n  greyscale: function greyscale() {\n    var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n    var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n    this.setValues('rgb', [val, val, val]);\n    return this;\n  },\n  clearer: function clearer(ratio) {\n    var alpha = this.values.alpha;\n    this.setValues('alpha', alpha - alpha * ratio);\n    return this;\n  },\n  opaquer: function opaquer(ratio) {\n    var alpha = this.values.alpha;\n    this.setValues('alpha', alpha + alpha * ratio);\n    return this;\n  },\n  rotate: function rotate(degrees) {\n    var hsl = this.values.hsl;\n    var hue = (hsl[0] + degrees) % 360;\n    hsl[0] = hue < 0 ? 360 + hue : hue;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n\n  /**\n   * Ported from sass implementation in C\n   * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n   */\n  mix: function mix(mixinColor, weight) {\n    var color1 = this;\n    var color2 = mixinColor;\n    var p = weight === undefined ? 0.5 : weight;\n    var w = 2 * p - 1;\n    var a = color1.alpha() - color2.alpha();\n    var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n    var w2 = 1 - w1;\n    return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n  },\n  toJSON: function toJSON() {\n    return this.rgb();\n  },\n  clone: function clone() {\n    // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n    // making the final build way to big to embed in Chart.js. So let's do it manually,\n    // assuming that values to clone are 1 dimension arrays containing only numbers,\n    // except 'alpha' which is a number.\n    var result = new Color();\n    var source = this.values;\n    var target = result.values;\n    var value, type;\n\n    for (var prop in source) {\n      if (source.hasOwnProperty(prop)) {\n        value = source[prop];\n        type = {}.toString.call(value);\n\n        if (type === '[object Array]') {\n          target[prop] = value.slice(0);\n        } else if (type === '[object Number]') {\n          target[prop] = value;\n        } else {\n          console.error('unexpected color value:', value);\n        }\n      }\n    }\n\n    return result;\n  }\n};\nColor.prototype.spaces = {\n  rgb: ['red', 'green', 'blue'],\n  hsl: ['hue', 'saturation', 'lightness'],\n  hsv: ['hue', 'saturation', 'value'],\n  hwb: ['hue', 'whiteness', 'blackness'],\n  cmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\nColor.prototype.maxes = {\n  rgb: [255, 255, 255],\n  hsl: [360, 100, 100],\n  hsv: [360, 100, 100],\n  hwb: [360, 100, 100],\n  cmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n  var values = this.values;\n  var vals = {};\n\n  for (var i = 0; i < space.length; i++) {\n    vals[space.charAt(i)] = values[space][i];\n  }\n\n  if (values.alpha !== 1) {\n    vals.a = values.alpha;\n  } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n  return vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n  var values = this.values;\n  var spaces = this.spaces;\n  var maxes = this.maxes;\n  var alpha = 1;\n  var i;\n  this.valid = true;\n\n  if (space === 'alpha') {\n    alpha = vals;\n  } else if (vals.length) {\n    // [10, 10, 10]\n    values[space] = vals.slice(0, space.length);\n    alpha = vals[space.length];\n  } else if (vals[space.charAt(0)] !== undefined) {\n    // {r: 10, g: 10, b: 10}\n    for (i = 0; i < space.length; i++) {\n      values[space][i] = vals[space.charAt(i)];\n    }\n\n    alpha = vals.a;\n  } else if (vals[spaces[space][0]] !== undefined) {\n    // {red: 10, green: 10, blue: 10}\n    var chans = spaces[space];\n\n    for (i = 0; i < space.length; i++) {\n      values[space][i] = vals[chans[i]];\n    }\n\n    alpha = vals.alpha;\n  }\n\n  values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n  if (space === 'alpha') {\n    return false;\n  }\n\n  var capped; // cap values of the space prior converting all values\n\n  for (i = 0; i < space.length; i++) {\n    capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n    values[space][i] = Math.round(capped);\n  } // convert to all the other color spaces\n\n\n  for (var sname in spaces) {\n    if (sname !== space) {\n      values[sname] = convert[space][sname](values[space]);\n    }\n  }\n\n  return true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n  var vals = args[0];\n\n  if (vals === undefined) {\n    // color.rgb()\n    return this.getValues(space);\n  } // color.rgb(10, 10, 10)\n\n\n  if (typeof vals === 'number') {\n    vals = Array.prototype.slice.call(args);\n  }\n\n  this.setValues(space, vals);\n  return this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n  var svalues = this.values[space];\n\n  if (val === undefined) {\n    // color.red()\n    return svalues[index];\n  } else if (val === svalues[index]) {\n    // color.red(color.red())\n    return this;\n  } // color.red(100)\n\n\n  svalues[index] = val;\n  this.setValues(space, svalues);\n  return this;\n};\n\nif (typeof window !== 'undefined') {\n  window.Color = Color;\n}\n\nmodule.exports = Color;","'use strict';\n\nvar Element = require('./core.element');\n\nvar exports = module.exports = Element.extend({\n  chart: null,\n  // the animation associated chart instance\n  currentStep: 0,\n  // the current animation step\n  numSteps: 60,\n  // default number of steps\n  easing: '',\n  // the easing to use for this animation\n  render: null,\n  // render function used by the animation service\n  onAnimationProgress: null,\n  // user specified callback to fire on each step of the animation\n  onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n}); // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.Animation instead\n * @prop Chart.Animation#animationObject\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\n\nObject.defineProperty(exports.prototype, 'animationObject', {\n  get: function get() {\n    return this;\n  }\n});\n/**\n * Provided for backward compatibility, use Chart.Animation#chart instead\n * @prop Chart.Animation#chartInstance\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\n\nObject.defineProperty(exports.prototype, 'chartInstance', {\n  get: function get() {\n    return this.chart;\n  },\n  set: function set(value) {\n    this.chart = value;\n  }\n});","/* global window: false */\n'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  animation: {\n    duration: 1000,\n    easing: 'easeOutQuart',\n    onProgress: helpers.noop,\n    onComplete: helpers.noop\n  }\n});\n\nmodule.exports = {\n  frameDuration: 17,\n  animations: [],\n  dropFrames: 0,\n  request: null,\n\n  /**\n   * @param {Chart} chart - The chart to animate.\n   * @param {Chart.Animation} animation - The animation that we will animate.\n   * @param {Number} duration - The animation duration in ms.\n   * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n   */\n  addAnimation: function addAnimation(chart, animation, duration, lazy) {\n    var animations = this.animations;\n    var i, ilen;\n    animation.chart = chart;\n\n    if (!lazy) {\n      chart.animating = true;\n    }\n\n    for (i = 0, ilen = animations.length; i < ilen; ++i) {\n      if (animations[i].chart === chart) {\n        animations[i] = animation;\n        return;\n      }\n    }\n\n    animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n    if (animations.length === 1) {\n      this.requestAnimationFrame();\n    }\n  },\n  cancelAnimation: function cancelAnimation(chart) {\n    var index = helpers.findIndex(this.animations, function (animation) {\n      return animation.chart === chart;\n    });\n\n    if (index !== -1) {\n      this.animations.splice(index, 1);\n      chart.animating = false;\n    }\n  },\n  requestAnimationFrame: function requestAnimationFrame() {\n    var me = this;\n\n    if (me.request === null) {\n      // Skip animation frame requests until the active one is executed.\n      // This can happen when processing mouse events, e.g. 'mousemove'\n      // and 'mouseout' events will trigger multiple renders.\n      me.request = helpers.requestAnimFrame.call(window, function () {\n        me.request = null;\n        me.startDigest();\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  startDigest: function startDigest() {\n    var me = this;\n    var startTime = Date.now();\n    var framesToDrop = 0;\n\n    if (me.dropFrames > 1) {\n      framesToDrop = Math.floor(me.dropFrames);\n      me.dropFrames = me.dropFrames % 1;\n    }\n\n    me.advance(1 + framesToDrop);\n    var endTime = Date.now();\n    me.dropFrames += (endTime - startTime) / me.frameDuration; // Do we have more stuff to animate?\n\n    if (me.animations.length > 0) {\n      me.requestAnimationFrame();\n    }\n  },\n\n  /**\n   * @private\n   */\n  advance: function advance(count) {\n    var animations = this.animations;\n    var animation, chart;\n    var i = 0;\n\n    while (i < animations.length) {\n      animation = animations[i];\n      chart = animation.chart;\n      animation.currentStep = (animation.currentStep || 0) + count;\n      animation.currentStep = Math.min(animation.currentStep, animation.numSteps);\n      helpers.callback(animation.render, [chart, animation], chart);\n      helpers.callback(animation.onAnimationProgress, [animation], chart);\n\n      if (animation.currentStep >= animation.numSteps) {\n        helpers.callback(animation.onAnimationComplete, [animation], chart);\n        chart.animating = false;\n        animations.splice(i, 1);\n      } else {\n        ++i;\n      }\n    }\n  }\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {Point} the event position\n */\n\n\nfunction getRelativePosition(e, chart) {\n  if (e.native) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n\n  return helpers.getRelativePosition(e, chart);\n}\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param chart {chart} the chart\n * @param handler {Function} the callback to execute for each visible item\n */\n\n\nfunction parseVisibleItems(chart, handler) {\n  var datasets = chart.data.datasets;\n  var meta, i, j, ilen, jlen;\n\n  for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n    if (!chart.isDatasetVisible(i)) {\n      continue;\n    }\n\n    meta = chart.getDatasetMeta(i);\n\n    for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n      var element = meta.data[j];\n\n      if (!element._view.skip) {\n        handler(element);\n      }\n    }\n  }\n}\n/**\n * Helper function to get the items that intersect the event position\n * @param items {ChartElement[]} elements to filter\n * @param position {Point} the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\n\n\nfunction getIntersectItems(chart, position) {\n  var elements = [];\n  parseVisibleItems(chart, function (element) {\n    if (element.inRange(position.x, position.y)) {\n      elements.push(element);\n    }\n  });\n  return elements;\n}\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param chart {Chart} the chart to look at elements from\n * @param position {Point} the point to be nearest to\n * @param intersect {Boolean} if true, only consider items that intersect the position\n * @param distanceMetric {Function} function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\n\n\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n  var minDistance = Number.POSITIVE_INFINITY;\n  var nearestItems = [];\n  parseVisibleItems(chart, function (element) {\n    if (intersect && !element.inRange(position.x, position.y)) {\n      return;\n    }\n\n    var center = element.getCenterPoint();\n    var distance = distanceMetric(position, center);\n\n    if (distance < minDistance) {\n      nearestItems = [element];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      nearestItems.push(element);\n    }\n  });\n  return nearestItems;\n}\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {String} axis the axis mode. x|y|xy\n */\n\n\nfunction getDistanceMetricForAxis(axis) {\n  var useX = axis.indexOf('x') !== -1;\n  var useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\nfunction indexMode(chart, e, options) {\n  var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n  options.axis = options.axis || 'x';\n  var distanceMetric = getDistanceMetricForAxis(options.axis);\n  var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n  var elements = [];\n\n  if (!items.length) {\n    return [];\n  }\n\n  chart.data.datasets.forEach(function (dataset, datasetIndex) {\n    if (chart.isDatasetVisible(datasetIndex)) {\n      var meta = chart.getDatasetMeta(datasetIndex);\n      var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n      if (element && !element._view.skip) {\n        elements.push(element);\n      }\n    }\n  });\n  return elements;\n}\n/**\n * @interface IInteractionOptions\n */\n\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\n\n\nmodule.exports = {\n  // Helper function for different modes\n  modes: {\n    single: function single(chart, e) {\n      var position = getRelativePosition(e, chart);\n      var elements = [];\n      parseVisibleItems(chart, function (element) {\n        if (element.inRange(position.x, position.y)) {\n          elements.push(element);\n          return elements;\n        }\n      });\n      return elements.slice(0, 1);\n    },\n\n    /**\n     * @function Chart.Interaction.modes.label\n     * @deprecated since version 2.4.0\n     * @todo remove at version 3\n     * @private\n     */\n    label: indexMode,\n\n    /**\n     * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n     * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n     * @function Chart.Interaction.modes.index\n     * @since v2.4.0\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use during interaction\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    index: indexMode,\n\n    /**\n     * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n     * If the options.intersect is false, we find the nearest item and return the items in that dataset\n     * @function Chart.Interaction.modes.dataset\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use during interaction\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    dataset: function dataset(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      options.axis = options.axis || 'xy';\n      var distanceMetric = getDistanceMetricForAxis(options.axis);\n      var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n      if (items.length > 0) {\n        items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n      }\n\n      return items;\n    },\n\n    /**\n     * @function Chart.Interaction.modes.x-axis\n     * @deprecated since version 2.4.0. Use index mode and intersect == true\n     * @todo remove at version 3\n     * @private\n     */\n    'x-axis': function xAxis(chart, e) {\n      return indexMode(chart, e, {\n        intersect: false\n      });\n    },\n\n    /**\n     * Point mode returns all elements that hit test based on the event position\n     * of the event\n     * @function Chart.Interaction.modes.intersect\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    point: function point(chart, e) {\n      var position = getRelativePosition(e, chart);\n      return getIntersectItems(chart, position);\n    },\n\n    /**\n     * nearest mode returns the element closest to the point\n     * @function Chart.Interaction.modes.intersect\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    nearest: function nearest(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      options.axis = options.axis || 'xy';\n      var distanceMetric = getDistanceMetricForAxis(options.axis);\n      var nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric); // We have multiple items at the same distance from the event. Now sort by smallest\n\n      if (nearestItems.length > 1) {\n        nearestItems.sort(function (a, b) {\n          var sizeA = a.getArea();\n          var sizeB = b.getArea();\n          var ret = sizeA - sizeB;\n\n          if (ret === 0) {\n            // if equal sort by dataset index\n            ret = a._datasetIndex - b._datasetIndex;\n          }\n\n          return ret;\n        });\n      } // Return only 1 item\n\n\n      return nearestItems.slice(0, 1);\n    },\n\n    /**\n     * x mode returns the elements that hit-test at the current x coordinate\n     * @function Chart.Interaction.modes.x\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    x: function x(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      var items = [];\n      var intersectsItem = false;\n      parseVisibleItems(chart, function (element) {\n        if (element.inXRange(position.x)) {\n          items.push(element);\n        }\n\n        if (element.inRange(position.x, position.y)) {\n          intersectsItem = true;\n        }\n      }); // If we want to trigger on an intersect and we don't have any items\n      // that intersect the position, return nothing\n\n      if (options.intersect && !intersectsItem) {\n        items = [];\n      }\n\n      return items;\n    },\n\n    /**\n     * y mode returns the elements that hit-test at the current y coordinate\n     * @function Chart.Interaction.modes.y\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    y: function y(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      var items = [];\n      var intersectsItem = false;\n      parseVisibleItems(chart, function (element) {\n        if (element.inYRange(position.y)) {\n          items.push(element);\n        }\n\n        if (element.inRange(position.x, position.y)) {\n          intersectsItem = true;\n        }\n      }); // If we want to trigger on an intersect and we don't have any items\n      // that intersect the position, return nothing\n\n      if (options.intersect && !intersectsItem) {\n        items = [];\n      }\n\n      return items;\n    }\n  }\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar basic = require('./platform.basic');\n\nvar dom = require('./platform.dom'); // @TODO Make possible to select another platform at build time.\n\n\nvar implementation = dom._enabled ? dom : basic;\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\n\nmodule.exports = helpers.extend({\n  /**\n   * @since 2.7.0\n   */\n  initialize: function initialize() {},\n\n  /**\n   * Called at chart construction time, returns a context2d instance implementing\n   * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n   * @param {*} item - The native item from which to acquire context (platform specific)\n   * @param {Object} options - The chart options\n   * @returns {CanvasRenderingContext2D} context2d instance\n   */\n  acquireContext: function acquireContext() {},\n\n  /**\n   * Called at chart destruction time, releases any resources associated to the context\n   * previously returned by the acquireContext() method.\n   * @param {CanvasRenderingContext2D} context - The context2d instance\n   * @returns {Boolean} true if the method succeeded, else false\n   */\n  releaseContext: function releaseContext() {},\n\n  /**\n   * Registers the specified listener on the given chart.\n   * @param {Chart} chart - Chart from which to listen for event\n   * @param {String} type - The ({@link IEvent}) type to listen for\n   * @param {Function} listener - Receives a notification (an object that implements\n   * the {@link IEvent} interface) when an event of the specified type occurs.\n   */\n  addEventListener: function addEventListener() {},\n\n  /**\n   * Removes the specified listener previously registered with addEventListener.\n   * @param {Chart} chart -Chart from which to remove the listener\n   * @param {String} type - The ({@link IEvent}) type to remove\n   * @param {Function} listener - The listener function to remove from the event target.\n   */\n  removeEventListener: function removeEventListener() {}\n}, implementation);\n/**\n * @interface IPlatform\n * Allows abstracting platform dependencies away from the chart\n * @borrows Chart.platform.acquireContext as acquireContext\n * @borrows Chart.platform.releaseContext as releaseContext\n * @borrows Chart.platform.addEventListener as addEventListener\n * @borrows Chart.platform.removeEventListener as removeEventListener\n */\n\n/**\n * @interface IEvent\n * @prop {String} type - The event type name, possible values are:\n * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n */","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  plugins: {}\n});\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\n\n\nmodule.exports = {\n  /**\n   * Globally registered plugins.\n   * @private\n   */\n  _plugins: [],\n\n  /**\n   * This identifier is used to invalidate the descriptors cache attached to each chart\n   * when a global plugin is registered or unregistered. In this case, the cache ID is\n   * incremented and descriptors are regenerated during following API calls.\n   * @private\n   */\n  _cacheId: 0,\n\n  /**\n   * Registers the given plugin(s) if not already registered.\n   * @param {Array|Object} plugins plugin instance(s).\n   */\n  register: function register(plugins) {\n    var p = this._plugins;\n    [].concat(plugins).forEach(function (plugin) {\n      if (p.indexOf(plugin) === -1) {\n        p.push(plugin);\n      }\n    });\n    this._cacheId++;\n  },\n\n  /**\n   * Unregisters the given plugin(s) only if registered.\n   * @param {Array|Object} plugins plugin instance(s).\n   */\n  unregister: function unregister(plugins) {\n    var p = this._plugins;\n    [].concat(plugins).forEach(function (plugin) {\n      var idx = p.indexOf(plugin);\n\n      if (idx !== -1) {\n        p.splice(idx, 1);\n      }\n    });\n    this._cacheId++;\n  },\n\n  /**\n   * Remove all registered plugins.\n   * @since 2.1.5\n   */\n  clear: function clear() {\n    this._plugins = [];\n    this._cacheId++;\n  },\n\n  /**\n   * Returns the number of registered plugins?\n   * @returns {Number}\n   * @since 2.1.5\n   */\n  count: function count() {\n    return this._plugins.length;\n  },\n\n  /**\n   * Returns all registered plugin instances.\n   * @returns {Array} array of plugin objects.\n   * @since 2.1.5\n   */\n  getAll: function getAll() {\n    return this._plugins;\n  },\n\n  /**\n   * Calls enabled plugins for `chart` on the specified hook and with the given args.\n   * This method immediately returns as soon as a plugin explicitly returns false. The\n   * returned value can be used, for instance, to interrupt the current action.\n   * @param {Object} chart - The chart instance for which plugins should be called.\n   * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n   * @param {Array} [args] - Extra arguments to apply to the hook call.\n   * @returns {Boolean} false if any of the plugins return false, else returns true.\n   */\n  notify: function notify(chart, hook, args) {\n    var descriptors = this.descriptors(chart);\n    var ilen = descriptors.length;\n    var i, descriptor, plugin, params, method;\n\n    for (i = 0; i < ilen; ++i) {\n      descriptor = descriptors[i];\n      plugin = descriptor.plugin;\n      method = plugin[hook];\n\n      if (typeof method === 'function') {\n        params = [chart].concat(args || []);\n        params.push(descriptor.options);\n\n        if (method.apply(plugin, params) === false) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * Returns descriptors of enabled plugins for the given chart.\n   * @returns {Array} [{ plugin, options }]\n   * @private\n   */\n  descriptors: function descriptors(chart) {\n    var cache = chart.$plugins || (chart.$plugins = {});\n\n    if (cache.id === this._cacheId) {\n      return cache.descriptors;\n    }\n\n    var plugins = [];\n    var descriptors = [];\n    var config = chart && chart.config || {};\n    var options = config.options && config.options.plugins || {};\n\n    this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n      var idx = plugins.indexOf(plugin);\n\n      if (idx !== -1) {\n        return;\n      }\n\n      var id = plugin.id;\n      var opts = options[id];\n\n      if (opts === false) {\n        return;\n      }\n\n      if (opts === true) {\n        opts = helpers.clone(defaults.global.plugins[id]);\n      }\n\n      plugins.push(plugin);\n      descriptors.push({\n        plugin: plugin,\n        options: opts || {}\n      });\n    });\n\n    cache.descriptors = descriptors;\n    cache.id = this._cacheId;\n    return descriptors;\n  },\n\n  /**\n   * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n   * but in some cases, this reference can be changed by the user when updating options.\n   * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n   * @private\n   */\n  _invalidate: function _invalidate(chart) {\n    delete chart.$plugins;\n  }\n};\n/**\n * Plugin extension hooks.\n * @interface IPlugin\n * @since 2.1.0\n */\n\n/**\n * @method IPlugin#beforeInit\n * @desc Called before initializing `chart`.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#afterInit\n * @desc Called after `chart` has been initialized and before the first update.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeUpdate\n * @desc Called before updating `chart`. If any plugin returns `false`, the update\n * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart update.\n */\n\n/**\n * @method IPlugin#afterUpdate\n * @desc Called after `chart` has been updated and before rendering. Note that this\n * hook will not be called if the chart update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetsUpdate\n * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n * the datasets update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} false to cancel the datasets update.\n * @since version 2.1.5\n*/\n\n/**\n * @method IPlugin#afterDatasetsUpdate\n * @desc Called after the `chart` datasets have been updated. Note that this hook\n * will not be called if the datasets update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @since version 2.1.5\n */\n\n/**\n * @method IPlugin#beforeDatasetUpdate\n * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\n * returns `false`, the datasets update is cancelled until another `update` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetUpdate\n * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\n * that this hook will not be called if the datasets update has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeLayout\n * @desc Called before laying out `chart`. If any plugin returns `false`,\n * the layout update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart layout.\n */\n\n/**\n * @method IPlugin#afterLayout\n * @desc Called after the `chart` has been layed out. Note that this hook will not\n * be called if the layout update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeRender\n * @desc Called before rendering `chart`. If any plugin returns `false`,\n * the rendering is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart rendering.\n */\n\n/**\n * @method IPlugin#afterRender\n * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n * that this hook will not be called if the rendering has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDraw\n * @desc Called before drawing `chart` at every animation frame specified by the given\n * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n * another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart drawing.\n */\n\n/**\n * @method IPlugin#afterDraw\n * @desc Called after the `chart` has been drawn for the specific easing value. Note\n * that this hook will not be called if the drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetsDraw\n * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n * the datasets drawing is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetsDraw\n * @desc Called after the `chart` datasets have been drawn. Note that this hook\n * will not be called if the datasets drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetDraw\n * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\n * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\n * is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetDraw\n * @desc Called after the `chart` datasets at the given `args.index` have been drawn\n * (datasets are drawn in the reverse order). Note that this hook will not be called\n * if the datasets drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeTooltipDraw\n * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\n * the tooltip drawing is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart tooltip drawing.\n */\n\n/**\n * @method IPlugin#afterTooltipDraw\n * @desc Called after drawing the `tooltip`. Note that this hook will not\n * be called if the tooltip drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeEvent\n * @desc Called before processing the specified `event`. If any plugin returns `false`,\n * the event will be discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#afterEvent\n * @desc Called after the `event` has been consumed. Note that this hook\n * will not be called if the `event` has been previously discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#resize\n * @desc Called after the chart as been resized.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#destroy\n * @desc Called after the chart as been destroyed.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar Element = require('./core.element');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  tooltips: {\n    enabled: true,\n    custom: null,\n    mode: 'nearest',\n    position: 'average',\n    intersect: true,\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleFontStyle: 'bold',\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleFontColor: '#fff',\n    titleAlign: 'left',\n    bodySpacing: 2,\n    bodyFontColor: '#fff',\n    bodyAlign: 'left',\n    footerFontStyle: 'bold',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFontColor: '#fff',\n    footerAlign: 'left',\n    yPadding: 6,\n    xPadding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    callbacks: {\n      // Args are: (tooltipItems, data)\n      beforeTitle: helpers.noop,\n      title: function title(tooltipItems, data) {\n        // Pick first xLabel for now\n        var title = '';\n        var labels = data.labels;\n        var labelCount = labels ? labels.length : 0;\n\n        if (tooltipItems.length > 0) {\n          var item = tooltipItems[0];\n\n          if (item.xLabel) {\n            title = item.xLabel;\n          } else if (labelCount > 0 && item.index < labelCount) {\n            title = labels[item.index];\n          }\n        }\n\n        return title;\n      },\n      afterTitle: helpers.noop,\n      // Args are: (tooltipItems, data)\n      beforeBody: helpers.noop,\n      // Args are: (tooltipItem, data)\n      beforeLabel: helpers.noop,\n      label: function label(tooltipItem, data) {\n        var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n        if (label) {\n          label += ': ';\n        }\n\n        label += tooltipItem.yLabel;\n        return label;\n      },\n      labelColor: function labelColor(tooltipItem, chart) {\n        var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var activeElement = meta.data[tooltipItem.index];\n        var view = activeElement._view;\n        return {\n          borderColor: view.borderColor,\n          backgroundColor: view.backgroundColor\n        };\n      },\n      labelTextColor: function labelTextColor() {\n        return this._options.bodyFontColor;\n      },\n      afterLabel: helpers.noop,\n      // Args are: (tooltipItems, data)\n      afterBody: helpers.noop,\n      // Args are: (tooltipItems, data)\n      beforeFooter: helpers.noop,\n      footer: helpers.noop,\n      afterFooter: helpers.noop\n    }\n  }\n});\n\nvar positioners = {\n  /**\n   * Average mode places the tooltip at the average position of the elements shown\n   * @function Chart.Tooltip.positioners.average\n   * @param elements {ChartElement[]} the elements being displayed in the tooltip\n   * @returns {Point} tooltip position\n   */\n  average: function average(elements) {\n    if (!elements.length) {\n      return false;\n    }\n\n    var i, len;\n    var x = 0;\n    var y = 0;\n    var count = 0;\n\n    for (i = 0, len = elements.length; i < len; ++i) {\n      var el = elements[i];\n\n      if (el && el.hasValue()) {\n        var pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: Math.round(x / count),\n      y: Math.round(y / count)\n    };\n  },\n\n  /**\n   * Gets the tooltip position nearest of the item nearest to the event position\n   * @function Chart.Tooltip.positioners.nearest\n   * @param elements {Chart.Element[]} the tooltip elements\n   * @param eventPosition {Point} the position of the event in canvas coordinates\n   * @returns {Point} the tooltip position\n   */\n  nearest: function nearest(elements, eventPosition) {\n    var x = eventPosition.x;\n    var y = eventPosition.y;\n    var minDistance = Number.POSITIVE_INFINITY;\n    var i, len, nearestElement;\n\n    for (i = 0, len = elements.length; i < len; ++i) {\n      var el = elements[i];\n\n      if (el && el.hasValue()) {\n        var center = el.getCenterPoint();\n        var d = helpers.distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      var tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n};\n/**\n * Helper method to merge the opacity into a color\n */\n\nfunction mergeOpacity(colorString, opacity) {\n  var color = helpers.color(colorString);\n  return color.alpha(opacity * color.alpha()).rgbaString();\n} // Helper to push or concat based on if the 2nd parameter is an array or not\n\n\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (helpers.isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n/**\n * Returns array of strings split by newline\n * @param {String} value - The value to split by newline.\n * @returns {Array} value if newline present - Returned from String split() method\n * @function\n */\n\n\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n\n  return str;\n} // Private helper to create a tooltip item model\n// @param element : the chart element (point, arc, bar) to create the tooltip item for\n// @return : new tooltip item\n\n\nfunction createTooltipItem(element) {\n  var xScale = element._xScale;\n  var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n  var index = element._index;\n  var datasetIndex = element._datasetIndex;\n  return {\n    xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n    yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n    index: index,\n    datasetIndex: datasetIndex,\n    x: element._model.x,\n    y: element._model.y\n  };\n}\n/**\n * Helper to get the reset model for the tooltip\n * @param tooltipOpts {Object} the tooltip options\n */\n\n\nfunction getBaseModel(tooltipOpts) {\n  var globalDefaults = defaults.global;\n  var valueOrDefault = helpers.valueOrDefault;\n  return {\n    // Positioning\n    xPadding: tooltipOpts.xPadding,\n    yPadding: tooltipOpts.yPadding,\n    xAlign: tooltipOpts.xAlign,\n    yAlign: tooltipOpts.yAlign,\n    // Body\n    bodyFontColor: tooltipOpts.bodyFontColor,\n    _bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n    _bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n    _bodyAlign: tooltipOpts.bodyAlign,\n    bodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n    bodySpacing: tooltipOpts.bodySpacing,\n    // Title\n    titleFontColor: tooltipOpts.titleFontColor,\n    _titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n    _titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n    titleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n    _titleAlign: tooltipOpts.titleAlign,\n    titleSpacing: tooltipOpts.titleSpacing,\n    titleMarginBottom: tooltipOpts.titleMarginBottom,\n    // Footer\n    footerFontColor: tooltipOpts.footerFontColor,\n    _footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n    _footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n    footerFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n    _footerAlign: tooltipOpts.footerAlign,\n    footerSpacing: tooltipOpts.footerSpacing,\n    footerMarginTop: tooltipOpts.footerMarginTop,\n    // Appearance\n    caretSize: tooltipOpts.caretSize,\n    cornerRadius: tooltipOpts.cornerRadius,\n    backgroundColor: tooltipOpts.backgroundColor,\n    opacity: 0,\n    legendColorBackground: tooltipOpts.multiKeyBackground,\n    displayColors: tooltipOpts.displayColors,\n    borderColor: tooltipOpts.borderColor,\n    borderWidth: tooltipOpts.borderWidth\n  };\n}\n/**\n * Get the size of the tooltip\n */\n\n\nfunction getTooltipSize(tooltip, model) {\n  var ctx = tooltip._chart.ctx;\n  var height = model.yPadding * 2; // Tooltip Padding\n\n  var width = 0; // Count of all lines in the body\n\n  var body = model.body;\n  var combinedBodyLength = body.reduce(function (count, bodyItem) {\n    return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n  }, 0);\n  combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n  var titleLineCount = model.title.length;\n  var footerLineCount = model.footer.length;\n  var titleFontSize = model.titleFontSize;\n  var bodyFontSize = model.bodyFontSize;\n  var footerFontSize = model.footerFontSize;\n  height += titleLineCount * titleFontSize; // Title Lines\n\n  height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n  height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n  height += combinedBodyLength * bodyFontSize; // Body Lines\n\n  height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n  height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n  height += footerLineCount * footerFontSize; // Footer Lines\n\n  height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n  // Title width\n\n  var widthPadding = 0;\n\n  var maxLineWidth = function maxLineWidth(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n  helpers.each(model.title, maxLineWidth); // Body width\n\n  ctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n  helpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n  widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n  helpers.each(body, function (bodyItem) {\n    helpers.each(bodyItem.before, maxLineWidth);\n    helpers.each(bodyItem.lines, maxLineWidth);\n    helpers.each(bodyItem.after, maxLineWidth);\n  }); // Reset back to 0\n\n  widthPadding = 0; // Footer width\n\n  ctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n  helpers.each(model.footer, maxLineWidth); // Add padding\n\n  width += 2 * model.xPadding;\n  return {\n    width: width,\n    height: height\n  };\n}\n/**\n * Helper to get the alignment of a tooltip given the size\n */\n\n\nfunction determineAlignment(tooltip, size) {\n  var model = tooltip._model;\n  var chart = tooltip._chart;\n  var chartArea = tooltip._chart.chartArea;\n  var xAlign = 'center';\n  var yAlign = 'center';\n\n  if (model.y < size.height) {\n    yAlign = 'top';\n  } else if (model.y > chart.height - size.height) {\n    yAlign = 'bottom';\n  }\n\n  var lf, rf; // functions to determine left, right alignment\n\n  var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n  var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n  var midX = (chartArea.left + chartArea.right) / 2;\n  var midY = (chartArea.top + chartArea.bottom) / 2;\n\n  if (yAlign === 'center') {\n    lf = function lf(x) {\n      return x <= midX;\n    };\n\n    rf = function rf(x) {\n      return x > midX;\n    };\n  } else {\n    lf = function lf(x) {\n      return x <= size.width / 2;\n    };\n\n    rf = function rf(x) {\n      return x >= chart.width - size.width / 2;\n    };\n  }\n\n  olf = function olf(x) {\n    return x + size.width + model.caretSize + model.caretPadding > chart.width;\n  };\n\n  orf = function orf(x) {\n    return x - size.width - model.caretSize - model.caretPadding < 0;\n  };\n\n  yf = function yf(y) {\n    return y <= midY ? 'top' : 'bottom';\n  };\n\n  if (lf(model.x)) {\n    xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n    if (olf(model.x)) {\n      xAlign = 'center';\n      yAlign = yf(model.y);\n    }\n  } else if (rf(model.x)) {\n    xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n    if (orf(model.x)) {\n      xAlign = 'center';\n      yAlign = yf(model.y);\n    }\n  }\n\n  var opts = tooltip._options;\n  return {\n    xAlign: opts.xAlign ? opts.xAlign : xAlign,\n    yAlign: opts.yAlign ? opts.yAlign : yAlign\n  };\n}\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\n\n\nfunction getBackgroundPoint(vm, size, alignment, chart) {\n  // Background Position\n  var x = vm.x;\n  var y = vm.y;\n  var caretSize = vm.caretSize;\n  var caretPadding = vm.caretPadding;\n  var cornerRadius = vm.cornerRadius;\n  var xAlign = alignment.xAlign;\n  var yAlign = alignment.yAlign;\n  var paddingAndSize = caretSize + caretPadding;\n  var radiusAndPadding = cornerRadius + caretPadding;\n\n  if (xAlign === 'right') {\n    x -= size.width;\n  } else if (xAlign === 'center') {\n    x -= size.width / 2;\n\n    if (x + size.width > chart.width) {\n      x = chart.width - size.width;\n    }\n\n    if (x < 0) {\n      x = 0;\n    }\n  }\n\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= size.height + paddingAndSize;\n  } else {\n    y -= size.height / 2;\n  }\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n\n  return {\n    x: x,\n    y: y\n  };\n}\n/**\n * Helper to build before and after body lines\n */\n\n\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nvar exports = module.exports = Element.extend({\n  initialize: function initialize() {\n    this._model = getBaseModel(this._options);\n    this._lastActive = [];\n  },\n  // Get the title\n  // Args are: (tooltipItem, data)\n  getTitle: function getTitle() {\n    var me = this;\n    var opts = me._options;\n    var callbacks = opts.callbacks;\n    var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n    var title = callbacks.title.apply(me, arguments);\n    var afterTitle = callbacks.afterTitle.apply(me, arguments);\n    var lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  },\n  // Args are: (tooltipItem, data)\n  getBeforeBody: function getBeforeBody() {\n    return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n  },\n  // Args are: (tooltipItem, data)\n  getBody: function getBody(tooltipItems, data) {\n    var me = this;\n    var callbacks = me._options.callbacks;\n    var bodyItems = [];\n    helpers.each(tooltipItems, function (tooltipItem) {\n      var bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n      pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n      pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  },\n  // Args are: (tooltipItem, data)\n  getAfterBody: function getAfterBody() {\n    return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n  },\n  // Get the footer and beforeFooter and afterFooter lines\n  // Args are: (tooltipItem, data)\n  getFooter: function getFooter() {\n    var me = this;\n    var callbacks = me._options.callbacks;\n    var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n    var footer = callbacks.footer.apply(me, arguments);\n    var afterFooter = callbacks.afterFooter.apply(me, arguments);\n    var lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  },\n  update: function update(changed) {\n    var me = this;\n    var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n    // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n    // which breaks any animations.\n\n    var existingModel = me._model;\n    var model = me._model = getBaseModel(opts);\n    var active = me._active;\n    var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n    var alignment = {\n      xAlign: existingModel.xAlign,\n      yAlign: existingModel.yAlign\n    };\n    var backgroundPoint = {\n      x: existingModel.x,\n      y: existingModel.y\n    };\n    var tooltipSize = {\n      width: existingModel.width,\n      height: existingModel.height\n    };\n    var tooltipPosition = {\n      x: existingModel.caretX,\n      y: existingModel.caretY\n    };\n    var i, len;\n\n    if (active.length) {\n      model.opacity = 1;\n      var labelColors = [];\n      var labelTextColors = [];\n      tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n      var tooltipItems = [];\n\n      for (i = 0, len = active.length; i < len; ++i) {\n        tooltipItems.push(createTooltipItem(active[i]));\n      } // If the user provided a filter function, use it to modify the tooltip items\n\n\n      if (opts.filter) {\n        tooltipItems = tooltipItems.filter(function (a) {\n          return opts.filter(a, data);\n        });\n      } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n      if (opts.itemSort) {\n        tooltipItems = tooltipItems.sort(function (a, b) {\n          return opts.itemSort(a, b, data);\n        });\n      } // Determine colors for boxes\n\n\n      helpers.each(tooltipItems, function (tooltipItem) {\n        labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n        labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n      }); // Build the Text Lines\n\n      model.title = me.getTitle(tooltipItems, data);\n      model.beforeBody = me.getBeforeBody(tooltipItems, data);\n      model.body = me.getBody(tooltipItems, data);\n      model.afterBody = me.getAfterBody(tooltipItems, data);\n      model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n      model.x = Math.round(tooltipPosition.x);\n      model.y = Math.round(tooltipPosition.y);\n      model.caretPadding = opts.caretPadding;\n      model.labelColors = labelColors;\n      model.labelTextColors = labelTextColors; // data points\n\n      model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n      tooltipSize = getTooltipSize(this, model);\n      alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n      backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n    } else {\n      model.opacity = 0;\n    }\n\n    model.xAlign = alignment.xAlign;\n    model.yAlign = alignment.yAlign;\n    model.x = backgroundPoint.x;\n    model.y = backgroundPoint.y;\n    model.width = tooltipSize.width;\n    model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n    model.caretX = tooltipPosition.x;\n    model.caretY = tooltipPosition.y;\n    me._model = model;\n\n    if (changed && opts.custom) {\n      opts.custom.call(me, model);\n    }\n\n    return me;\n  },\n  drawCaret: function drawCaret(tooltipPoint, size) {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  },\n  getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n    var x1, x2, x3, y1, y2, y3;\n    var caretSize = vm.caretSize;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = vm.xAlign;\n    var yAlign = vm.yAlign;\n    var ptX = tooltipPoint.x;\n    var ptY = tooltipPoint.y;\n    var width = size.width;\n    var height = size.height;\n\n    if (yAlign === 'center') {\n      y2 = ptY + height / 2;\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        x3 = x1;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        x3 = x1;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        x2 = vm.caretX;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        y3 = y1;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        y3 = y1; // invert drawing order\n\n        var tmp = x3;\n        x3 = x1;\n        x1 = tmp;\n      }\n    }\n\n    return {\n      x1: x1,\n      x2: x2,\n      x3: x3,\n      y1: y1,\n      y2: y2,\n      y3: y3\n    };\n  },\n  drawTitle: function drawTitle(pt, vm, ctx, opacity) {\n    var title = vm.title;\n\n    if (title.length) {\n      ctx.textAlign = vm._titleAlign;\n      ctx.textBaseline = 'top';\n      var titleFontSize = vm.titleFontSize;\n      var titleSpacing = vm.titleSpacing;\n      ctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n      ctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n      var i, len;\n\n      for (i = 0, len = title.length; i < len; ++i) {\n        ctx.fillText(title[i], pt.x, pt.y);\n        pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === title.length) {\n          pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  },\n  drawBody: function drawBody(pt, vm, ctx, opacity) {\n    var bodyFontSize = vm.bodyFontSize;\n    var bodySpacing = vm.bodySpacing;\n    var body = vm.body;\n    ctx.textAlign = vm._bodyAlign;\n    ctx.textBaseline = 'top';\n    ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily); // Before Body\n\n    var xLinePadding = 0;\n\n    var fillLineOfText = function fillLineOfText(line) {\n      ctx.fillText(line, pt.x + xLinePadding, pt.y);\n      pt.y += bodyFontSize + bodySpacing;\n    }; // Before body lines\n\n\n    ctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\n    helpers.each(vm.beforeBody, fillLineOfText);\n    var drawColorBoxes = vm.displayColors;\n    xLinePadding = drawColorBoxes ? bodyFontSize + 2 : 0; // Draw body lines now\n\n    helpers.each(body, function (bodyItem, i) {\n      var textColor = mergeOpacity(vm.labelTextColors[i], opacity);\n      ctx.fillStyle = textColor;\n      helpers.each(bodyItem.before, fillLineOfText);\n      helpers.each(bodyItem.lines, function (line) {\n        // Draw Legend-like boxes if needed\n        if (drawColorBoxes) {\n          // Fill a white rect so that colours merge nicely if the opacity is < 1\n          ctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n          ctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize); // Border\n\n          ctx.lineWidth = 1;\n          ctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n          ctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n          ctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n          ctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n          ctx.fillStyle = textColor;\n        }\n\n        fillLineOfText(line);\n      });\n      helpers.each(bodyItem.after, fillLineOfText);\n    }); // Reset back to 0 for after body\n\n    xLinePadding = 0; // After body lines\n\n    helpers.each(vm.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  },\n  drawFooter: function drawFooter(pt, vm, ctx, opacity) {\n    var footer = vm.footer;\n\n    if (footer.length) {\n      pt.y += vm.footerMarginTop;\n      ctx.textAlign = vm._footerAlign;\n      ctx.textBaseline = 'top';\n      ctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n      ctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n      helpers.each(footer, function (line) {\n        ctx.fillText(line, pt.x, pt.y);\n        pt.y += vm.footerFontSize + vm.footerSpacing;\n      });\n    }\n  },\n  drawBackground: function drawBackground(pt, vm, ctx, tooltipSize, opacity) {\n    ctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n    ctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\n    ctx.lineWidth = vm.borderWidth;\n    var xAlign = vm.xAlign;\n    var yAlign = vm.yAlign;\n    var x = pt.x;\n    var y = pt.y;\n    var width = tooltipSize.width;\n    var height = tooltipSize.height;\n    var radius = vm.cornerRadius;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n\n    if (yAlign === 'top') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n\n    if (vm.borderWidth > 0) {\n      ctx.stroke();\n    }\n  },\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n\n    if (vm.opacity === 0) {\n      return;\n    }\n\n    var tooltipSize = {\n      width: vm.width,\n      height: vm.height\n    };\n    var pt = {\n      x: vm.x,\n      y: vm.y\n    }; // IE11/Edge does not like very small opacities, so snap to 0\n\n    var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n    var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n    if (this._options.enabled && hasTooltipContent) {\n      // Draw Background\n      this.drawBackground(pt, vm, ctx, tooltipSize, opacity); // Draw Title, Body, and Footer\n\n      pt.x += vm.xPadding;\n      pt.y += vm.yPadding; // Titles\n\n      this.drawTitle(pt, vm, ctx, opacity); // Body\n\n      this.drawBody(pt, vm, ctx, opacity); // Footer\n\n      this.drawFooter(pt, vm, ctx, opacity);\n    }\n  },\n\n  /**\n   * Handle an event\n   * @private\n   * @param {IEvent} event - The event to handle\n   * @returns {Boolean} true if the tooltip changed\n   */\n  handleEvent: function handleEvent(e) {\n    var me = this;\n    var options = me._options;\n    var changed = false;\n    me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n    if (e.type === 'mouseout') {\n      me._active = [];\n    } else {\n      me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n    } // Remember Last Actives\n\n\n    changed = !helpers.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n    if (changed) {\n      me._lastActive = me._active;\n\n      if (options.enabled || options.custom) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true);\n        me.pivot();\n      }\n    }\n\n    return changed;\n  }\n});\n/**\n * @namespace Chart.Tooltip.positioners\n */\n\nexports.positioners = positioners;","'use strict';\n\nvar defaults = require('./core.defaults');\n\ndefaults._set('global', {\n  responsive: true,\n  responsiveAnimationDuration: 0,\n  maintainAspectRatio: true,\n  events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n  hover: {\n    onHover: null,\n    mode: 'nearest',\n    intersect: true,\n    animationDuration: 400\n  },\n  onClick: null,\n  defaultColor: 'rgba(0,0,0,0.1)',\n  defaultFontColor: '#666',\n  defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n  defaultFontSize: 12,\n  defaultFontStyle: 'normal',\n  showLines: true,\n  // Element defaults defined in element extensions\n  elements: {},\n  // Layout options such as padding\n  layout: {\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  }\n});\n\nmodule.exports = function () {\n  // Occupy the global variable of Chart, and create a simple base class\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  Chart.Chart = Chart;\n  return Chart;\n};","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\n\n\nvar effects = {\n  linear: function linear(t) {\n    return t;\n  },\n  easeInQuad: function easeInQuad(t) {\n    return t * t;\n  },\n  easeOutQuad: function easeOutQuad(t) {\n    return -t * (t - 2);\n  },\n  easeInOutQuad: function easeInOutQuad(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t;\n    }\n\n    return -0.5 * (--t * (t - 2) - 1);\n  },\n  easeInCubic: function easeInCubic(t) {\n    return t * t * t;\n  },\n  easeOutCubic: function easeOutCubic(t) {\n    return (t = t - 1) * t * t + 1;\n  },\n  easeInOutCubic: function easeInOutCubic(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t;\n    }\n\n    return 0.5 * ((t -= 2) * t * t + 2);\n  },\n  easeInQuart: function easeInQuart(t) {\n    return t * t * t * t;\n  },\n  easeOutQuart: function easeOutQuart(t) {\n    return -((t = t - 1) * t * t * t - 1);\n  },\n  easeInOutQuart: function easeInOutQuart(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t * t;\n    }\n\n    return -0.5 * ((t -= 2) * t * t * t - 2);\n  },\n  easeInQuint: function easeInQuint(t) {\n    return t * t * t * t * t;\n  },\n  easeOutQuint: function easeOutQuint(t) {\n    return (t = t - 1) * t * t * t * t + 1;\n  },\n  easeInOutQuint: function easeInOutQuint(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t * t * t;\n    }\n\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n  },\n  easeInSine: function easeInSine(t) {\n    return -Math.cos(t * (Math.PI / 2)) + 1;\n  },\n  easeOutSine: function easeOutSine(t) {\n    return Math.sin(t * (Math.PI / 2));\n  },\n  easeInOutSine: function easeInOutSine(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n  },\n  easeInExpo: function easeInExpo(t) {\n    return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n  },\n  easeOutExpo: function easeOutExpo(t) {\n    return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n  },\n  easeInOutExpo: function easeInOutExpo(t) {\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if ((t /= 0.5) < 1) {\n      return 0.5 * Math.pow(2, 10 * (t - 1));\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n  },\n  easeInCirc: function easeInCirc(t) {\n    if (t >= 1) {\n      return t;\n    }\n\n    return -(Math.sqrt(1 - t * t) - 1);\n  },\n  easeOutCirc: function easeOutCirc(t) {\n    return Math.sqrt(1 - (t = t - 1) * t);\n  },\n  easeInOutCirc: function easeInOutCirc(t) {\n    if ((t /= 0.5) < 1) {\n      return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n  },\n  easeInElastic: function easeInElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.3;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n  },\n  easeOutElastic: function easeOutElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.3;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n  },\n  easeInOutElastic: function easeInOutElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if ((t /= 0.5) === 2) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.45;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    if (t < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  easeInBack: function easeInBack(t) {\n    var s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack: function easeOutBack(t) {\n    var s = 1.70158;\n    return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack: function easeInOutBack(t) {\n    var s = 1.70158;\n\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n    }\n\n    return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n  },\n  easeInBounce: function easeInBounce(t) {\n    return 1 - effects.easeOutBounce(1 - t);\n  },\n  easeOutBounce: function easeOutBounce(t) {\n    if (t < 1 / 2.75) {\n      return 7.5625 * t * t;\n    }\n\n    if (t < 2 / 2.75) {\n      return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n    }\n\n    if (t < 2.5 / 2.75) {\n      return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n    }\n\n    return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n  },\n  easeInOutBounce: function easeInOutBounce(t) {\n    if (t < 0.5) {\n      return effects.easeInBounce(t * 2) * 0.5;\n    }\n\n    return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n  }\n};\nmodule.exports = {\n  effects: effects\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.easingEffects = effects;","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * @namespace Chart.helpers.canvas\n */\n\n\nvar exports = module.exports = {\n  /**\n   * Clears the entire canvas associated to the given `chart`.\n   * @param {Chart} chart - The chart for which to clear the canvas.\n   */\n  clear: function clear(chart) {\n    chart.ctx.clearRect(0, 0, chart.width, chart.height);\n  },\n\n  /**\n   * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n   * given size (width, height) and the same `radius` for all corners.\n   * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n   * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\n   * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\n   * @param {Number} width - The rectangle's width.\n   * @param {Number} height - The rectangle's height.\n   * @param {Number} radius - The rounded amount (in pixels) for the four corners.\n   * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n   */\n  roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n    if (radius) {\n      // NOTE(SB) `epsilon` helps to prevent minor artifacts appearing\n      // on Chrome when `r` is exactly half the height or the width.\n      var epsilon = 0.0000001;\n      var r = Math.min(radius, height / 2 - epsilon, width / 2 - epsilon);\n      ctx.moveTo(x + r, y);\n      ctx.lineTo(x + width - r, y);\n      ctx.arcTo(x + width, y, x + width, y + r, r);\n      ctx.lineTo(x + width, y + height - r);\n      ctx.arcTo(x + width, y + height, x + width - r, y + height, r);\n      ctx.lineTo(x + r, y + height);\n      ctx.arcTo(x, y + height, x, y + height - r, r);\n      ctx.lineTo(x, y + r);\n      ctx.arcTo(x, y, x + r, y, r);\n      ctx.closePath();\n      ctx.moveTo(x, y);\n    } else {\n      ctx.rect(x, y, width, height);\n    }\n  },\n  drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n    var type, edgeLength, xOffset, yOffset, height, size;\n    rotation = rotation || 0;\n\n    if (style && typeof style === 'object') {\n      type = style.toString();\n\n      if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n        ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n        return;\n      }\n    }\n\n    if (isNaN(radius) || radius <= 0) {\n      return;\n    }\n\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.rotate(rotation * Math.PI / 180);\n    ctx.beginPath();\n\n    switch (style) {\n      // Default includes circle\n      default:\n        ctx.arc(0, 0, radius, 0, Math.PI * 2);\n        ctx.closePath();\n        break;\n\n      case 'triangle':\n        edgeLength = 3 * radius / Math.sqrt(3);\n        height = edgeLength * Math.sqrt(3) / 2;\n        ctx.moveTo(-edgeLength / 2, height / 3);\n        ctx.lineTo(edgeLength / 2, height / 3);\n        ctx.lineTo(0, -2 * height / 3);\n        ctx.closePath();\n        break;\n\n      case 'rect':\n        size = 1 / Math.SQRT2 * radius;\n        ctx.rect(-size, -size, 2 * size, 2 * size);\n        break;\n\n      case 'rectRounded':\n        var offset = radius / Math.SQRT2;\n        var leftX = -offset;\n        var topY = -offset;\n        var sideSize = Math.SQRT2 * radius; // NOTE(SB) the rounded rect implementation changed to use `arcTo`\n        // instead of `quadraticCurveTo` since it generates better results\n        // when rect is almost a circle. 0.425 (instead of 0.5) produces\n        // results visually closer to the previous impl.\n\n        this.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius * 0.425);\n        break;\n\n      case 'rectRot':\n        size = 1 / Math.SQRT2 * radius;\n        ctx.moveTo(-size, 0);\n        ctx.lineTo(0, size);\n        ctx.lineTo(size, 0);\n        ctx.lineTo(0, -size);\n        ctx.closePath();\n        break;\n\n      case 'cross':\n        ctx.moveTo(0, radius);\n        ctx.lineTo(0, -radius);\n        ctx.moveTo(-radius, 0);\n        ctx.lineTo(radius, 0);\n        break;\n\n      case 'crossRot':\n        xOffset = Math.cos(Math.PI / 4) * radius;\n        yOffset = Math.sin(Math.PI / 4) * radius;\n        ctx.moveTo(-xOffset, -yOffset);\n        ctx.lineTo(xOffset, yOffset);\n        ctx.moveTo(-xOffset, yOffset);\n        ctx.lineTo(xOffset, -yOffset);\n        break;\n\n      case 'star':\n        ctx.moveTo(0, radius);\n        ctx.lineTo(0, -radius);\n        ctx.moveTo(-radius, 0);\n        ctx.lineTo(radius, 0);\n        xOffset = Math.cos(Math.PI / 4) * radius;\n        yOffset = Math.sin(Math.PI / 4) * radius;\n        ctx.moveTo(-xOffset, -yOffset);\n        ctx.lineTo(xOffset, yOffset);\n        ctx.moveTo(-xOffset, yOffset);\n        ctx.lineTo(xOffset, -yOffset);\n        break;\n\n      case 'line':\n        ctx.moveTo(-radius, 0);\n        ctx.lineTo(radius, 0);\n        break;\n\n      case 'dash':\n        ctx.moveTo(0, 0);\n        ctx.lineTo(radius, 0);\n        break;\n    }\n\n    ctx.fill();\n    ctx.stroke();\n    ctx.restore();\n  },\n  clipArea: function clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n  },\n  unclipArea: function unclipArea(ctx) {\n    ctx.restore();\n  },\n  lineTo: function lineTo(ctx, previous, target, flip) {\n    if (target.steppedLine) {\n      if (target.steppedLine === 'after' && !flip || target.steppedLine !== 'after' && flip) {\n        ctx.lineTo(previous.x, target.y);\n      } else {\n        ctx.lineTo(target.x, previous.y);\n      }\n\n      ctx.lineTo(target.x, target.y);\n      return;\n    }\n\n    if (!target.tension) {\n      ctx.lineTo(target.x, target.y);\n      return;\n    }\n\n    ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n  }\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.clear = exports.clear;\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.drawRoundedRectangle = function (ctx) {\n  ctx.beginPath();\n  exports.roundedRect.apply(exports, arguments);\n};","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n\n\nmodule.exports = {\n  /**\n   * Converts the given line height `value` in pixels for a specific font `size`.\n   * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n   * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\n   * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n   * @since 2.7.0\n   */\n  toLineHeight: function toLineHeight(value, size) {\n    var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n    if (!matches || matches[1] === 'normal') {\n      return size * 1.2;\n    }\n\n    value = +matches[2];\n\n    switch (matches[3]) {\n      case 'px':\n        return value;\n\n      case '%':\n        value /= 100;\n        break;\n\n      default:\n        break;\n    }\n\n    return size * value;\n  },\n\n  /**\n   * Converts the given value into a padding object with pre-computed width/height.\n   * @param {Number|Object} value - If a number, set the value to all TRBL component,\n   *  else, if and object, use defined properties and sets undefined ones to 0.\n   * @returns {Object} The padding values (top, right, bottom, left, width, height)\n   * @since 2.7.0\n   */\n  toPadding: function toPadding(value) {\n    var t, r, b, l;\n\n    if (helpers.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      top: t,\n      right: r,\n      bottom: b,\n      left: l,\n      height: t + b,\n      width: l + r\n    };\n  },\n\n  /**\n   * Evaluates the given `inputs` sequentially and returns the first defined value.\n   * @param {Array[]} inputs - An array of values, falling back to the last value.\n   * @param {Object} [context] - If defined and the current value is a function, the value\n   * is called with `context` as first argument and the result becomes the new input.\n   * @param {Number} [index] - If defined and the current value is an array, the value\n   * at `index` become the new input.\n   * @since 2.7.0\n   */\n  resolve: function resolve(inputs, context, index) {\n    var i, ilen, value;\n\n    for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n      value = inputs[i];\n\n      if (value === undefined) {\n        continue;\n      }\n\n      if (context !== undefined && typeof value === 'function') {\n        value = value(context);\n      }\n\n      if (index !== undefined && helpers.isArray(value)) {\n        value = value[index];\n      }\n\n      if (value !== undefined) {\n        return value;\n      }\n    }\n  }\n};","/* global window: false */\n\n/* global document: false */\n'use strict';\n\nvar color = require('chartjs-color');\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar scaleService = require('../core/core.scaleService');\n\nmodule.exports = function () {\n  // -- Basic js utility methods\n  helpers.configMerge = function ()\n  /* objects ... */\n  {\n    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = helpers.scaleMerge(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers.merge(tval, [scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers._merger(key, target, source, options);\n        }\n      }\n    });\n  };\n\n  helpers.scaleMerge = function ()\n  /* objects ... */\n  {\n    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers.merge(target[key][i], [scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers._merger(key, target, source, options);\n        }\n      }\n    });\n  };\n\n  helpers.where = function (collection, filterCallback) {\n    if (helpers.isArray(collection) && Array.prototype.filter) {\n      return collection.filter(filterCallback);\n    }\n\n    var filtered = [];\n    helpers.each(collection, function (item) {\n      if (filterCallback(item)) {\n        filtered.push(item);\n      }\n    });\n    return filtered;\n  };\n\n  helpers.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n    return array.findIndex(callback, scope);\n  } : function (array, callback, scope) {\n    scope = scope === undefined ? array : scope;\n\n    for (var i = 0, ilen = array.length; i < ilen; ++i) {\n      if (callback.call(scope, array[i], i, array)) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n\n  helpers.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n    // Default to start of the array\n    if (helpers.isNullOrUndef(startIndex)) {\n      startIndex = -1;\n    }\n\n    for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n      var currentItem = arrayToSearch[i];\n\n      if (filterCallback(currentItem)) {\n        return currentItem;\n      }\n    }\n  };\n\n  helpers.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n    // Default to end of the array\n    if (helpers.isNullOrUndef(startIndex)) {\n      startIndex = arrayToSearch.length;\n    }\n\n    for (var i = startIndex - 1; i >= 0; i--) {\n      var currentItem = arrayToSearch[i];\n\n      if (filterCallback(currentItem)) {\n        return currentItem;\n      }\n    }\n  }; // -- Math methods\n\n\n  helpers.isNumber = function (n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  };\n\n  helpers.almostEquals = function (x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n  };\n\n  helpers.almostWhole = function (x, epsilon) {\n    var rounded = Math.round(x);\n    return rounded - epsilon < x && rounded + epsilon > x;\n  };\n\n  helpers.max = function (array) {\n    return array.reduce(function (max, value) {\n      if (!isNaN(value)) {\n        return Math.max(max, value);\n      }\n\n      return max;\n    }, Number.NEGATIVE_INFINITY);\n  };\n\n  helpers.min = function (array) {\n    return array.reduce(function (min, value) {\n      if (!isNaN(value)) {\n        return Math.min(min, value);\n      }\n\n      return min;\n    }, Number.POSITIVE_INFINITY);\n  };\n\n  helpers.sign = Math.sign ? function (x) {\n    return Math.sign(x);\n  } : function (x) {\n    x = +x; // convert to a number\n\n    if (x === 0 || isNaN(x)) {\n      return x;\n    }\n\n    return x > 0 ? 1 : -1;\n  };\n  helpers.log10 = Math.log10 ? function (x) {\n    return Math.log10(x);\n  } : function (x) {\n    var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n    // Check for whole powers of 10,\n    // which due to floating point rounding error should be corrected.\n\n    var powerOf10 = Math.round(exponent);\n    var isPowerOf10 = x === Math.pow(10, powerOf10);\n    return isPowerOf10 ? powerOf10 : exponent;\n  };\n\n  helpers.toRadians = function (degrees) {\n    return degrees * (Math.PI / 180);\n  };\n\n  helpers.toDegrees = function (radians) {\n    return radians * (180 / Math.PI);\n  }; // Gets the angle from vertical upright to the point about a centre.\n\n\n  helpers.getAngleFromPoint = function (centrePoint, anglePoint) {\n    var distanceFromXCenter = anglePoint.x - centrePoint.x;\n    var distanceFromYCenter = anglePoint.y - centrePoint.y;\n    var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n    if (angle < -0.5 * Math.PI) {\n      angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n\n    return {\n      angle: angle,\n      distance: radialDistanceFromCenter\n    };\n  };\n\n  helpers.distanceBetweenPoints = function (pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n  };\n\n  helpers.aliasPixel = function (pixelWidth) {\n    return pixelWidth % 2 === 0 ? 0 : 0.5;\n  };\n\n  helpers.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    var previous = firstPoint.skip ? middlePoint : firstPoint;\n    var current = middlePoint;\n    var next = afterPoint.skip ? middlePoint : afterPoint;\n    var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n    var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n    var s01 = d01 / (d01 + d12);\n    var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    var fa = t * s01; // scaling factor for triangle Ta\n\n    var fb = t * s12;\n    return {\n      previous: {\n        x: current.x - fa * (next.x - previous.x),\n        y: current.y - fa * (next.y - previous.y)\n      },\n      next: {\n        x: current.x + fb * (next.x - previous.x),\n        y: current.y + fb * (next.y - previous.y)\n      }\n    };\n  };\n\n  helpers.EPSILON = Number.EPSILON || 1e-14;\n\n  helpers.splineCurveMonotone = function (points) {\n    // This function calculates Bézier control points in a similar way than |splineCurve|,\n    // but preserves monotonicity of the provided data and ensures no local extremums are added\n    // between the dataset discrete points due to the interpolation.\n    // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n    var pointsWithTangents = (points || []).map(function (point) {\n      return {\n        model: point._model,\n        deltaK: 0,\n        mK: 0\n      };\n    }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n    var pointsLen = pointsWithTangents.length;\n    var i, pointBefore, pointCurrent, pointAfter;\n\n    for (i = 0; i < pointsLen; ++i) {\n      pointCurrent = pointsWithTangents[i];\n\n      if (pointCurrent.model.skip) {\n        continue;\n      }\n\n      pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n      pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n      if (pointAfter && !pointAfter.model.skip) {\n        var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n        pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n      }\n\n      if (!pointBefore || pointBefore.model.skip) {\n        pointCurrent.mK = pointCurrent.deltaK;\n      } else if (!pointAfter || pointAfter.model.skip) {\n        pointCurrent.mK = pointBefore.deltaK;\n      } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n        pointCurrent.mK = 0;\n      } else {\n        pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n      }\n    } // Adjust tangents to ensure monotonic properties\n\n\n    var alphaK, betaK, tauK, squaredMagnitude;\n\n    for (i = 0; i < pointsLen - 1; ++i) {\n      pointCurrent = pointsWithTangents[i];\n      pointAfter = pointsWithTangents[i + 1];\n\n      if (pointCurrent.model.skip || pointAfter.model.skip) {\n        continue;\n      }\n\n      if (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n        pointCurrent.mK = pointAfter.mK = 0;\n        continue;\n      }\n\n      alphaK = pointCurrent.mK / pointCurrent.deltaK;\n      betaK = pointAfter.mK / pointCurrent.deltaK;\n      squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n      if (squaredMagnitude <= 9) {\n        continue;\n      }\n\n      tauK = 3 / Math.sqrt(squaredMagnitude);\n      pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n      pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n    } // Compute control points\n\n\n    var deltaX;\n\n    for (i = 0; i < pointsLen; ++i) {\n      pointCurrent = pointsWithTangents[i];\n\n      if (pointCurrent.model.skip) {\n        continue;\n      }\n\n      pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n      pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n      if (pointBefore && !pointBefore.model.skip) {\n        deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n        pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n        pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n      }\n\n      if (pointAfter && !pointAfter.model.skip) {\n        deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n        pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n        pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n      }\n    }\n  };\n\n  helpers.nextItem = function (collection, index, loop) {\n    if (loop) {\n      return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n    }\n\n    return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n  };\n\n  helpers.previousItem = function (collection, index, loop) {\n    if (loop) {\n      return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n    }\n\n    return index <= 0 ? collection[0] : collection[index - 1];\n  }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n  helpers.niceNum = function (range, round) {\n    var exponent = Math.floor(helpers.log10(range));\n    var fraction = range / Math.pow(10, exponent);\n    var niceFraction;\n\n    if (round) {\n      if (fraction < 1.5) {\n        niceFraction = 1;\n      } else if (fraction < 3) {\n        niceFraction = 2;\n      } else if (fraction < 7) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n    } else if (fraction <= 1.0) {\n      niceFraction = 1;\n    } else if (fraction <= 2) {\n      niceFraction = 2;\n    } else if (fraction <= 5) {\n      niceFraction = 5;\n    } else {\n      niceFraction = 10;\n    }\n\n    return niceFraction * Math.pow(10, exponent);\n  }; // Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n  helpers.requestAnimFrame = function () {\n    if (typeof window === 'undefined') {\n      return function (callback) {\n        callback();\n      };\n    }\n\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n      return window.setTimeout(callback, 1000 / 60);\n    };\n  }(); // -- DOM methods\n\n\n  helpers.getRelativePosition = function (evt, chart) {\n    var mouseX, mouseY;\n    var e = evt.originalEvent || evt;\n    var canvas = evt.target || evt.srcElement;\n    var boundingRect = canvas.getBoundingClientRect();\n    var touches = e.touches;\n\n    if (touches && touches.length > 0) {\n      mouseX = touches[0].clientX;\n      mouseY = touches[0].clientY;\n    } else {\n      mouseX = e.clientX;\n      mouseY = e.clientY;\n    } // Scale mouse coordinates into canvas coordinates\n    // by following the pattern laid out by 'jerryj' in the comments of\n    // http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n    var paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n    var paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n    var paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n    var paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n    var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n    var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n    // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n    mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n    mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n    return {\n      x: mouseX,\n      y: mouseY\n    };\n  }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n  function parseMaxStyle(styleValue, node, parentProperty) {\n    var valueInPixels;\n\n    if (typeof styleValue === 'string') {\n      valueInPixels = parseInt(styleValue, 10);\n\n      if (styleValue.indexOf('%') !== -1) {\n        // percentage * size in dimension\n        valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n      }\n    } else {\n      valueInPixels = styleValue;\n    }\n\n    return valueInPixels;\n  }\n  /**\n   * Returns if the given value contains an effective constraint.\n   * @private\n   */\n\n\n  function isConstrainedValue(value) {\n    return value !== undefined && value !== null && value !== 'none';\n  } // Private helper to get a constraint dimension\n  // @param domNode : the node to check the constraint on\n  // @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n  // @param percentageProperty : property of parent to use when calculating width as a percentage\n  // @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\n\n  function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n    var view = document.defaultView;\n\n    var parentNode = helpers._getParentNode(domNode);\n\n    var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n    var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n    var hasCNode = isConstrainedValue(constrainedNode);\n    var hasCContainer = isConstrainedValue(constrainedContainer);\n    var infinity = Number.POSITIVE_INFINITY;\n\n    if (hasCNode || hasCContainer) {\n      return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n    }\n\n    return 'none';\n  } // returns Number or undefined if no constraint\n\n\n  helpers.getConstraintWidth = function (domNode) {\n    return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n  }; // returns Number or undefined if no constraint\n\n\n  helpers.getConstraintHeight = function (domNode) {\n    return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n  };\n  /**\n   * @private\n  \t */\n\n\n  helpers._calculatePadding = function (container, padding, parentDimension) {\n    padding = helpers.getStyle(container, padding);\n    return padding.indexOf('%') > -1 ? parentDimension / parseInt(padding, 10) : parseInt(padding, 10);\n  };\n  /**\n   * @private\n   */\n\n\n  helpers._getParentNode = function (domNode) {\n    var parent = domNode.parentNode;\n\n    if (parent && parent.host) {\n      parent = parent.host;\n    }\n\n    return parent;\n  };\n\n  helpers.getMaximumWidth = function (domNode) {\n    var container = helpers._getParentNode(domNode);\n\n    if (!container) {\n      return domNode.clientWidth;\n    }\n\n    var clientWidth = container.clientWidth;\n\n    var paddingLeft = helpers._calculatePadding(container, 'padding-left', clientWidth);\n\n    var paddingRight = helpers._calculatePadding(container, 'padding-right', clientWidth);\n\n    var w = clientWidth - paddingLeft - paddingRight;\n    var cw = helpers.getConstraintWidth(domNode);\n    return isNaN(cw) ? w : Math.min(w, cw);\n  };\n\n  helpers.getMaximumHeight = function (domNode) {\n    var container = helpers._getParentNode(domNode);\n\n    if (!container) {\n      return domNode.clientHeight;\n    }\n\n    var clientHeight = container.clientHeight;\n\n    var paddingTop = helpers._calculatePadding(container, 'padding-top', clientHeight);\n\n    var paddingBottom = helpers._calculatePadding(container, 'padding-bottom', clientHeight);\n\n    var h = clientHeight - paddingTop - paddingBottom;\n    var ch = helpers.getConstraintHeight(domNode);\n    return isNaN(ch) ? h : Math.min(h, ch);\n  };\n\n  helpers.getStyle = function (el, property) {\n    return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n  };\n\n  helpers.retinaScale = function (chart, forceRatio) {\n    var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n    if (pixelRatio === 1) {\n      return;\n    }\n\n    var canvas = chart.canvas;\n    var height = chart.height;\n    var width = chart.width;\n    canvas.height = height * pixelRatio;\n    canvas.width = width * pixelRatio;\n    chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n\n    if (!canvas.style.height && !canvas.style.width) {\n      canvas.style.height = height + 'px';\n      canvas.style.width = width + 'px';\n    }\n  }; // -- Canvas methods\n\n\n  helpers.fontString = function (pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n  };\n\n  helpers.longestText = function (ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    var data = cache.data = cache.data || {};\n    var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n    if (cache.font !== font) {\n      data = cache.data = {};\n      gc = cache.garbageCollect = [];\n      cache.font = font;\n    }\n\n    ctx.font = font;\n    var longest = 0;\n    helpers.each(arrayOfThings, function (thing) {\n      // Undefined strings and arrays should not be measured\n      if (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n        longest = helpers.measureText(ctx, data, gc, longest, thing);\n      } else if (helpers.isArray(thing)) {\n        // if it is an array lets measure each element\n        // to do maybe simplify this function a bit so we can do this more recursively?\n        helpers.each(thing, function (nestedThing) {\n          // Undefined strings and arrays should not be measured\n          if (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n            longest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n          }\n        });\n      }\n    });\n    var gcLen = gc.length / 2;\n\n    if (gcLen > arrayOfThings.length) {\n      for (var i = 0; i < gcLen; i++) {\n        delete data[gc[i]];\n      }\n\n      gc.splice(0, gcLen);\n    }\n\n    return longest;\n  };\n\n  helpers.measureText = function (ctx, data, gc, longest, string) {\n    var textWidth = data[string];\n\n    if (!textWidth) {\n      textWidth = data[string] = ctx.measureText(string).width;\n      gc.push(string);\n    }\n\n    if (textWidth > longest) {\n      longest = textWidth;\n    }\n\n    return longest;\n  };\n\n  helpers.numberOfLabelLines = function (arrayOfThings) {\n    var numberOfLines = 1;\n    helpers.each(arrayOfThings, function (thing) {\n      if (helpers.isArray(thing)) {\n        if (thing.length > numberOfLines) {\n          numberOfLines = thing.length;\n        }\n      }\n    });\n    return numberOfLines;\n  };\n\n  helpers.color = !color ? function (value) {\n    console.error('Color.js not found!');\n    return value;\n  } : function (value) {\n    /* global CanvasGradient */\n    if (value instanceof CanvasGradient) {\n      value = defaults.global.defaultColor;\n    }\n\n    return color(value);\n  };\n\n  helpers.getHoverColor = function (colorValue) {\n    /* global CanvasPattern */\n    return colorValue instanceof CanvasPattern ? colorValue : helpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n  };\n};","var conversions = require(\"./conversions\");\n\nvar convert = function convert() {\n  return new Converter();\n};\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] = function (func) {\n    // accept array or plain args\n    return function (arg) {\n      if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    };\n  }(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = function (func) {\n    return function (arg) {\n      if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n      for (var i = 0; i < val.length; i++) {\n        val[i] = Math.round(val[i]);\n      }\n\n      return val;\n    };\n  }(func);\n}\n/* Converter does lazy conversion and caching */\n\n\nvar Converter = function Converter() {\n  this.convs = {};\n};\n/* Either get the values for a space or\n  set the values for a space, depending on args */\n\n\nConverter.prototype.routeSpace = function (space, args) {\n  var values = args[0];\n\n  if (values === undefined) {\n    // color.rgb()\n    return this.getValues(space);\n  } // color.rgb(10, 10, 10)\n\n\n  if (typeof values == \"number\") {\n    values = Array.prototype.slice.call(args);\n  }\n\n  return this.setValues(space, values);\n};\n/* Set the values for a space, invalidating cache */\n\n\nConverter.prototype.setValues = function (space, values) {\n  this.space = space;\n  this.convs = {};\n  this.convs[space] = values;\n  return this;\n};\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\n\n\nConverter.prototype.getValues = function (space) {\n  var vals = this.convs[space];\n\n  if (!vals) {\n    var fspace = this.space,\n        from = this.convs[fspace];\n    vals = convert[fspace][space](from);\n    this.convs[space] = vals;\n  }\n\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n  Converter.prototype[space] = function (vals) {\n    return this.routeSpace(space, arguments);\n  };\n});\nmodule.exports = convert;","/* MIT license */\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n};\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h,\n      s,\n      l;\n  if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n  h = Math.min(h * 60, 360);\n  if (h < 0) h += 360;\n  l = (min + max) / 2;\n  if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h,\n      s,\n      v;\n  if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n  if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n  h = Math.min(h * 60, 360);\n  if (h < 0) h += 360;\n  v = max / 255 * 1000 / 10;\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1 / 255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c,\n      m,\n      y,\n      k;\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255; // assume sRGB\n\n  r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n  g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n  b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n  var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n  var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n  var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n  return [x * 100, y * 100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n      x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l,\n      a,\n      b;\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n  l = 116 * y - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1,\n      t2,\n      t3,\n      rgb,\n      val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n  rgb = [0, 0, 0];\n\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * -(i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n    if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv,\n      v;\n\n  if (l === 0) {\n    // no need to do calc on black\n    // also avoids divide by 0 error\n    return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= l <= 1 ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = 2 * s / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - s * f),\n      t = 255 * v * (1 - s * (1 - f)),\n      v = 255 * v;\n\n  switch (hi) {\n    case 0:\n      return [v, t, p];\n\n    case 1:\n      return [q, v, p];\n\n    case 2:\n      return [p, v, t];\n\n    case 3:\n      return [p, q, v];\n\n    case 4:\n      return [t, p, v];\n\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl,\n      l;\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= l <= 1 ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args));\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n} // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i,\n      v,\n      f,\n      n; // wh + bl cant be > 1\n\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n\n  n = wh + f * (v - wh); // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0:\n      r = v;\n      g = n;\n      b = wh;\n      break;\n\n    case 1:\n      r = n;\n      g = v;\n      b = wh;\n      break;\n\n    case 2:\n      r = wh;\n      g = v;\n      b = n;\n      break;\n\n    case 3:\n      r = wh;\n      g = n;\n      b = v;\n      break;\n\n    case 4:\n      r = n;\n      g = wh;\n      b = v;\n      break;\n\n    case 5:\n      r = v;\n      g = wh;\n      b = n;\n      break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r,\n      g,\n      b;\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r,\n      g,\n      b;\n  r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n  g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n  b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n  r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n  g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n  b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l,\n      a,\n      b;\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n  l = 116 * y - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x,\n      y,\n      z,\n      y2;\n\n  if (l <= 8) {\n    y = l * 100 / 903.3;\n    y2 = 7.787 * (y / 100) + 16 / 116;\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1 / 3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n  z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr,\n      h,\n      c;\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n\n  if (h < 0) {\n    h += 360;\n  }\n\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a,\n      b,\n      hr;\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue: [240, 248, 255],\n  antiquewhite: [250, 235, 215],\n  aqua: [0, 255, 255],\n  aquamarine: [127, 255, 212],\n  azure: [240, 255, 255],\n  beige: [245, 245, 220],\n  bisque: [255, 228, 196],\n  black: [0, 0, 0],\n  blanchedalmond: [255, 235, 205],\n  blue: [0, 0, 255],\n  blueviolet: [138, 43, 226],\n  brown: [165, 42, 42],\n  burlywood: [222, 184, 135],\n  cadetblue: [95, 158, 160],\n  chartreuse: [127, 255, 0],\n  chocolate: [210, 105, 30],\n  coral: [255, 127, 80],\n  cornflowerblue: [100, 149, 237],\n  cornsilk: [255, 248, 220],\n  crimson: [220, 20, 60],\n  cyan: [0, 255, 255],\n  darkblue: [0, 0, 139],\n  darkcyan: [0, 139, 139],\n  darkgoldenrod: [184, 134, 11],\n  darkgray: [169, 169, 169],\n  darkgreen: [0, 100, 0],\n  darkgrey: [169, 169, 169],\n  darkkhaki: [189, 183, 107],\n  darkmagenta: [139, 0, 139],\n  darkolivegreen: [85, 107, 47],\n  darkorange: [255, 140, 0],\n  darkorchid: [153, 50, 204],\n  darkred: [139, 0, 0],\n  darksalmon: [233, 150, 122],\n  darkseagreen: [143, 188, 143],\n  darkslateblue: [72, 61, 139],\n  darkslategray: [47, 79, 79],\n  darkslategrey: [47, 79, 79],\n  darkturquoise: [0, 206, 209],\n  darkviolet: [148, 0, 211],\n  deeppink: [255, 20, 147],\n  deepskyblue: [0, 191, 255],\n  dimgray: [105, 105, 105],\n  dimgrey: [105, 105, 105],\n  dodgerblue: [30, 144, 255],\n  firebrick: [178, 34, 34],\n  floralwhite: [255, 250, 240],\n  forestgreen: [34, 139, 34],\n  fuchsia: [255, 0, 255],\n  gainsboro: [220, 220, 220],\n  ghostwhite: [248, 248, 255],\n  gold: [255, 215, 0],\n  goldenrod: [218, 165, 32],\n  gray: [128, 128, 128],\n  green: [0, 128, 0],\n  greenyellow: [173, 255, 47],\n  grey: [128, 128, 128],\n  honeydew: [240, 255, 240],\n  hotpink: [255, 105, 180],\n  indianred: [205, 92, 92],\n  indigo: [75, 0, 130],\n  ivory: [255, 255, 240],\n  khaki: [240, 230, 140],\n  lavender: [230, 230, 250],\n  lavenderblush: [255, 240, 245],\n  lawngreen: [124, 252, 0],\n  lemonchiffon: [255, 250, 205],\n  lightblue: [173, 216, 230],\n  lightcoral: [240, 128, 128],\n  lightcyan: [224, 255, 255],\n  lightgoldenrodyellow: [250, 250, 210],\n  lightgray: [211, 211, 211],\n  lightgreen: [144, 238, 144],\n  lightgrey: [211, 211, 211],\n  lightpink: [255, 182, 193],\n  lightsalmon: [255, 160, 122],\n  lightseagreen: [32, 178, 170],\n  lightskyblue: [135, 206, 250],\n  lightslategray: [119, 136, 153],\n  lightslategrey: [119, 136, 153],\n  lightsteelblue: [176, 196, 222],\n  lightyellow: [255, 255, 224],\n  lime: [0, 255, 0],\n  limegreen: [50, 205, 50],\n  linen: [250, 240, 230],\n  magenta: [255, 0, 255],\n  maroon: [128, 0, 0],\n  mediumaquamarine: [102, 205, 170],\n  mediumblue: [0, 0, 205],\n  mediumorchid: [186, 85, 211],\n  mediumpurple: [147, 112, 219],\n  mediumseagreen: [60, 179, 113],\n  mediumslateblue: [123, 104, 238],\n  mediumspringgreen: [0, 250, 154],\n  mediumturquoise: [72, 209, 204],\n  mediumvioletred: [199, 21, 133],\n  midnightblue: [25, 25, 112],\n  mintcream: [245, 255, 250],\n  mistyrose: [255, 228, 225],\n  moccasin: [255, 228, 181],\n  navajowhite: [255, 222, 173],\n  navy: [0, 0, 128],\n  oldlace: [253, 245, 230],\n  olive: [128, 128, 0],\n  olivedrab: [107, 142, 35],\n  orange: [255, 165, 0],\n  orangered: [255, 69, 0],\n  orchid: [218, 112, 214],\n  palegoldenrod: [238, 232, 170],\n  palegreen: [152, 251, 152],\n  paleturquoise: [175, 238, 238],\n  palevioletred: [219, 112, 147],\n  papayawhip: [255, 239, 213],\n  peachpuff: [255, 218, 185],\n  peru: [205, 133, 63],\n  pink: [255, 192, 203],\n  plum: [221, 160, 221],\n  powderblue: [176, 224, 230],\n  purple: [128, 0, 128],\n  rebeccapurple: [102, 51, 153],\n  red: [255, 0, 0],\n  rosybrown: [188, 143, 143],\n  royalblue: [65, 105, 225],\n  saddlebrown: [139, 69, 19],\n  salmon: [250, 128, 114],\n  sandybrown: [244, 164, 96],\n  seagreen: [46, 139, 87],\n  seashell: [255, 245, 238],\n  sienna: [160, 82, 45],\n  silver: [192, 192, 192],\n  skyblue: [135, 206, 235],\n  slateblue: [106, 90, 205],\n  slategray: [112, 128, 144],\n  slategrey: [112, 128, 144],\n  snow: [255, 250, 250],\n  springgreen: [0, 255, 127],\n  steelblue: [70, 130, 180],\n  tan: [210, 180, 140],\n  teal: [0, 128, 128],\n  thistle: [216, 191, 216],\n  tomato: [255, 99, 71],\n  turquoise: [64, 224, 208],\n  violet: [238, 130, 238],\n  wheat: [245, 222, 179],\n  white: [255, 255, 255],\n  whitesmoke: [245, 245, 245],\n  yellow: [255, 255, 0],\n  yellowgreen: [154, 205, 50]\n};\nvar reverseKeywords = {};\n\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}","/* MIT license */\nvar colorNames = require('color-name');\n\nmodule.exports = {\n  getRgba: getRgba,\n  getHsla: getHsla,\n  getRgb: getRgb,\n  getHsl: getHsl,\n  getHwb: getHwb,\n  getAlpha: getAlpha,\n  hexString: hexString,\n  rgbString: rgbString,\n  rgbaString: rgbaString,\n  percentString: percentString,\n  percentaString: percentaString,\n  hslString: hslString,\n  hslaString: hslaString,\n  hwbString: hwbString,\n  keyword: keyword\n};\n\nfunction getRgba(string) {\n  if (!string) {\n    return;\n  }\n\n  var abbr = /^#([a-fA-F0-9]{3})$/i,\n      hex = /^#([a-fA-F0-9]{6})$/i,\n      rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n      per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n      keyword = /(\\w+)/;\n  var rgb = [0, 0, 0],\n      a = 1,\n      match = string.match(abbr);\n\n  if (match) {\n    match = match[1];\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match[i] + match[i], 16);\n    }\n  } else if (match = string.match(hex)) {\n    match = match[1];\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n    }\n  } else if (match = string.match(rgba)) {\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match[i + 1]);\n    }\n\n    a = parseFloat(match[4]);\n  } else if (match = string.match(per)) {\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n    }\n\n    a = parseFloat(match[4]);\n  } else if (match = string.match(keyword)) {\n    if (match[1] == \"transparent\") {\n      return [0, 0, 0, 0];\n    }\n\n    rgb = colorNames[match[1]];\n\n    if (!rgb) {\n      return;\n    }\n  }\n\n  for (var i = 0; i < rgb.length; i++) {\n    rgb[i] = scale(rgb[i], 0, 255);\n  }\n\n  if (!a && a != 0) {\n    a = 1;\n  } else {\n    a = scale(a, 0, 1);\n  }\n\n  rgb[3] = a;\n  return rgb;\n}\n\nfunction getHsla(string) {\n  if (!string) {\n    return;\n  }\n\n  var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n  var match = string.match(hsl);\n\n  if (match) {\n    var alpha = parseFloat(match[4]);\n    var h = scale(parseInt(match[1]), 0, 360),\n        s = scale(parseFloat(match[2]), 0, 100),\n        l = scale(parseFloat(match[3]), 0, 100),\n        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n    return [h, s, l, a];\n  }\n}\n\nfunction getHwb(string) {\n  if (!string) {\n    return;\n  }\n\n  var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n  var match = string.match(hwb);\n\n  if (match) {\n    var alpha = parseFloat(match[4]);\n    var h = scale(parseInt(match[1]), 0, 360),\n        w = scale(parseFloat(match[2]), 0, 100),\n        b = scale(parseFloat(match[3]), 0, 100),\n        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n    return [h, w, b, a];\n  }\n}\n\nfunction getRgb(string) {\n  var rgba = getRgba(string);\n  return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n  var vals = getRgba(string);\n\n  if (vals) {\n    return vals[3];\n  } else if (vals = getHsla(string)) {\n    return vals[3];\n  } else if (vals = getHwb(string)) {\n    return vals[3];\n  }\n} // generators\n\n\nfunction hexString(rgb) {\n  return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1]) + hexDouble(rgb[2]);\n}\n\nfunction rgbString(rgba, alpha) {\n  if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n    return rgbaString(rgba, alpha);\n  }\n\n  return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n  if (alpha === undefined) {\n    alpha = rgba[3] !== undefined ? rgba[3] : 1;\n  }\n\n  return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n  if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n    return percentaString(rgba, alpha);\n  }\n\n  var r = Math.round(rgba[0] / 255 * 100),\n      g = Math.round(rgba[1] / 255 * 100),\n      b = Math.round(rgba[2] / 255 * 100);\n  return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n  var r = Math.round(rgba[0] / 255 * 100),\n      g = Math.round(rgba[1] / 255 * 100),\n      b = Math.round(rgba[2] / 255 * 100);\n  return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n  if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n    return hslaString(hsla, alpha);\n  }\n\n  return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n  if (alpha === undefined) {\n    alpha = hsla[3] !== undefined ? hsla[3] : 1;\n  }\n\n  return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n} // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\n\n\nfunction hwbString(hwb, alpha) {\n  if (alpha === undefined) {\n    alpha = hwb[3] !== undefined ? hwb[3] : 1;\n  }\n\n  return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n} // helpers\n\n\nfunction scale(num, min, max) {\n  return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return str.length < 2 ? \"0\" + str : str;\n} //create a list of reverse color names\n\n\nvar reverseNames = {};\n\nfor (var name in colorNames) {\n  reverseNames[colorNames[name]] = name;\n}","'use strict';\n\nmodule.exports = {\n  \"aliceblue\": [240, 248, 255],\n  \"antiquewhite\": [250, 235, 215],\n  \"aqua\": [0, 255, 255],\n  \"aquamarine\": [127, 255, 212],\n  \"azure\": [240, 255, 255],\n  \"beige\": [245, 245, 220],\n  \"bisque\": [255, 228, 196],\n  \"black\": [0, 0, 0],\n  \"blanchedalmond\": [255, 235, 205],\n  \"blue\": [0, 0, 255],\n  \"blueviolet\": [138, 43, 226],\n  \"brown\": [165, 42, 42],\n  \"burlywood\": [222, 184, 135],\n  \"cadetblue\": [95, 158, 160],\n  \"chartreuse\": [127, 255, 0],\n  \"chocolate\": [210, 105, 30],\n  \"coral\": [255, 127, 80],\n  \"cornflowerblue\": [100, 149, 237],\n  \"cornsilk\": [255, 248, 220],\n  \"crimson\": [220, 20, 60],\n  \"cyan\": [0, 255, 255],\n  \"darkblue\": [0, 0, 139],\n  \"darkcyan\": [0, 139, 139],\n  \"darkgoldenrod\": [184, 134, 11],\n  \"darkgray\": [169, 169, 169],\n  \"darkgreen\": [0, 100, 0],\n  \"darkgrey\": [169, 169, 169],\n  \"darkkhaki\": [189, 183, 107],\n  \"darkmagenta\": [139, 0, 139],\n  \"darkolivegreen\": [85, 107, 47],\n  \"darkorange\": [255, 140, 0],\n  \"darkorchid\": [153, 50, 204],\n  \"darkred\": [139, 0, 0],\n  \"darksalmon\": [233, 150, 122],\n  \"darkseagreen\": [143, 188, 143],\n  \"darkslateblue\": [72, 61, 139],\n  \"darkslategray\": [47, 79, 79],\n  \"darkslategrey\": [47, 79, 79],\n  \"darkturquoise\": [0, 206, 209],\n  \"darkviolet\": [148, 0, 211],\n  \"deeppink\": [255, 20, 147],\n  \"deepskyblue\": [0, 191, 255],\n  \"dimgray\": [105, 105, 105],\n  \"dimgrey\": [105, 105, 105],\n  \"dodgerblue\": [30, 144, 255],\n  \"firebrick\": [178, 34, 34],\n  \"floralwhite\": [255, 250, 240],\n  \"forestgreen\": [34, 139, 34],\n  \"fuchsia\": [255, 0, 255],\n  \"gainsboro\": [220, 220, 220],\n  \"ghostwhite\": [248, 248, 255],\n  \"gold\": [255, 215, 0],\n  \"goldenrod\": [218, 165, 32],\n  \"gray\": [128, 128, 128],\n  \"green\": [0, 128, 0],\n  \"greenyellow\": [173, 255, 47],\n  \"grey\": [128, 128, 128],\n  \"honeydew\": [240, 255, 240],\n  \"hotpink\": [255, 105, 180],\n  \"indianred\": [205, 92, 92],\n  \"indigo\": [75, 0, 130],\n  \"ivory\": [255, 255, 240],\n  \"khaki\": [240, 230, 140],\n  \"lavender\": [230, 230, 250],\n  \"lavenderblush\": [255, 240, 245],\n  \"lawngreen\": [124, 252, 0],\n  \"lemonchiffon\": [255, 250, 205],\n  \"lightblue\": [173, 216, 230],\n  \"lightcoral\": [240, 128, 128],\n  \"lightcyan\": [224, 255, 255],\n  \"lightgoldenrodyellow\": [250, 250, 210],\n  \"lightgray\": [211, 211, 211],\n  \"lightgreen\": [144, 238, 144],\n  \"lightgrey\": [211, 211, 211],\n  \"lightpink\": [255, 182, 193],\n  \"lightsalmon\": [255, 160, 122],\n  \"lightseagreen\": [32, 178, 170],\n  \"lightskyblue\": [135, 206, 250],\n  \"lightslategray\": [119, 136, 153],\n  \"lightslategrey\": [119, 136, 153],\n  \"lightsteelblue\": [176, 196, 222],\n  \"lightyellow\": [255, 255, 224],\n  \"lime\": [0, 255, 0],\n  \"limegreen\": [50, 205, 50],\n  \"linen\": [250, 240, 230],\n  \"magenta\": [255, 0, 255],\n  \"maroon\": [128, 0, 0],\n  \"mediumaquamarine\": [102, 205, 170],\n  \"mediumblue\": [0, 0, 205],\n  \"mediumorchid\": [186, 85, 211],\n  \"mediumpurple\": [147, 112, 219],\n  \"mediumseagreen\": [60, 179, 113],\n  \"mediumslateblue\": [123, 104, 238],\n  \"mediumspringgreen\": [0, 250, 154],\n  \"mediumturquoise\": [72, 209, 204],\n  \"mediumvioletred\": [199, 21, 133],\n  \"midnightblue\": [25, 25, 112],\n  \"mintcream\": [245, 255, 250],\n  \"mistyrose\": [255, 228, 225],\n  \"moccasin\": [255, 228, 181],\n  \"navajowhite\": [255, 222, 173],\n  \"navy\": [0, 0, 128],\n  \"oldlace\": [253, 245, 230],\n  \"olive\": [128, 128, 0],\n  \"olivedrab\": [107, 142, 35],\n  \"orange\": [255, 165, 0],\n  \"orangered\": [255, 69, 0],\n  \"orchid\": [218, 112, 214],\n  \"palegoldenrod\": [238, 232, 170],\n  \"palegreen\": [152, 251, 152],\n  \"paleturquoise\": [175, 238, 238],\n  \"palevioletred\": [219, 112, 147],\n  \"papayawhip\": [255, 239, 213],\n  \"peachpuff\": [255, 218, 185],\n  \"peru\": [205, 133, 63],\n  \"pink\": [255, 192, 203],\n  \"plum\": [221, 160, 221],\n  \"powderblue\": [176, 224, 230],\n  \"purple\": [128, 0, 128],\n  \"rebeccapurple\": [102, 51, 153],\n  \"red\": [255, 0, 0],\n  \"rosybrown\": [188, 143, 143],\n  \"royalblue\": [65, 105, 225],\n  \"saddlebrown\": [139, 69, 19],\n  \"salmon\": [250, 128, 114],\n  \"sandybrown\": [244, 164, 96],\n  \"seagreen\": [46, 139, 87],\n  \"seashell\": [255, 245, 238],\n  \"sienna\": [160, 82, 45],\n  \"silver\": [192, 192, 192],\n  \"skyblue\": [135, 206, 235],\n  \"slateblue\": [106, 90, 205],\n  \"slategray\": [112, 128, 144],\n  \"slategrey\": [112, 128, 144],\n  \"snow\": [255, 250, 250],\n  \"springgreen\": [0, 255, 127],\n  \"steelblue\": [70, 130, 180],\n  \"tan\": [210, 180, 140],\n  \"teal\": [0, 128, 128],\n  \"thistle\": [216, 191, 216],\n  \"tomato\": [255, 99, 71],\n  \"turquoise\": [64, 224, 208],\n  \"violet\": [238, 130, 238],\n  \"wheat\": [245, 222, 179],\n  \"white\": [255, 255, 255],\n  \"whitesmoke\": [245, 245, 245],\n  \"yellow\": [255, 255, 0],\n  \"yellowgreen\": [154, 205, 50]\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  elements: {\n    arc: {\n      backgroundColor: defaults.global.defaultColor,\n      borderColor: '#fff',\n      borderWidth: 2\n    }\n  }\n});\n\nmodule.exports = Element.extend({\n  inLabelRange: function inLabelRange(mouseX) {\n    var vm = this._view;\n\n    if (vm) {\n      return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n    }\n\n    return false;\n  },\n  inRange: function inRange(chartX, chartY) {\n    var vm = this._view;\n\n    if (vm) {\n      var pointRelativePosition = helpers.getAngleFromPoint(vm, {\n        x: chartX,\n        y: chartY\n      });\n      var angle = pointRelativePosition.angle;\n      var distance = pointRelativePosition.distance; // Sanitise angle range\n\n      var startAngle = vm.startAngle;\n      var endAngle = vm.endAngle;\n\n      while (endAngle < startAngle) {\n        endAngle += 2.0 * Math.PI;\n      }\n\n      while (angle > endAngle) {\n        angle -= 2.0 * Math.PI;\n      }\n\n      while (angle < startAngle) {\n        angle += 2.0 * Math.PI;\n      } // Check if within the range of the open/close angle\n\n\n      var betweenAngles = angle >= startAngle && angle <= endAngle;\n      var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n      return betweenAngles && withinRadius;\n    }\n\n    return false;\n  },\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n    var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n    return {\n      x: vm.x + Math.cos(halfAngle) * halfRadius,\n      y: vm.y + Math.sin(halfAngle) * halfRadius\n    };\n  },\n  getArea: function getArea() {\n    var vm = this._view;\n    return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n    var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n    return {\n      x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n      y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n    };\n  },\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var sA = vm.startAngle;\n    var eA = vm.endAngle;\n    ctx.beginPath();\n    ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n    ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n    ctx.closePath();\n    ctx.strokeStyle = vm.borderColor;\n    ctx.lineWidth = vm.borderWidth;\n    ctx.fillStyle = vm.backgroundColor;\n    ctx.fill();\n    ctx.lineJoin = 'bevel';\n\n    if (vm.borderWidth) {\n      ctx.stroke();\n    }\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar globalDefaults = defaults.global;\n\ndefaults._set('global', {\n  elements: {\n    line: {\n      tension: 0.4,\n      backgroundColor: globalDefaults.defaultColor,\n      borderWidth: 3,\n      borderColor: globalDefaults.defaultColor,\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      capBezierPoints: true,\n      fill: true // do we fill in the area between the line and its base axis\n\n    }\n  }\n});\n\nmodule.exports = Element.extend({\n  draw: function draw() {\n    var me = this;\n    var vm = me._view;\n    var ctx = me._chart.ctx;\n    var spanGaps = vm.spanGaps;\n\n    var points = me._children.slice(); // clone array\n\n\n    var globalOptionLineElements = globalDefaults.elements.line;\n    var lastDrawnIndex = -1;\n    var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n    if (me._loop && points.length) {\n      points.push(points[0]);\n    }\n\n    ctx.save(); // Stroke Line Options\n\n    ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n    }\n\n    ctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n    ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n    ctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n    ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n    ctx.beginPath();\n    lastDrawnIndex = -1;\n\n    for (index = 0; index < points.length; ++index) {\n      current = points[index];\n      previous = helpers.previousItem(points, index);\n      currentVM = current._view; // First point moves to it's starting position no matter what\n\n      if (index === 0) {\n        if (!currentVM.skip) {\n          ctx.moveTo(currentVM.x, currentVM.y);\n          lastDrawnIndex = index;\n        }\n      } else {\n        previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n        if (!currentVM.skip) {\n          if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n            // There was a gap and this is the first point after the gap\n            ctx.moveTo(currentVM.x, currentVM.y);\n          } else {\n            // Line to next point\n            helpers.canvas.lineTo(ctx, previous._view, current._view);\n          }\n\n          lastDrawnIndex = index;\n        }\n      }\n    }\n\n    ctx.stroke();\n    ctx.restore();\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar defaultColor = defaults.global.defaultColor;\n\ndefaults._set('global', {\n  elements: {\n    point: {\n      radius: 3,\n      pointStyle: 'circle',\n      backgroundColor: defaultColor,\n      borderColor: defaultColor,\n      borderWidth: 1,\n      // Hover\n      hitRadius: 1,\n      hoverRadius: 4,\n      hoverBorderWidth: 1\n    }\n  }\n});\n\nfunction xRange(mouseX) {\n  var vm = this._view;\n  return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n}\n\nfunction yRange(mouseY) {\n  var vm = this._view;\n  return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n}\n\nmodule.exports = Element.extend({\n  inRange: function inRange(mouseX, mouseY) {\n    var vm = this._view;\n    return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n  },\n  inLabelRange: xRange,\n  inXRange: xRange,\n  inYRange: yRange,\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y\n    };\n  },\n  getArea: function getArea() {\n    return Math.PI * Math.pow(this._view.radius, 2);\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y,\n      padding: vm.radius + vm.borderWidth\n    };\n  },\n  draw: function draw(chartArea) {\n    var vm = this._view;\n    var model = this._model;\n    var ctx = this._chart.ctx;\n    var pointStyle = vm.pointStyle;\n    var rotation = vm.rotation;\n    var radius = vm.radius;\n    var x = vm.x;\n    var y = vm.y;\n    var errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\n    if (vm.skip) {\n      return;\n    } // Clipping for Points.\n\n\n    if (chartArea === undefined || model.x >= chartArea.left && chartArea.right * errMargin >= model.x && model.y >= chartArea.top && chartArea.bottom * errMargin >= model.y) {\n      ctx.strokeStyle = vm.borderColor || defaultColor;\n      ctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\n      ctx.fillStyle = vm.backgroundColor || defaultColor;\n      helpers.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n    }\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\ndefaults._set('global', {\n  elements: {\n    rectangle: {\n      backgroundColor: defaults.global.defaultColor,\n      borderColor: defaults.global.defaultColor,\n      borderSkipped: 'bottom',\n      borderWidth: 0\n    }\n  }\n});\n\nfunction isVertical(bar) {\n  return bar._view.width !== undefined;\n}\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\n\n\nfunction getBarBounds(bar) {\n  var vm = bar._view;\n  var x1, x2, y1, y2;\n\n  if (isVertical(bar)) {\n    // vertical\n    var halfWidth = vm.width / 2;\n    x1 = vm.x - halfWidth;\n    x2 = vm.x + halfWidth;\n    y1 = Math.min(vm.y, vm.base);\n    y2 = Math.max(vm.y, vm.base);\n  } else {\n    // horizontal bar\n    var halfHeight = vm.height / 2;\n    x1 = Math.min(vm.x, vm.base);\n    x2 = Math.max(vm.x, vm.base);\n    y1 = vm.y - halfHeight;\n    y2 = vm.y + halfHeight;\n  }\n\n  return {\n    left: x1,\n    top: y1,\n    right: x2,\n    bottom: y2\n  };\n}\n\nmodule.exports = Element.extend({\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var left, right, top, bottom, signX, signY, borderSkipped;\n    var borderWidth = vm.borderWidth;\n\n    if (!vm.horizontal) {\n      // bar\n      left = vm.x - vm.width / 2;\n      right = vm.x + vm.width / 2;\n      top = vm.y;\n      bottom = vm.base;\n      signX = 1;\n      signY = bottom > top ? 1 : -1;\n      borderSkipped = vm.borderSkipped || 'bottom';\n    } else {\n      // horizontal bar\n      left = vm.base;\n      right = vm.x;\n      top = vm.y - vm.height / 2;\n      bottom = vm.y + vm.height / 2;\n      signX = right > left ? 1 : -1;\n      signY = 1;\n      borderSkipped = vm.borderSkipped || 'left';\n    } // Canvas doesn't allow us to stroke inside the width so we can\n    // adjust the sizes to fit if we're setting a stroke on the line\n\n\n    if (borderWidth) {\n      // borderWidth shold be less than bar width and bar height.\n      var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n      borderWidth = borderWidth > barSize ? barSize : borderWidth;\n      var halfStroke = borderWidth / 2; // Adjust borderWidth when bar top position is near vm.base(zero).\n\n      var borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n      var borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n      var borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n      var borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0); // not become a vertical line?\n\n      if (borderLeft !== borderRight) {\n        top = borderTop;\n        bottom = borderBottom;\n      } // not become a horizontal line?\n\n\n      if (borderTop !== borderBottom) {\n        left = borderLeft;\n        right = borderRight;\n      }\n    }\n\n    ctx.beginPath();\n    ctx.fillStyle = vm.backgroundColor;\n    ctx.strokeStyle = vm.borderColor;\n    ctx.lineWidth = borderWidth; // Corner points, from bottom-left to bottom-right clockwise\n    // | 1 2 |\n    // | 0 3 |\n\n    var corners = [[left, bottom], [left, top], [right, top], [right, bottom]]; // Find first (starting) corner with fallback to 'bottom'\n\n    var borders = ['bottom', 'left', 'top', 'right'];\n    var startCorner = borders.indexOf(borderSkipped, 0);\n\n    if (startCorner === -1) {\n      startCorner = 0;\n    }\n\n    function cornerAt(index) {\n      return corners[(startCorner + index) % 4];\n    } // Draw rectangle from 'startCorner'\n\n\n    var corner = cornerAt(0);\n    ctx.moveTo(corner[0], corner[1]);\n\n    for (var i = 1; i < 4; i++) {\n      corner = cornerAt(i);\n      ctx.lineTo(corner[0], corner[1]);\n    }\n\n    ctx.fill();\n\n    if (borderWidth) {\n      ctx.stroke();\n    }\n  },\n  height: function height() {\n    var vm = this._view;\n    return vm.base - vm.y;\n  },\n  inRange: function inRange(mouseX, mouseY) {\n    var inRange = false;\n\n    if (this._view) {\n      var bounds = getBarBounds(this);\n      inRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n    }\n\n    return inRange;\n  },\n  inLabelRange: function inLabelRange(mouseX, mouseY) {\n    var me = this;\n\n    if (!me._view) {\n      return false;\n    }\n\n    var inRange = false;\n    var bounds = getBarBounds(me);\n\n    if (isVertical(me)) {\n      inRange = mouseX >= bounds.left && mouseX <= bounds.right;\n    } else {\n      inRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n    }\n\n    return inRange;\n  },\n  inXRange: function inXRange(mouseX) {\n    var bounds = getBarBounds(this);\n    return mouseX >= bounds.left && mouseX <= bounds.right;\n  },\n  inYRange: function inYRange(mouseY) {\n    var bounds = getBarBounds(this);\n    return mouseY >= bounds.top && mouseY <= bounds.bottom;\n  },\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    var x, y;\n\n    if (isVertical(this)) {\n      x = vm.x;\n      y = (vm.y + vm.base) / 2;\n    } else {\n      x = (vm.x + vm.base) / 2;\n      y = vm.y;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  },\n  getArea: function getArea() {\n    var vm = this._view;\n    return vm.width * Math.abs(vm.y - vm.base);\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y\n    };\n  }\n});","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\nmodule.exports = {\n  acquireContext: function acquireContext(item) {\n    if (item && item.canvas) {\n      // Support for any object associated to a canvas (including a context2d)\n      item = item.canvas;\n    }\n\n    return item && item.getContext('2d') || null;\n  }\n};","/**\n * Chart.Platform implementation for targeting a web browser\n */\n'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\n\nvar EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {Number} Size in pixels or undefined if unknown.\n */\n\nfunction readUsedSize(element, property) {\n  var value = helpers.getStyle(element, property);\n  var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? Number(matches[1]) : undefined;\n}\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\n\n\nfunction initCanvas(canvas, config) {\n  var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n\n  var renderHeight = canvas.getAttribute('height');\n  var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  }; // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n\n  style.display = style.display || 'block';\n\n  if (renderWidth === null || renderWidth === '') {\n    var displayWidth = readUsedSize(canvas, 'width');\n\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (renderHeight === null || renderHeight === '') {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (config.options.aspectRatio || 2);\n    } else {\n      var displayHeight = readUsedSize(canvas, 'height');\n\n      if (displayWidth !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\n\n\nvar supportsEventListenerOptions = function () {\n  var supports = false;\n\n  try {\n    var options = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        supports = true;\n      }\n    });\n    window.addEventListener('e', null, options);\n  } catch (e) {// continue regardless of error\n  }\n\n  return supports;\n}(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\n\n\nvar eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\n\nfunction _addEventListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction _removeEventListener(node, type, listener) {\n  node.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n  return {\n    type: type,\n    chart: chart,\n    native: nativeEvent || null,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\n\nfunction fromNativeEvent(event, chart) {\n  var type = EVENT_TYPES[event.type] || event.type;\n  var pos = helpers.getRelativePosition(event, chart);\n  return createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n  var ticking = false;\n  var args = [];\n  return function () {\n    args = Array.prototype.slice.call(arguments);\n    thisArg = thisArg || this;\n\n    if (!ticking) {\n      ticking = true;\n      helpers.requestAnimFrame.call(window, function () {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n} // Implementation based on https://github.com/marcj/css-element-queries\n\n\nfunction createResizer(handler) {\n  var resizer = document.createElement('div');\n  var cls = CSS_PREFIX + 'size-monitor';\n  var maxSize = 1000000;\n  var style = 'position:absolute;' + 'left:0;' + 'top:0;' + 'right:0;' + 'bottom:0;' + 'overflow:hidden;' + 'pointer-events:none;' + 'visibility:hidden;' + 'z-index:-1;';\n  resizer.style.cssText = style;\n  resizer.className = cls;\n  resizer.innerHTML = '<div class=\"' + cls + '-expand\" style=\"' + style + '\">' + '<div style=\"' + 'position:absolute;' + 'width:' + maxSize + 'px;' + 'height:' + maxSize + 'px;' + 'left:0;' + 'top:0\">' + '</div>' + '</div>' + '<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' + '<div style=\"' + 'position:absolute;' + 'width:200%;' + 'height:200%;' + 'left:0; ' + 'top:0\">' + '</div>' + '</div>';\n  var expand = resizer.childNodes[0];\n  var shrink = resizer.childNodes[1];\n\n  resizer._reset = function () {\n    expand.scrollLeft = maxSize;\n    expand.scrollTop = maxSize;\n    shrink.scrollLeft = maxSize;\n    shrink.scrollTop = maxSize;\n  };\n\n  var onScroll = function onScroll() {\n    resizer._reset();\n\n    handler();\n  };\n\n  _addEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\n  _addEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n  return resizer;\n} // https://davidwalsh.name/detect-node-insertion\n\n\nfunction watchForRender(node, handler) {\n  var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n  var proxy = expando.renderProxy = function (e) {\n    if (e.animationName === CSS_RENDER_ANIMATION) {\n      handler();\n    }\n  };\n\n  helpers.each(ANIMATION_START_EVENTS, function (type) {\n    _addEventListener(node, type, proxy);\n  }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n  // is removed then added back immediately (same animation frame?). Accessing the\n  // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n  // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n  // https://github.com/chartjs/Chart.js/issues/4737\n\n  expando.reflow = !!node.offsetParent;\n  node.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n  var expando = node[EXPANDO_KEY] || {};\n  var proxy = expando.renderProxy;\n\n  if (proxy) {\n    helpers.each(ANIMATION_START_EVENTS, function (type) {\n      _removeEventListener(node, type, proxy);\n    });\n    delete expando.renderProxy;\n  }\n\n  node.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n  var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n  var resizer = expando.resizer = createResizer(throttled(function () {\n    if (expando.resizer) {\n      return listener(createEvent('resize', chart));\n    }\n  })); // The resizer needs to be attached to the node parent, so we first need to be\n  // sure that `node` is attached to the DOM before injecting the resizer element.\n\n  watchForRender(node, function () {\n    if (expando.resizer) {\n      var container = node.parentNode;\n\n      if (container && container !== resizer.parentNode) {\n        container.insertBefore(resizer, container.firstChild);\n      } // The container size might have changed, let's reset the resizer state.\n\n\n      resizer._reset();\n    }\n  });\n}\n\nfunction removeResizeListener(node) {\n  var expando = node[EXPANDO_KEY] || {};\n  var resizer = expando.resizer;\n  delete expando.resizer;\n  unwatchForRender(node);\n\n  if (resizer && resizer.parentNode) {\n    resizer.parentNode.removeChild(resizer);\n  }\n}\n\nfunction injectCSS(platform, css) {\n  // http://stackoverflow.com/q/3922139\n  var style = platform._style || document.createElement('style');\n\n  if (!platform._style) {\n    platform._style = style;\n    css = '/* Chart.js */\\n' + css;\n    style.setAttribute('type', 'text/css');\n    document.getElementsByTagName('head')[0].appendChild(style);\n  }\n\n  style.appendChild(document.createTextNode(css));\n}\n\nmodule.exports = {\n  /**\n   * This property holds whether this platform is enabled for the current environment.\n   * Currently used by platform.js to select the proper implementation.\n   * @private\n   */\n  _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n  initialize: function initialize() {\n    var keyframes = 'from{opacity:0.99}to{opacity:1}';\n    injectCSS(this, // DOM rendering detection\n    // https://davidwalsh.name/detect-node-insertion\n    '@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' + '@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' + '.' + CSS_RENDER_MONITOR + '{' + '-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' + 'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' + '}');\n  },\n  acquireContext: function acquireContext(item, config) {\n    if (typeof item === 'string') {\n      item = document.getElementById(item);\n    } else if (item.length) {\n      // Support for array based queries (such as jQuery)\n      item = item[0];\n    }\n\n    if (item && item.canvas) {\n      // Support for any object associated to a canvas (including a context2d)\n      item = item.canvas;\n    } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n\n\n    var context = item && item.getContext && item.getContext('2d'); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the item has a context2D which has item as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n\n    if (context && context.canvas === item) {\n      initCanvas(item, config);\n      return context;\n    }\n\n    return null;\n  },\n  releaseContext: function releaseContext(context) {\n    var canvas = context.canvas;\n\n    if (!canvas[EXPANDO_KEY]) {\n      return;\n    }\n\n    var initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach(function (prop) {\n      var value = initial[prop];\n\n      if (helpers.isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    helpers.each(initial.style || {}, function (value, key) {\n      canvas.style[key] = value;\n    }); // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n  },\n  addEventListener: function addEventListener(chart, type, listener) {\n    var canvas = chart.canvas;\n\n    if (type === 'resize') {\n      // Note: the resize event is not supported on all browsers.\n      addResizeListener(canvas, listener, chart);\n      return;\n    }\n\n    var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n    var proxies = expando.proxies || (expando.proxies = {});\n\n    var proxy = proxies[chart.id + '_' + type] = function (event) {\n      listener(fromNativeEvent(event, chart));\n    };\n\n    _addEventListener(canvas, type, proxy);\n  },\n  removeEventListener: function removeEventListener(chart, type, listener) {\n    var canvas = chart.canvas;\n\n    if (type === 'resize') {\n      // Note: the resize event is not supported on all browsers.\n      removeResizeListener(canvas, listener);\n      return;\n    }\n\n    var expando = listener[EXPANDO_KEY] || {};\n    var proxies = expando.proxies || {};\n    var proxy = proxies[chart.id + '_' + type];\n\n    if (!proxy) {\n      return;\n    }\n\n    _removeEventListener(canvas, type, proxy);\n  }\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.addEvent = _addEventListener;\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.removeEvent = _removeEventListener;","'use strict';\n\nvar Animation = require('./core.animation');\n\nvar animations = require('./core.animations');\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar Interaction = require('./core.interaction');\n\nvar layouts = require('./core.layouts');\n\nvar platform = require('../platforms/platform');\n\nvar plugins = require('./core.plugins');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Tooltip = require('./core.tooltip');\n\nmodule.exports = function (Chart) {\n  // Create a dictionary of chart types, to allow for extension of existing types\n  Chart.types = {}; // Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n  // Destroy method on the chart will remove the instance of the chart from this reference.\n\n  Chart.instances = {}; // Controllers available for dataset visualization eg. bar, line, slice, etc.\n\n  Chart.controllers = {};\n  /**\n   * Initializes the given config with global and chart default values.\n   */\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use configMerge() for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = helpers.configMerge(defaults.global, defaults[config.type], config.options || {});\n    return config;\n  }\n  /**\n   * Updates the config of the chart\n   * @param chart {Chart} chart to update the options for\n   */\n\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers.each(chart.scales, function (scale) {\n      layouts.removeBox(chart, scale);\n    });\n    newOptions = helpers.configMerge(Chart.defaults.global, Chart.defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  helpers.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      plugins.notify(me, 'beforeInit');\n      helpers.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (me.options.onResize) {\n          me.options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: me.options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var types = [];\n      var newControllers = [];\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n        types.push(meta.type);\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = Chart.controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      plugins._invalidate(me);\n\n      if (plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      plugins.notify(me, 'afterScaleUpdate');\n      plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var duration = config.duration;\n      var lazy = config.lazy;\n\n      if (plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var animationOptions = me.options.animation;\n\n      var onComplete = function onComplete(animation) {\n        plugins.notify(me, 'afterRender');\n        helpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && (typeof duration !== 'undefined' && duration !== 0 || typeof duration === 'undefined' && animationOptions.duration !== 0)) {\n        var animation = new Animation({\n          numSteps: (duration || animationOptions.duration) / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new Animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n\n      if (me.scale) {\n        me.scale.draw();\n      }\n\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n    // Get the single element that was clicked on\n    // @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n    getElementAtEvent: function getElementAtEvent(e) {\n      return Interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return Interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return Interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = Interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return Interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new Tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {Boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = function (Chart) {\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  Chart.DatasetController = function (chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers.extend(Chart.DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        listenArrayEvents(data, me);\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var getHoverColor = helpers.getHoverColor;\n      var model = element._model;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      this.insertElements(this.getDataset().data.length - 1, arguments.length);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  Chart.DatasetController.extend = helpers.inherits;\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar Scale = require('../core/core.scale');\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\n\n\nfunction generateTicks(generationOptions, dataRange) {\n  var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  var factor;\n  var precision;\n  var spacing;\n\n  if (generationOptions.stepSize && generationOptions.stepSize > 0) {\n    spacing = generationOptions.stepSize;\n  } else {\n    var niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n    spacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n    precision = generationOptions.precision;\n\n    if (precision !== undefined) {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n  }\n\n  var niceMin = Math.floor(dataRange.min / spacing) * spacing;\n  var niceMax = Math.ceil(dataRange.max / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n  if (!helpers.isNullOrUndef(generationOptions.min) && !helpers.isNullOrUndef(generationOptions.max) && generationOptions.stepSize) {\n    // If very close to our whole number, use it.\n    if (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n      niceMin = generationOptions.min;\n      niceMax = generationOptions.max;\n    }\n  }\n\n  var numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n  if (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n    numSpaces = Math.round(numSpaces);\n  } else {\n    numSpaces = Math.ceil(numSpaces);\n  }\n\n  precision = 1;\n\n  if (spacing < 1) {\n    precision = Math.pow(10, 1 - Math.floor(helpers.log10(spacing)));\n    niceMin = Math.round(niceMin * precision) / precision;\n    niceMax = Math.round(niceMax * precision) / precision;\n  }\n\n  ticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\n  for (var j = 1; j < numSpaces; ++j) {\n    ticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\n  }\n\n  ticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n  return ticks;\n}\n\nmodule.exports = function (Chart) {\n  var noop = helpers.noop;\n  Chart.LinearScaleBase = Scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return Scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers.sign(me.min);\n        var maxSign = helpers.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: noop,\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers.max(ticks);\n      me.min = helpers.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      Scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n};","'use strict';\n\nvar Scale = require('../core/core.scale');\n\nvar scaleService = require('../core/core.scaleService');\n\nmodule.exports = function () {\n  // Default config for a category scale\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var DatasetScale = Scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var data = me.chart.data;\n      var isHorizontal = me.isHorizontal();\n\n      if (data.yLabels && !isHorizontal) {\n        return me.getRightValue(data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + Math.round(widthOffset);\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + Math.round(heightOffset);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  });\n  scaleService.registerScaleType('category', DatasetScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function (Chart) {\n  var defaultConfig = {\n    position: 'left',\n    ticks: {\n      callback: Ticks.formatters.linear\n    }\n  };\n  var LinearScale = Chart.LinearScaleBase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers.min(values);\n          var maxVal = helpers.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    getTickLimit: function getTickLimit() {\n      var maxTicks;\n      var me = this;\n      var tickOpts = me.options.ticks;\n\n      if (me.isHorizontal()) {\n        maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n      } else {\n        // The factor of 2 used to scale the font size has been experimentally determined.\n        var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n        maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n      }\n\n      return maxTicks;\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  });\n  scaleService.registerScaleType('linear', LinearScale, defaultConfig);\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar Scale = require('../core/core.scale');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Ticks = require('../core/core.ticks');\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\n\n\nfunction generateTicks(generationOptions, dataRange) {\n  var ticks = [];\n  var valueOrDefault = helpers.valueOrDefault; // Figure out what the max number of ticks we can support it is based on the size of\n  // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n  // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n  // the graph\n\n  var tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n  var endExp = Math.floor(helpers.log10(dataRange.max));\n  var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  var exp, significand;\n\n  if (tickVal === 0) {\n    exp = Math.floor(helpers.log10(dataRange.minNotZero));\n    significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n    ticks.push(tickVal);\n    tickVal = significand * Math.pow(10, exp);\n  } else {\n    exp = Math.floor(helpers.log10(tickVal));\n    significand = Math.floor(tickVal / Math.pow(10, exp));\n  }\n\n  var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n  do {\n    ticks.push(tickVal);\n    ++significand;\n\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n  var lastTick = valueOrDefault(generationOptions.max, tickVal);\n  ticks.push(lastTick);\n  return ticks;\n}\n\nmodule.exports = function (Chart) {\n  var defaultConfig = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: Ticks.formatters.logarithmic\n    }\n  };\n  var LogarithmicScale = Scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers.min(valuesForType);\n            var maxVal = helpers.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var valueOrDefault = helpers.valueOrDefault;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = valueOrDefault(tickOpts.min, me.min);\n      me.max = valueOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: tickOpts.min,\n        max: tickOpts.max\n      };\n      var ticks = me.ticks = generateTicks(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers.max(ticks);\n      me.min = helpers.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      Scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {Number} value - The minimum not zero value.\n     * @return {Number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var reverse = me.options.ticks.reverse;\n      var log10 = helpers.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var reverse = me.options.ticks.reverse;\n      var log10 = helpers.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  });\n  scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function (Chart) {\n  var globalDefaults = defaults.global;\n  var defaultConfig = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: Ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getPointLabelFontOptions(scale) {\n    var pointLabelOptions = scale.options.pointLabels;\n    var fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n    var fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n    var fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n    var font = helpers.fontString(fontSize, fontStyle, fontFamily);\n    return {\n      size: fontSize,\n      style: fontStyle,\n      family: fontFamily,\n      font: font\n    };\n  }\n\n  function measureLabelSize(ctx, fontSize, label) {\n    if (helpers.isArray(label)) {\n      return {\n        w: helpers.longestText(ctx, ctx.font, label),\n        h: label.length * fontSize + (label.length - 1) * 1.5 * fontSize\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: fontSize\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size - 5,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size + 5\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    /*\n     * Right, this is really confusing and there is a lot of maths going on here\n     * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n     *\n     * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n     *\n     * Solution:\n     *\n     * We assume the radius of the polygon is half the size of the canvas at first\n     * at each index we check if the text overlaps.\n     *\n     * Where it does, we store that angle and that index.\n     *\n     * After finding the largest index and angle we calculate how much we need to remove\n     * from the shape radius to move the point inwards by that x.\n     *\n     * We average the left and right distances to get the maximum shape radius that can fit in the box\n     * along with labels.\n     *\n     * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n     * on each side, removing that from the size, halving it and adding the left x protrusion width.\n     *\n     * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n     * and position it in the most space efficient manner\n     *\n     * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n     */\n    var plFont = getPointLabelFontOptions(scale); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n    var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n    var furthestLimits = {\n      r: scale.width,\n      l: 0,\n      t: scale.height,\n      b: 0\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.font;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, largestPossibleRadius);\n      textSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n  }\n  /**\n   * Helper function to fit a radial linear scale with no point labels\n   */\n\n\n  function _fit(scale) {\n    var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n    scale.drawingArea = Math.round(largestPossibleRadius);\n    scale.setCenterPoint(0, 0, 0, 0);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, fontSize) {\n    if (helpers.isArray(text)) {\n      var y = position.y;\n      var spacing = 1.5 * fontSize;\n\n      for (var i = 0; i < text.length; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += spacing;\n      }\n    } else {\n      ctx.fillText(text, position.x, position.y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var pointLabelOpts = opts.pointLabels;\n    ctx.lineWidth = angleLineOpts.lineWidth;\n    ctx.strokeStyle = angleLineOpts.color;\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = getPointLabelFontOptions(scale);\n    ctx.textBaseline = 'top';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n        ctx.closePath();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra 3px out for some label spacing\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);\n        ctx.font = plFont.font;\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n      }\n    }\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    ctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);\n    ctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n    if (scale.options.gridLines.circular) {\n      // Draw circular arcs between the points\n      ctx.beginPath();\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n      ctx.closePath();\n      ctx.stroke();\n    } else {\n      // Draw straight lines connecting each index\n      var valueCount = getValueCount(scale);\n\n      if (valueCount === 0) {\n        return;\n      }\n\n      ctx.beginPath();\n      var pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n\n      ctx.closePath();\n      ctx.stroke();\n    }\n  }\n\n  function numberOrZero(param) {\n    return helpers.isNumber(param) ? param : 0;\n  }\n\n  var LinearRadialScale = Chart.LinearScaleBase.extend({\n    setDimensions: function setDimensions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.xCenter = Math.round(me.width / 2);\n      me.yCenter = Math.round(me.height / 2);\n      var minSize = helpers.min([me.height, me.width]);\n      var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n      me.drawingArea = opts.display ? minSize / 2 - (tickFontSize / 2 + tickOpts.backdropPaddingY) : minSize / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    getTickLimit: function getTickLimit() {\n      var tickOpts = this.options.ticks;\n      var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n      return Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      Chart.LinearScaleBase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      if (this.options.pointLabels.display) {\n        fitWithPointLabels(this);\n      } else {\n        _fit(this);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - bottomMovement - me.drawingArea;\n      me.xCenter = Math.round((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.round((maxTop + maxBottom) / 2 + me.top);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n        y: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n      var valueOrDefault = helpers.valueOrDefault;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0); // Tick Font\n\n        var tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n        var tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n        var tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n        var tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n        helpers.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n              ctx.font = tickLabelFont;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFontSize + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n      }\n    }\n  });\n  scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n};","/* global window: false */\n'use strict';\n\nvar moment = require('moment');\n\nmoment = typeof moment === 'function' ? moment : window.moment;\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar Scale = require('../core/core.scale');\n\nvar scaleService = require('../core/core.scaleService'); // Integer constants are from the ES6 spec.\n\n\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\nvar INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: [1, 2, 5, 10, 15, 30]\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: [1, 2, 5, 10, 15, 30]\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: [1, 2, 3, 6, 12]\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: [1, 2, 5]\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: [1, 2, 3, 4]\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: [1, 2, 3]\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: [1, 2, 3, 4]\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n  return a - b;\n}\n\nfunction arrayUnique(items) {\n  var hash = {};\n  var out = [];\n  var i, ilen, item;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    item = items[i];\n\n    if (!hash[item]) {\n      hash[item] = true;\n      out.push(item);\n    }\n  }\n\n  return out;\n}\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {Number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\n\n\nfunction buildLookupTable(timestamps, min, max, distribution) {\n  if (distribution === 'linear' || !timestamps.length) {\n    return [{\n      time: min,\n      pos: 0\n    }, {\n      time: max,\n      pos: 1\n    }];\n  }\n\n  var table = [];\n  var items = [min];\n  var i, ilen, prev, curr, next;\n\n  for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n    curr = timestamps[i];\n\n    if (curr > min && curr < max) {\n      items.push(curr);\n    }\n  }\n\n  items.push(max);\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    next = items[i + 1];\n    prev = items[i - 1];\n    curr = items[i]; // only add points that breaks the scale linearity\n\n    if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n      table.push({\n        time: curr,\n        pos: i / (ilen - 1)\n      });\n    }\n  }\n\n  return table;\n} // @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\nfunction lookup(table, key, value) {\n  var lo = 0;\n  var hi = table.length - 1;\n  var mid, i0, i1;\n\n  while (lo >= 0 && lo <= hi) {\n    mid = lo + hi >> 1;\n    i0 = table[mid - 1] || null;\n    i1 = table[mid];\n\n    if (!i0) {\n      // given value is outside table (before first item)\n      return {\n        lo: null,\n        hi: i1\n      };\n    } else if (i1[key] < value) {\n      lo = mid + 1;\n    } else if (i0[key] > value) {\n      hi = mid - 1;\n    } else {\n      return {\n        lo: i0,\n        hi: i1\n      };\n    }\n  } // given value is outside table (after last item)\n\n\n  return {\n    lo: i1,\n    hi: null\n  };\n}\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\n\n\nfunction interpolate(table, skey, sval, tkey) {\n  var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n  var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n  var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n  var span = next[skey] - prev[skey];\n  var ratio = span ? (sval - prev[skey]) / span : 0;\n  var offset = (next[tkey] - prev[tkey]) * ratio;\n  return prev[tkey] + offset;\n}\n/**\n * Convert the given value to a moment object using the given time options.\n * @see http://momentjs.com/docs/#/parsing/\n */\n\n\nfunction momentify(value, options) {\n  var parser = options.parser;\n  var format = options.parser || options.format;\n\n  if (typeof parser === 'function') {\n    return parser(value);\n  }\n\n  if (typeof value === 'string' && typeof format === 'string') {\n    return moment(value, format);\n  }\n\n  if (!(value instanceof moment)) {\n    value = moment(value);\n  }\n\n  if (value.isValid()) {\n    return value;\n  } // Labels are in an incompatible moment format and no `parser` has been provided.\n  // The user might still use the deprecated `format` option to convert his inputs.\n\n\n  if (typeof format === 'function') {\n    return format(value);\n  }\n\n  return value;\n}\n\nfunction parse(input, scale) {\n  if (helpers.isNullOrUndef(input)) {\n    return null;\n  }\n\n  var options = scale.options.time;\n  var value = momentify(scale.getRightValue(input), options);\n\n  if (!value.isValid()) {\n    return null;\n  }\n\n  if (options.round) {\n    value.startOf(options.round);\n  }\n\n  return value.valueOf();\n}\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\n\n\nfunction determineStepSize(min, max, unit, capacity) {\n  var range = max - min;\n  var interval = INTERVALS[unit];\n  var milliseconds = interval.size;\n  var steps = interval.steps;\n  var i, ilen, factor;\n\n  if (!steps) {\n    return Math.ceil(range / (capacity * milliseconds));\n  }\n\n  for (i = 0, ilen = steps.length; i < ilen; ++i) {\n    factor = steps[i];\n\n    if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n      break;\n    }\n  }\n\n  return factor;\n}\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\n\n\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  var ilen = UNITS.length;\n  var i, interval, factor;\n\n  for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    interval = INTERVALS[UNITS[i]];\n    factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n/**\n * Figures out what unit to format a set of ticks with\n */\n\n\nfunction determineUnitForFormatting(ticks, minUnit, min, max) {\n  var duration = moment.duration(moment(max).diff(moment(min)));\n  var ilen = UNITS.length;\n  var i, unit;\n\n  for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n    unit = UNITS[i];\n\n    if (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n  for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\n\n\nfunction generate(min, max, capacity, options) {\n  var timeOpts = options.time;\n  var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n  var major = determineMajorUnit(minor);\n  var stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);\n  var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n  var majorTicksEnabled = options.ticks.major.enabled;\n  var interval = INTERVALS[minor];\n  var first = moment(min);\n  var last = moment(max);\n  var ticks = [];\n  var time;\n\n  if (!stepSize) {\n    stepSize = determineStepSize(min, max, minor, capacity);\n  } // For 'week' unit, handle the first day of week option\n\n\n  if (weekday) {\n    first = first.isoWeekday(weekday);\n    last = last.isoWeekday(weekday);\n  } // Align first/last ticks on unit\n\n\n  first = first.startOf(weekday ? 'day' : minor);\n  last = last.startOf(weekday ? 'day' : minor); // Make sure that the last tick include max\n\n  if (last < max) {\n    last.add(1, minor);\n  }\n\n  time = moment(first);\n\n  if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n    // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n    // we first aligned time on the previous `major` unit then add the number of full\n    // stepSize there is between first and the previous major time.\n    time.startOf(major);\n    time.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n  }\n\n  for (; time < last; time.add(stepSize, minor)) {\n    ticks.push(+time);\n  }\n\n  ticks.push(+time);\n  return ticks;\n}\n/**\n * Returns the right and left offsets from edges in the form of {left, right}.\n * Offsets are added when the `offset` option is true.\n */\n\n\nfunction computeOffsets(table, ticks, min, max, options) {\n  var left = 0;\n  var right = 0;\n  var upper, lower;\n\n  if (options.offset && ticks.length) {\n    if (!options.time.min) {\n      upper = ticks.length > 1 ? ticks[1] : max;\n      lower = ticks[0];\n      left = (interpolate(table, 'time', upper, 'pos') - interpolate(table, 'time', lower, 'pos')) / 2;\n    }\n\n    if (!options.time.max) {\n      upper = ticks[ticks.length - 1];\n      lower = ticks.length > 1 ? ticks[ticks.length - 2] : min;\n      right = (interpolate(table, 'time', upper, 'pos') - interpolate(table, 'time', lower, 'pos')) / 2;\n    }\n  }\n\n  return {\n    left: left,\n    right: right\n  };\n}\n\nfunction ticksFromTimestamps(values, majorUnit) {\n  var ticks = [];\n  var i, ilen, value, major;\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    value = values[i];\n    major = majorUnit ? value === +moment(value).startOf(majorUnit) : false;\n    ticks.push({\n      value: value,\n      major: major\n    });\n  }\n\n  return ticks;\n}\n\nfunction determineLabelFormat(data, timeOpts) {\n  var i, momentDate, hasTime;\n  var ilen = data.length; // find the label with the most parts (milliseconds, minutes, etc.)\n  // format all labels with the same level of detail as the most specific label\n\n  for (i = 0; i < ilen; i++) {\n    momentDate = momentify(data[i], timeOpts);\n\n    if (momentDate.millisecond() !== 0) {\n      return 'MMM D, YYYY h:mm:ss.SSS a';\n    }\n\n    if (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {\n      hasTime = true;\n    }\n  }\n\n  if (hasTime) {\n    return 'MMM D, YYYY h:mm:ss a';\n  }\n\n  return 'MMM D, YYYY';\n}\n\nmodule.exports = function () {\n  var defaultConfig = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    time: {\n      parser: false,\n      // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      // defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n      displayFormats: {\n        millisecond: 'h:mm:ss.SSS a',\n        // 11:20:01.123 AM,\n        second: 'h:mm:ss a',\n        // 11:20:01 AM\n        minute: 'h:mm a',\n        // 11:20 AM\n        hour: 'hA',\n        // 5PM\n        day: 'MMM D',\n        // Sep 4\n        week: 'll',\n        // Week 46, or maybe \"[W]WW - YYYY\" ?\n        month: 'MMM YYYY',\n        // Sept 2015\n        quarter: '[Q]Q - YYYY',\n        // Q3\n        year: 'YYYY' // 2015\n\n      }\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var TimeScale = Scale.extend({\n    initialize: function initialize() {\n      if (!moment) {\n        throw new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n      }\n\n      this.mergeTicksOptions();\n      Scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options; // DEPRECATIONS: output a message only one time per update\n\n      if (options.time && options.time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      }\n\n      return Scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return Scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp; // Convert labels to timestamps\n\n      for (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {\n        labels.push(parse(chart.data.labels[i], me));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(data[j], me);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            timestamps.push.apply(timestamps, labels);\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(timeOpts.min, me) || min;\n      max = parse(timeOpts.max, me) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +moment().startOf(unit) : min;\n      max = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(timeOpts.min, me) || min;\n      max = parse(timeOpts.max, me) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n      me._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);\n      return ticksFromTimestamps(ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return momentify(label, timeOpts).format(timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return momentify(label, timeOpts).format(me._labelFormat);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(tick, index, ticks, formatOverride) {\n      var me = this;\n      var options = me.options;\n      var time = tick.valueOf();\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = tick.clone().startOf(majorUnit).valueOf();\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = interpolate(me._table, 'time', time, 'pos');\n      return start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(value, me);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;\n      var time = interpolate(me._table, 'pos', pos, 'time');\n      return moment(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this;\n      var formatOverride = me.options.time.displayFormats.millisecond; // Pick the longest format for guestimation\n\n      var exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  });\n  scaleService.registerScaleType('time', TimeScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('bar', {\n  hover: {\n    mode: 'label'\n  },\n  scales: {\n    xAxes: [{\n      type: 'category',\n      // Specific to Bar Controller\n      categoryPercentage: 0.8,\n      barPercentage: 0.9,\n      // offset settings\n      offset: true,\n      // grid line settings\n      gridLines: {\n        offsetGridLines: true\n      }\n    }],\n    yAxes: [{\n      type: 'linear'\n    }]\n  }\n});\n\ndefaults._set('horizontalBar', {\n  hover: {\n    mode: 'index',\n    axis: 'y'\n  },\n  scales: {\n    xAxes: [{\n      type: 'linear',\n      position: 'bottom'\n    }],\n    yAxes: [{\n      position: 'left',\n      type: 'category',\n      // Specific to Horizontal Bar Controller\n      categoryPercentage: 0.8,\n      barPercentage: 0.9,\n      // offset settings\n      offset: true,\n      // grid line settings\n      gridLines: {\n        offsetGridLines: true\n      }\n    }]\n  },\n  elements: {\n    rectangle: {\n      borderSkipped: 'left'\n    }\n  },\n  tooltips: {\n    callbacks: {\n      title: function title(item, data) {\n        // Pick first xLabel for now\n        var title = '';\n\n        if (item.length > 0) {\n          if (item[0].yLabel) {\n            title = item[0].yLabel;\n          } else if (data.labels.length > 0 && item[0].index < data.labels.length) {\n            title = data.labels[item[0].index];\n          }\n        }\n\n        return title;\n      },\n      label: function label(item, data) {\n        var datasetLabel = data.datasets[item.datasetIndex].label || '';\n        return datasetLabel + ': ' + item.xLabel;\n      }\n    },\n    mode: 'index',\n    axis: 'y'\n  }\n});\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\n\n\nfunction computeMinSampleSize(scale, pixels) {\n  var min = scale.isHorizontal() ? scale.width : scale.height;\n  var ticks = scale.getTicks();\n  var prev, curr, i, ilen;\n\n  for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n    min = Math.min(min, pixels[i] - pixels[i - 1]);\n  }\n\n  for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    min = i > 0 ? Math.min(min, curr - prev) : min;\n    prev = curr;\n  }\n\n  return min;\n}\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\n\n\nfunction computeFitCategoryTraits(index, ruler, options) {\n  var thickness = options.barThickness;\n  var count = ruler.stackCount;\n  var curr = ruler.pixels[index];\n  var size, ratio;\n\n  if (helpers.isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * count;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / count,\n    ratio: ratio,\n    start: curr - size / 2\n  };\n}\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\n\n\nfunction computeFlexCategoryTraits(index, ruler, options) {\n  var pixels = ruler.pixels;\n  var curr = pixels[index];\n  var prev = index > 0 ? pixels[index - 1] : null;\n  var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  var percent = options.categoryPercentage;\n  var start, size;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale end extremity.\n    prev = curr - (next === null ? ruler.end - curr : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  start = curr - (curr - prev) / 2 * percent;\n  size = (next - prev) / 2 * percent;\n  return {\n    chunk: size / ruler.stackCount,\n    ratio: options.barPercentage,\n    start: start\n  };\n}\n\nmodule.exports = function (Chart) {\n  Chart.controllers.bar = Chart.DatasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      Chart.DatasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n      var custom = rectangle.custom || {};\n      var rectangleOptions = chart.options.elements.rectangle;\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        datasetLabel: dataset.label,\n        label: chart.data.labels[index],\n        borderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\n        backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\n        borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\n        borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\n      };\n      me.updateElementGeometry(rectangle, index, reset);\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    updateElementGeometry: function updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n      var vscale = me.getValueScale();\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * @private\n     */\n    getValueScaleId: function getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getIndexScaleId: function getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getValueScale: function getValueScale() {\n      return this.getScaleForId(this.getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    getIndexScale: function getIndexScale() {\n      return this.getScaleForId(this.getIndexScaleId());\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {Number} [last] - The dataset index\n     * @returns {Array} The stack list\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n      var scale = me.getIndexScale();\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {Number} [datasetIndex] - The dataset index\n     * @param {String} [name] - The stack name to find\n     * @returns {Number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n      var scale = me.getIndexScale();\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var scale = me.getValueScale();\n      var datasets = chart.data.datasets;\n      var value = scale.getRightValue(datasets[datasetIndex].data[index]);\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller.getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = (head - base) / 2;\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var scale = me.getValueScale();\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers.canvas.unclipArea(chart.ctx);\n    }\n  });\n  Chart.controllers.horizontalBar = Chart.controllers.bar.extend({\n    /**\n     * @private\n     */\n    getValueScaleId: function getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getIndexScaleId: function getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('bubble', {\n  hover: {\n    mode: 'single'\n  },\n  scales: {\n    xAxes: [{\n      type: 'linear',\n      // bubble should probably use a linear scale by default\n      position: 'bottom',\n      id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n    }],\n    yAxes: [{\n      type: 'linear',\n      position: 'left',\n      id: 'y-axis-0'\n    }]\n  },\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        // Title doesn't make sense for scatter since we format the data as a point\n        return '';\n      },\n      label: function label(item, data) {\n        var datasetLabel = data.datasets[item.datasetIndex].label || '';\n        var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n        return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.bubble = Chart.DatasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));\n      model.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));\n      model.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var resolve = helpers.options.resolve;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('doughnut', {\n  animation: {\n    // Boolean - Whether we animate the rotation of the Doughnut\n    animateRotate: true,\n    // Boolean - Whether we animate scaling the Doughnut from the centre\n    animateScale: false\n  },\n  hover: {\n    mode: 'single'\n  },\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n    var data = chart.data;\n    var datasets = data.datasets;\n    var labels = data.labels;\n\n    if (datasets.length) {\n      for (var i = 0; i < datasets[0].data.length; ++i) {\n        text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n        if (labels[i]) {\n          text.push(labels[i]);\n        }\n\n        text.push('</li>');\n      }\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  },\n  legend: {\n    labels: {\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n\n        if (data.labels.length && data.datasets.length) {\n          return data.labels.map(function (label, i) {\n            var meta = chart.getDatasetMeta(0);\n            var ds = data.datasets[0];\n            var arc = meta.data[i];\n            var custom = arc && arc.custom || {};\n            var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n            var arcOpts = chart.options.elements.arc;\n            var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n            var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n            var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n            return {\n              text: label,\n              fillStyle: fill,\n              strokeStyle: stroke,\n              lineWidth: bw,\n              hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n              // Extra data used for toggling the correct item\n              index: i\n            };\n          });\n        }\n\n        return [];\n      }\n    },\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.index;\n      var chart = this.chart;\n      var i, ilen, meta;\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n        if (meta.data[index]) {\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n      }\n\n      chart.update();\n    }\n  },\n  // The percentage of the chart that we cut out of the middle.\n  cutoutPercentage: 50,\n  // The rotation of the chart, where the first data arc begins.\n  rotation: Math.PI * -0.5,\n  // The total circumference of the chart.\n  circumference: Math.PI * 2.0,\n  // Need to override these to give a nice default\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return '';\n      },\n      label: function label(tooltipItem, data) {\n        var dataLabel = data.labels[tooltipItem.index];\n        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n        if (helpers.isArray(dataLabel)) {\n          // show value on first line of multiline label\n          // need to clone because we are changing the value\n          dataLabel = dataLabel.slice();\n          dataLabel[0] += value;\n        } else {\n          dataLabel += value;\n        }\n\n        return dataLabel;\n      }\n    }\n  }\n});\n\ndefaults._set('pie', helpers.clone(defaults.doughnut));\n\ndefaults._set('pie', {\n  cutoutPercentage: 0\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var arcOpts = opts.elements.arc;\n      var availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\n      var availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth(meta.data);\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.getRingIndex(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n      helpers.each(meta.data, function (arc, index) {\n        me.updateElement(arc, index, reset);\n      });\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n      helpers.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Resets the visual styles\n\n      var custom = arc.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var elementOpts = this.chart.options.elements.arc;\n      model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n      model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n      model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth); // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var max = 0;\n      var index = this.index;\n      var length = arcs.length;\n      var borderWidth;\n      var hoverWidth;\n\n      for (var i = 0; i < length; i++) {\n        borderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\n        hoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n        max = borderWidth > max ? borderWidth : max;\n        max = hoverWidth > max ? hoverWidth : max;\n      }\n\n      return max;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('line', {\n  showLines: true,\n  spanGaps: false,\n  hover: {\n    mode: 'label'\n  },\n  scales: {\n    xAxes: [{\n      type: 'category',\n      id: 'x-axis-0'\n    }],\n    yAxes: [{\n      type: 'linear',\n      id: 'y-axis-0'\n    }]\n  }\n});\n\nmodule.exports = function (Chart) {\n  function lineEnabled(dataset, options) {\n    return helpers.valueOrDefault(dataset.showLine, options.showLines);\n  }\n\n  Chart.controllers.line = Chart.DatasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var options = me.chart.options;\n      var lineElementOptions = options.elements.line;\n      var scale = me.getScaleForId(meta.yAxisID);\n      var i, ilen, custom;\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, options); // Update Line\n\n      if (showLine) {\n        custom = line.custom || {}; // Compatibility: If the properties are defined with only the old name, use those values\n\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = {\n          // Appearance\n          // The default behavior of lines is to break at null values, according\n          // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n          // This option gives lines the ability to span gaps\n          spanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : dataset.backgroundColor || lineElementOptions.backgroundColor,\n          borderWidth: custom.borderWidth ? custom.borderWidth : dataset.borderWidth || lineElementOptions.borderWidth,\n          borderColor: custom.borderColor ? custom.borderColor : dataset.borderColor || lineElementOptions.borderColor,\n          borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : dataset.borderCapStyle || lineElementOptions.borderCapStyle,\n          borderDash: custom.borderDash ? custom.borderDash : dataset.borderDash || lineElementOptions.borderDash,\n          borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : dataset.borderDashOffset || lineElementOptions.borderDashOffset,\n          borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : dataset.borderJoinStyle || lineElementOptions.borderJoinStyle,\n          fill: custom.fill ? custom.fill : dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill,\n          steppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n          cubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode)\n        };\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    getPointBackgroundColor: function getPointBackgroundColor(point, index) {\n      var backgroundColor = this.chart.options.elements.point.backgroundColor;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (custom.backgroundColor) {\n        backgroundColor = custom.backgroundColor;\n      } else if (dataset.pointBackgroundColor) {\n        backgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n      } else if (dataset.backgroundColor) {\n        backgroundColor = dataset.backgroundColor;\n      }\n\n      return backgroundColor;\n    },\n    getPointBorderColor: function getPointBorderColor(point, index) {\n      var borderColor = this.chart.options.elements.point.borderColor;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (custom.borderColor) {\n        borderColor = custom.borderColor;\n      } else if (dataset.pointBorderColor) {\n        borderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n      } else if (dataset.borderColor) {\n        borderColor = dataset.borderColor;\n      }\n\n      return borderColor;\n    },\n    getPointBorderWidth: function getPointBorderWidth(point, index) {\n      var borderWidth = this.chart.options.elements.point.borderWidth;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (!isNaN(custom.borderWidth)) {\n        borderWidth = custom.borderWidth;\n      } else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\n        borderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n      } else if (!isNaN(dataset.borderWidth)) {\n        borderWidth = dataset.borderWidth;\n      }\n\n      return borderWidth;\n    },\n    getPointRotation: function getPointRotation(point, index) {\n      var pointRotation = this.chart.options.elements.point.rotation;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (!isNaN(custom.rotation)) {\n        pointRotation = custom.rotation;\n      } else if (!isNaN(dataset.pointRotation) || helpers.isArray(dataset.pointRotation)) {\n        pointRotation = helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointRotation);\n      }\n\n      return pointRotation;\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var pointOptions = me.chart.options.elements.point;\n      var x, y; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.radius !== undefined && dataset.pointRadius === undefined) {\n        dataset.pointRadius = dataset.radius;\n      }\n\n      if (dataset.hitRadius !== undefined && dataset.pointHitRadius === undefined) {\n        dataset.pointHitRadius = dataset.hitRadius;\n      }\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n        pointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n        rotation: me.getPointRotation(point, index),\n        backgroundColor: me.getPointBackgroundColor(point, index),\n        borderColor: me.getPointBorderColor(point, index),\n        borderWidth: me.getPointBorderWidth(point, index),\n        tension: meta.dataset._model ? meta.dataset._model.tension : 0,\n        steppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n        // Tooltip\n        hitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n      };\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, point, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (meta.dataset._model.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n        helpers.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          point = points[i];\n          model = point._model;\n          controlPoints = helpers.splineCurve(helpers.previousItem(points, i)._model, model, helpers.nextItem(points, i)._model, meta.dataset._model.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (me.chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n          model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n          model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n          model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      // Point\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n      model.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('polarArea', {\n  scale: {\n    type: 'radialLinear',\n    angleLines: {\n      display: false\n    },\n    gridLines: {\n      circular: true\n    },\n    pointLabels: {\n      display: false\n    },\n    ticks: {\n      beginAtZero: true\n    }\n  },\n  // Boolean - Whether to animate the rotation of the chart\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  startAngle: -0.5 * Math.PI,\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n    var data = chart.data;\n    var datasets = data.datasets;\n    var labels = data.labels;\n\n    if (datasets.length) {\n      for (var i = 0; i < datasets[0].data.length; ++i) {\n        text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n        if (labels[i]) {\n          text.push(labels[i]);\n        }\n\n        text.push('</li>');\n      }\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  },\n  legend: {\n    labels: {\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n\n        if (data.labels.length && data.datasets.length) {\n          return data.labels.map(function (label, i) {\n            var meta = chart.getDatasetMeta(0);\n            var ds = data.datasets[0];\n            var arc = meta.data[i];\n            var custom = arc.custom || {};\n            var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n            var arcOpts = chart.options.elements.arc;\n            var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n            var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n            var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n            return {\n              text: label,\n              fillStyle: fill,\n              strokeStyle: stroke,\n              lineWidth: bw,\n              hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n              // Extra data used for toggling the correct item\n              index: i\n            };\n          });\n        }\n\n        return [];\n      }\n    },\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.index;\n      var chart = this.chart;\n      var i, ilen, meta;\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n        meta.data[index].hidden = !meta.data[index].hidden;\n      }\n\n      chart.update();\n    }\n  },\n  // Need to override these to give a nice default\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return '';\n      },\n      label: function label(item, data) {\n        return data.labels[item.index] + ': ' + item.yLabel;\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.polarArea = Chart.DatasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      helpers.each(meta.data, function (arc, index) {\n        me.updateElement(arc, index, reset);\n      });\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var arcOpts = opts.elements.arc;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      helpers.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      }); // Apply border and fill style\n\n      var elementOpts = this.chart.options.elements.arc;\n      var custom = arc.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var model = arc._model;\n      model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n      model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n      model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return helpers.options.resolve([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('radar', {\n  scale: {\n    type: 'radialLinear'\n  },\n  elements: {\n    line: {\n      tension: 0 // no bezier in radar\n\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.radar = Chart.DatasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data;\n      var custom = line.custom || {};\n      var dataset = me.getDataset();\n      var lineElementOptions = me.chart.options.elements.line;\n      var scale = me.chart.scale; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      }\n\n      helpers.extend(meta.dataset, {\n        // Utility\n        _datasetIndex: me.index,\n        _scale: scale,\n        // Data\n        _children: points,\n        _loop: true,\n        // Model\n        _model: {\n          // Appearance\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : dataset.backgroundColor || lineElementOptions.backgroundColor,\n          borderWidth: custom.borderWidth ? custom.borderWidth : dataset.borderWidth || lineElementOptions.borderWidth,\n          borderColor: custom.borderColor ? custom.borderColor : dataset.borderColor || lineElementOptions.borderColor,\n          fill: custom.fill ? custom.fill : dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill,\n          borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : dataset.borderCapStyle || lineElementOptions.borderCapStyle,\n          borderDash: custom.borderDash ? custom.borderDash : dataset.borderDash || lineElementOptions.borderDash,\n          borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : dataset.borderDashOffset || lineElementOptions.borderDashOffset,\n          borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : dataset.borderJoinStyle || lineElementOptions.borderJoinStyle\n        }\n      });\n      meta.dataset.pivot(); // Update Points\n\n      helpers.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      }, me); // Update bezier control points\n\n      me.updateBezierControlPoints();\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointElementOptions = me.chart.options.elements.point;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]); // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.radius !== undefined && dataset.pointRadius === undefined) {\n        dataset.pointRadius = dataset.radius;\n      }\n\n      if (dataset.hitRadius !== undefined && dataset.pointHitRadius === undefined) {\n        dataset.pointHitRadius = dataset.hitRadius;\n      }\n\n      helpers.extend(point, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          x: reset ? scale.xCenter : pointPosition.x,\n          // value not used in dataset scale, but we want a consistent API between scales\n          y: reset ? scale.yCenter : pointPosition.y,\n          // Appearance\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n          radius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n          borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n          borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n          pointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n          rotation: custom.rotation ? custom.rotation : helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointElementOptions.rotation),\n          // Tooltip\n          hitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\n        }\n      });\n      point._model.skip = custom.skip ? custom.skip : isNaN(point._model.x) || isNaN(point._model.y);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var chartArea = this.chart.chartArea;\n      var meta = this.getMeta();\n      helpers.each(meta.data, function (point, index) {\n        var model = point._model;\n        var controlPoints = helpers.splineCurve(helpers.previousItem(meta.data, index, true)._model, model, helpers.nextItem(meta.data, index, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n        model.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n        model.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n        model.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top); // Now pivot the point for animation\n\n        point.pivot();\n      });\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      // Point\n      var dataset = this.chart.data.datasets[point._datasetIndex];\n      var custom = point.custom || {};\n      var index = point._index;\n      var model = point._model;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n      model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\ndefaults._set('scatter', {\n  hover: {\n    mode: 'single'\n  },\n  scales: {\n    xAxes: [{\n      id: 'x-axis-1',\n      // need an ID so datasets can reference the scale\n      type: 'linear',\n      // scatter should not use a category axis\n      position: 'bottom'\n    }],\n    yAxes: [{\n      id: 'y-axis-1',\n      type: 'linear',\n      position: 'left'\n    }]\n  },\n  showLines: false,\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return ''; // doesn't make sense for scatter since data are formatted as a point\n      },\n      label: function label(item) {\n        return '(' + item.xLabel + ', ' + item.yLabel + ')';\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  // Scatter charts use line controllers\n  Chart.controllers.scatter = Chart.controllers.line;\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Bar = function (context, config) {\n    config.type = 'bar';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Bubble = function (context, config) {\n    config.type = 'bubble';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Doughnut = function (context, config) {\n    config.type = 'doughnut';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Line = function (context, config) {\n    config.type = 'line';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.PolarArea = function (context, config) {\n    config.type = 'polarArea';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Radar = function (context, config) {\n    config.type = 'radar';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Scatter = function (context, config) {\n    config.type = 'scatter';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = {};\nmodule.exports.filler = require('./plugin.filler');\nmodule.exports.legend = require('./plugin.legend');\nmodule.exports.title = require('./plugin.title');","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  plugins: {\n    filler: {\n      propagate: true\n    }\n  }\n});\n\nvar mappers = {\n  dataset: function dataset(source) {\n    var index = source.fill;\n    var chart = source.chart;\n    var meta = chart.getDatasetMeta(index);\n    var visible = meta && chart.isDatasetVisible(index);\n    var points = visible && meta.dataset._children || [];\n    var length = points.length || 0;\n    return !length ? null : function (point, i) {\n      return i < length && points[i]._view || null;\n    };\n  },\n  boundary: function boundary(source) {\n    var boundary = source.boundary;\n    var x = boundary ? boundary.x : null;\n    var y = boundary ? boundary.y : null;\n    return function (point) {\n      return {\n        x: x === null ? point.x : x,\n        y: y === null ? point.y : y\n      };\n    };\n  }\n}; // @todo if (fill[0] === '#')\n\nfunction decodeFill(el, index, count) {\n  var model = el._model || {};\n  var fill = model.fill;\n  var target;\n\n  if (fill === undefined) {\n    fill = !!model.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n\n  target = parseFloat(fill, 10);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n\n    return target;\n  }\n\n  switch (fill) {\n    // compatibility\n    case 'bottom':\n      return 'start';\n\n    case 'top':\n      return 'end';\n\n    case 'zero':\n      return 'origin';\n    // supported boundaries\n\n    case 'origin':\n    case 'start':\n    case 'end':\n      return fill;\n    // invalid fill values\n\n    default:\n      return false;\n  }\n}\n\nfunction computeBoundary(source) {\n  var model = source.el._model || {};\n  var scale = source.el._scale || {};\n  var fill = source.fill;\n  var target = null;\n  var horizontal;\n\n  if (isFinite(fill)) {\n    return null;\n  } // Backward compatibility: until v3, we still need to support boundary values set on\n  // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n  // controllers might still use it (e.g. the Smith chart).\n\n\n  if (fill === 'start') {\n    target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n  } else if (fill === 'end') {\n    target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n  } else if (model.scaleZero !== undefined) {\n    target = model.scaleZero;\n  } else if (scale.getBasePosition) {\n    target = scale.getBasePosition();\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n\n  if (target !== undefined && target !== null) {\n    if (target.x !== undefined && target.y !== undefined) {\n      return target;\n    }\n\n    if (typeof target === 'number' && isFinite(target)) {\n      horizontal = scale.isHorizontal();\n      return {\n        x: horizontal ? target : null,\n        y: horizontal ? null : target\n      };\n    }\n  }\n\n  return null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n  var source = sources[index];\n  var fill = source.fill;\n  var visited = [index];\n  var target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\nfunction createMapper(source) {\n  var fill = source.fill;\n  var type = 'dataset';\n\n  if (fill === false) {\n    return null;\n  }\n\n  if (!isFinite(fill)) {\n    type = 'boundary';\n  }\n\n  return mappers[type](source);\n}\n\nfunction isDrawable(point) {\n  return point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n  var i;\n\n  if (!len0 || !len1) {\n    return;\n  } // building first area curve (normal)\n\n\n  ctx.moveTo(curve0[0].x, curve0[0].y);\n\n  for (i = 1; i < len0; ++i) {\n    helpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n  } // joining the two area curves\n\n\n  ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n  for (i = len1 - 1; i > 0; --i) {\n    helpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n  }\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n  var count = points.length;\n  var span = view.spanGaps;\n  var curve0 = [];\n  var curve1 = [];\n  var len0 = 0;\n  var len1 = 0;\n  var i, ilen, index, p0, p1, d0, d1;\n  ctx.beginPath();\n\n  for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n    index = i % count;\n    p0 = points[index]._view;\n    p1 = mapper(p0, index, view);\n    d0 = isDrawable(p0);\n    d1 = isDrawable(p1);\n\n    if (d0 && d1) {\n      len0 = curve0.push(p0);\n      len1 = curve1.push(p1);\n    } else if (len0 && len1) {\n      if (!span) {\n        drawArea(ctx, curve0, curve1, len0, len1);\n        len0 = len1 = 0;\n        curve0 = [];\n        curve1 = [];\n      } else {\n        if (d0) {\n          curve0.push(p0);\n        }\n\n        if (d1) {\n          curve1.push(p1);\n        }\n      }\n    }\n  }\n\n  drawArea(ctx, curve0, curve1, len0, len1);\n  ctx.closePath();\n  ctx.fillStyle = color;\n  ctx.fill();\n}\n\nmodule.exports = {\n  id: 'filler',\n  afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n    var count = (chart.data.datasets || []).length;\n    var propagate = options.propagate;\n    var sources = [];\n    var meta, i, el, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      el = meta.dataset;\n      source = null;\n\n      if (el && el._model && el instanceof elements.Line) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          fill: decodeFill(el, i, count),\n          chart: chart,\n          el: el\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n\n      if (!source) {\n        continue;\n      }\n\n      source.fill = resolveTarget(sources, i, propagate);\n      source.boundary = computeBoundary(source);\n      source.mapper = createMapper(source);\n    }\n  },\n  beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n    var meta = args.meta.$filler;\n\n    if (!meta) {\n      return;\n    }\n\n    var ctx = chart.ctx;\n    var el = meta.el;\n    var view = el._view;\n    var points = el._children || [];\n    var mapper = meta.mapper;\n    var color = view.backgroundColor || defaults.global.defaultColor;\n\n    if (mapper && color && points.length) {\n      helpers.canvas.clipArea(ctx, chart.chartArea);\n      doFill(ctx, points, mapper, view, color, el._loop);\n      helpers.canvas.unclipArea(ctx);\n    }\n  }\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n  legend: {\n    display: true,\n    position: 'top',\n    fullWidth: true,\n    reverse: false,\n    weight: 1000,\n    // a callback that will handle\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.datasetIndex;\n      var ci = this.chart;\n      var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n      meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n      ci.update();\n    },\n    onHover: null,\n    labels: {\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n        return helpers.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n          return {\n            text: dataset.label,\n            fillStyle: !helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n            hidden: !chart.isDatasetVisible(i),\n            lineCap: dataset.borderCapStyle,\n            lineDash: dataset.borderDash,\n            lineDashOffset: dataset.borderDashOffset,\n            lineJoin: dataset.borderJoinStyle,\n            lineWidth: dataset.borderWidth,\n            strokeStyle: dataset.borderColor,\n            pointStyle: dataset.pointStyle,\n            // Below is extra data used for toggling the datasets\n            datasetIndex: i\n          };\n        }, this) : [];\n      }\n    }\n  },\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n\n    for (var i = 0; i < chart.data.datasets.length; i++) {\n      text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n      if (chart.data.datasets[i].label) {\n        text.push(chart.data.datasets[i].label);\n      }\n\n      text.push('</li>');\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  }\n});\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param labelopts {Object} the label options on the legend\n * @param fontSize {Number} the label font size\n * @return {Number} width of the color box area\n */\n\n\nfunction getBoxWidth(labelOpts, fontSize) {\n  return labelOpts.usePointStyle ? fontSize * Math.SQRT2 : labelOpts.boxWidth;\n}\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\n\n\nvar Legend = Element.extend({\n  initialize: function initialize(config) {\n    helpers.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n    this.legendHitBoxes = []; // Are we in doughnut mode which has a different data type\n\n    this.doughnutMode = false;\n  },\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all legend types.\n  // Any function can be extended by the legend type\n  beforeUpdate: noop,\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = margins; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Labels\n\n    me.beforeBuildLabels();\n    me.buildLabels();\n    me.afterBuildLabels(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: noop,\n  //\n  beforeSetDimensions: noop,\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0; // Reset minSize\n\n    me.minSize = {\n      width: 0,\n      height: 0\n    };\n  },\n  afterSetDimensions: noop,\n  //\n  beforeBuildLabels: noop,\n  buildLabels: function buildLabels() {\n    var me = this;\n    var labelOpts = me.options.labels || {};\n    var legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter(function (item) {\n        return labelOpts.filter(item, me.chart.data);\n      });\n    }\n\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n\n    me.legendItems = legendItems;\n  },\n  afterBuildLabels: noop,\n  //\n  beforeFit: noop,\n  fit: function fit() {\n    var me = this;\n    var opts = me.options;\n    var labelOpts = opts.labels;\n    var display = opts.display;\n    var ctx = me.ctx;\n    var globalDefault = defaults.global;\n    var valueOrDefault = helpers.valueOrDefault;\n    var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n    var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n    var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n    var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily); // Reset hit boxes\n\n    var hitboxes = me.legendHitBoxes = [];\n    var minSize = me.minSize;\n    var isHorizontal = me.isHorizontal();\n\n    if (isHorizontal) {\n      minSize.width = me.maxWidth; // fill all the width\n\n      minSize.height = display ? 10 : 0;\n    } else {\n      minSize.width = display ? 10 : 0;\n      minSize.height = me.maxHeight; // fill all the height\n    } // Increase sizes here\n\n\n    if (display) {\n      ctx.font = labelFont;\n\n      if (isHorizontal) {\n        // Labels\n        // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n        var lineWidths = me.lineWidths = [0];\n        var totalHeight = me.legendItems.length ? fontSize + labelOpts.padding : 0;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'top';\n        helpers.each(me.legendItems, function (legendItem, i) {\n          var boxWidth = getBoxWidth(labelOpts, fontSize);\n          var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n          if (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n            totalHeight += fontSize + labelOpts.padding;\n            lineWidths[lineWidths.length] = me.left;\n          } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n          hitboxes[i] = {\n            left: 0,\n            top: 0,\n            width: width,\n            height: fontSize\n          };\n          lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n        });\n        minSize.height += totalHeight;\n      } else {\n        var vPadding = labelOpts.padding;\n        var columnWidths = me.columnWidths = [];\n        var totalWidth = labelOpts.padding;\n        var currentColWidth = 0;\n        var currentColHeight = 0;\n        var itemHeight = fontSize + vPadding;\n        helpers.each(me.legendItems, function (legendItem, i) {\n          var boxWidth = getBoxWidth(labelOpts, fontSize);\n          var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n          if (currentColHeight + itemHeight > minSize.height) {\n            totalWidth += currentColWidth + labelOpts.padding;\n            columnWidths.push(currentColWidth); // previous column width\n\n            currentColWidth = 0;\n            currentColHeight = 0;\n          } // Get max width\n\n\n          currentColWidth = Math.max(currentColWidth, itemWidth);\n          currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n          hitboxes[i] = {\n            left: 0,\n            top: 0,\n            width: itemWidth,\n            height: fontSize\n          };\n        });\n        totalWidth += currentColWidth;\n        columnWidths.push(currentColWidth);\n        minSize.width += totalWidth;\n      }\n    }\n\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n  afterFit: noop,\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  },\n  // Actually draw the legend on the canvas\n  draw: function draw() {\n    var me = this;\n    var opts = me.options;\n    var labelOpts = opts.labels;\n    var globalDefault = defaults.global;\n    var lineDefault = globalDefault.elements.line;\n    var legendWidth = me.width;\n    var lineWidths = me.lineWidths;\n\n    if (opts.display) {\n      var ctx = me.ctx;\n      var valueOrDefault = helpers.valueOrDefault;\n      var fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\n      var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n      var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n      var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n      var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n      var cursor; // Canvas setup\n\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.strokeStyle = fontColor; // for strikethrough effect\n\n      ctx.fillStyle = fontColor; // render in correct colour\n\n      ctx.font = labelFont;\n      var boxWidth = getBoxWidth(labelOpts, fontSize);\n      var hitboxes = me.legendHitBoxes; // current position\n\n      var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0) {\n          return;\n        } // Set the ctx for the box\n\n\n        ctx.save();\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n        ctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n        var isLineWidthZero = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0;\n\n        if (ctx.setLineDash) {\n          // IE 9 and 10 do not support line dash\n          ctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n        }\n\n        if (opts.labels && opts.labels.usePointStyle) {\n          // Recalculate x and y for drawPoint() because its expecting\n          // x and y to be center of figure (instead of top left)\n          var radius = fontSize * Math.SQRT2 / 2;\n          var offSet = radius / Math.SQRT2;\n          var centerX = x + offSet;\n          var centerY = y + offSet; // Draw pointStyle as legend symbol\n\n          helpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n        } else {\n          // Draw box as legend symbol\n          if (!isLineWidthZero) {\n            ctx.strokeRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.fillRect(x, y, boxWidth, fontSize);\n        }\n\n        ctx.restore();\n      };\n\n      var fillText = function fillText(x, y, legendItem, textWidth) {\n        var halfFontSize = fontSize / 2;\n        var xLeft = boxWidth + halfFontSize + x;\n        var yMiddle = y + halfFontSize;\n        ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n        if (legendItem.hidden) {\n          // Strikethrough the text if hidden\n          ctx.beginPath();\n          ctx.lineWidth = 2;\n          ctx.moveTo(xLeft, yMiddle);\n          ctx.lineTo(xLeft + textWidth, yMiddle);\n          ctx.stroke();\n        }\n      }; // Horizontal\n\n\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        cursor = {\n          x: me.left + (legendWidth - lineWidths[0]) / 2,\n          y: me.top + labelOpts.padding,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: me.left + labelOpts.padding,\n          y: me.top + labelOpts.padding,\n          line: 0\n        };\n      }\n\n      var itemHeight = fontSize + labelOpts.padding;\n      helpers.each(me.legendItems, function (legendItem, i) {\n        var textWidth = ctx.measureText(legendItem.text).width;\n        var width = boxWidth + fontSize / 2 + textWidth;\n        var x = cursor.x;\n        var y = cursor.y;\n\n        if (isHorizontal) {\n          if (x + width >= legendWidth) {\n            y = cursor.y += itemHeight;\n            cursor.line++;\n            x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2;\n          }\n        } else if (y + itemHeight > me.bottom) {\n          x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n          y = cursor.y = me.top + labelOpts.padding;\n          cursor.line++;\n        }\n\n        drawLegendBox(x, y, legendItem);\n        hitboxes[i].left = x;\n        hitboxes[i].top = y; // Fill the actual label\n\n        fillText(x, y, legendItem, textWidth);\n\n        if (isHorizontal) {\n          cursor.x += width + labelOpts.padding;\n        } else {\n          cursor.y += itemHeight;\n        }\n      });\n    }\n  },\n\n  /**\n   * Handle an event\n   * @private\n   * @param {IEvent} event - The event to handle\n   * @return {Boolean} true if a change occured\n   */\n  handleEvent: function handleEvent(e) {\n    var me = this;\n    var opts = me.options;\n    var type = e.type === 'mouseup' ? 'click' : e.type;\n    var changed = false;\n\n    if (type === 'mousemove') {\n      if (!opts.onHover) {\n        return;\n      }\n    } else if (type === 'click') {\n      if (!opts.onClick) {\n        return;\n      }\n    } else {\n      return;\n    } // Chart event already has relative position in it\n\n\n    var x = e.x;\n    var y = e.y;\n\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      // See if we are touching one of the dataset boxes\n      var lh = me.legendHitBoxes;\n\n      for (var i = 0; i < lh.length; ++i) {\n        var hitBox = lh[i];\n\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          // Touching an element\n          if (type === 'click') {\n            // use e.native for backwards compatibility\n            opts.onClick.call(me, e.native, me.legendItems[i]);\n            changed = true;\n            break;\n          } else if (type === 'mousemove') {\n            // use e.native for backwards compatibility\n            opts.onHover.call(me, e.native, me.legendItems[i]);\n            changed = true;\n            break;\n          }\n        }\n      }\n    }\n\n    return changed;\n  }\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n  var legend = new Legend({\n    ctx: chart.ctx,\n    options: legendOpts,\n    chart: chart\n  });\n  layouts.configure(chart, legend, legendOpts);\n  layouts.addBox(chart, legend);\n  chart.legend = legend;\n}\n\nmodule.exports = {\n  id: 'legend',\n\n  /**\n   * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n   * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n   * the plugin, which one will be re-exposed in the chart.js file.\n   * https://github.com/chartjs/Chart.js/pull/2640\n   * @private\n   */\n  _element: Legend,\n  beforeInit: function beforeInit(chart) {\n    var legendOpts = chart.options.legend;\n\n    if (legendOpts) {\n      createNewLegendAndAttach(chart, legendOpts);\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart) {\n    var legendOpts = chart.options.legend;\n    var legend = chart.legend;\n\n    if (legendOpts) {\n      helpers.mergeIf(legendOpts, defaults.global.legend);\n\n      if (legend) {\n        layouts.configure(chart, legend, legendOpts);\n        legend.options = legendOpts;\n      } else {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    } else if (legend) {\n      layouts.removeBox(chart, legend);\n      delete chart.legend;\n    }\n  },\n  afterEvent: function afterEvent(chart, e) {\n    var legend = chart.legend;\n\n    if (legend) {\n      legend.handleEvent(e);\n    }\n  }\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n  title: {\n    display: false,\n    fontStyle: 'bold',\n    fullWidth: true,\n    lineHeight: 1.2,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000 // by default greater than legend (1000) to be above\n\n  }\n});\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\n\n\nvar Title = Element.extend({\n  initialize: function initialize(config) {\n    var me = this;\n    helpers.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n    me.legendHitBoxes = [];\n  },\n  // These methods are ordered by lifecycle. Utilities then follow.\n  beforeUpdate: noop,\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = margins; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Labels\n\n    me.beforeBuildLabels();\n    me.buildLabels();\n    me.afterBuildLabels(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: noop,\n  //\n  beforeSetDimensions: noop,\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0; // Reset minSize\n\n    me.minSize = {\n      width: 0,\n      height: 0\n    };\n  },\n  afterSetDimensions: noop,\n  //\n  beforeBuildLabels: noop,\n  buildLabels: noop,\n  afterBuildLabels: noop,\n  //\n  beforeFit: noop,\n  fit: function fit() {\n    var me = this;\n    var valueOrDefault = helpers.valueOrDefault;\n    var opts = me.options;\n    var display = opts.display;\n    var fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\n    var minSize = me.minSize;\n    var lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\n    var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n    var textSize = display ? lineCount * lineHeight + opts.padding * 2 : 0;\n\n    if (me.isHorizontal()) {\n      minSize.width = me.maxWidth; // fill all the width\n\n      minSize.height = textSize;\n    } else {\n      minSize.width = textSize;\n      minSize.height = me.maxHeight; // fill all the height\n    }\n\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n  afterFit: noop,\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    var pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  },\n  // Actually draw the title block on the canvas\n  draw: function draw() {\n    var me = this;\n    var ctx = me.ctx;\n    var valueOrDefault = helpers.valueOrDefault;\n    var opts = me.options;\n    var globalDefaults = defaults.global;\n\n    if (opts.display) {\n      var fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\n      var fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\n      var fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\n      var titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n      var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n      var offset = lineHeight / 2 + opts.padding;\n      var rotation = 0;\n      var top = me.top;\n      var left = me.left;\n      var bottom = me.bottom;\n      var right = me.right;\n      var maxWidth, titleX, titleY;\n      ctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\n      ctx.font = titleFont; // Horizontal\n\n      if (me.isHorizontal()) {\n        titleX = left + (right - left) / 2; // midpoint of the width\n\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        titleX = opts.position === 'left' ? left + offset : right - offset;\n        titleY = top + (bottom - top) / 2;\n        maxWidth = bottom - top;\n        rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n      }\n\n      ctx.save();\n      ctx.translate(titleX, titleY);\n      ctx.rotate(rotation);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      var text = opts.text;\n\n      if (helpers.isArray(text)) {\n        var y = 0;\n\n        for (var i = 0; i < text.length; ++i) {\n          ctx.fillText(text[i], 0, y, maxWidth);\n          y += lineHeight;\n        }\n      } else {\n        ctx.fillText(text, 0, 0, maxWidth);\n      }\n\n      ctx.restore();\n    }\n  }\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n  var title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart: chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nmodule.exports = {\n  id: 'title',\n\n  /**\n   * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n   * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n   * the plugin, which one will be re-exposed in the chart.js file.\n   * https://github.com/chartjs/Chart.js/pull/2640\n   * @private\n   */\n  _element: Title,\n  beforeInit: function beforeInit(chart) {\n    var titleOpts = chart.options.title;\n\n    if (titleOpts) {\n      createNewTitleBlockAndAttach(chart, titleOpts);\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart) {\n    var titleOpts = chart.options.title;\n    var titleBlock = chart.titleBlock;\n\n    if (titleOpts) {\n      helpers.mergeIf(titleOpts, defaults.global.title);\n\n      if (titleBlock) {\n        layouts.configure(chart, titleBlock, titleOpts);\n        titleBlock.options = titleOpts;\n      } else {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    } else if (titleBlock) {\n      layouts.removeBox(chart, titleBlock);\n      delete chart.titleBlock;\n    }\n  }\n};","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;"],"sourceRoot":""}