{"version":3,"sources":["components/uielements/styles/checkbox.style.js","components/uielements/checkbox.js","containers/Forms/FormsWithValidation/FormValidation.js","containers/Forms/FormsWithValidation/index.js"],"names":["AntCheckbox","ComponentName","styled","_templateObject","palette","__webpack_require__","d","__webpack_exports__","CheckboxGroup","checkbox","Checkbox","Group","FormItem","Form","Item","FormWIthSubmissionButton","state","confirmDirty","handleSubmit","e","preventDefault","_this","props","form","validateFieldsAndScroll","err","values","Notification","JSON","stringify","handleConfirmBlur","value","target","setState","checkPassword","rule","callback","getFieldValue","checkConfirm","validateFields","force","getFieldDecorator","this","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","react_default","a","createElement","uielements_form","onSubmit","Object","assign","label","hasFeedback","rules","type","message","required","es_input","name","id","validator","onBlur","style","marginBottom","valuePropName","uielements_checkbox","href","uielements_button","htmlType","Component","WrappedFormWIthSubmissionButton","create","layoutWrapper","pageHeader","intlMessages","box","FormsWithValidation_FormItem","validateStatus","help","input","placeholder","FormValidation"],"mappings":"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","file":"static/js/41.4593fb22.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { palette } from 'styled-theme';\n\nconst AntCheckbox = ComponentName => styled(ComponentName)`\n  &.ant-checkbox-wrapper {\n    font-size: 13px;\n    color: ${palette('text', 1)};\n    vertical-align: middle;\n\n    .ant-checkbox {\n      top: inherit;\n    }\n  }\n`;\n\nexport default AntCheckbox;\n","import { Checkbox } from 'antd';\nimport AntCheckbox from './styles/checkbox.style';\n\nconst checkbox = AntCheckbox(Checkbox);\nconst CheckboxGroup = Checkbox.Group;\n\nexport default checkbox;\nexport { CheckboxGroup };\n","import React, { Component } from 'react';\nimport { Input } from 'antd';\nimport Form from '../../../components/uielements/form';\nimport Checkbox from '../../../components/uielements/checkbox';\nimport Button from '../../../components/uielements/button';\nimport Notification from '../../../components/notification';\nconst FormItem = Form.Item;\n\nclass FormWIthSubmissionButton extends Component {\n  state = {\n    confirmDirty: false,\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        Notification(\n          'success',\n          'Received values of form',\n          JSON.stringify(values)\n        );\n      }\n    });\n  };\n  handleConfirmBlur = e => {\n    const value = e.target.value;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n  checkPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Two passwords that you enter is inconsistent!');\n    } else {\n      callback();\n    }\n  };\n  checkConfirm = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && this.state.confirmDirty) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 6 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 14 },\n      },\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0,\n        },\n        sm: {\n          span: 14,\n          offset: 6,\n        },\n      },\n    };\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <FormItem {...formItemLayout} label=\"E-mail\" hasFeedback>\n          {getFieldDecorator('email', {\n            rules: [\n              {\n                type: 'email',\n                message: 'The input is not valid E-mail!',\n              },\n              {\n                required: true,\n                message: 'Please input your E-mail!',\n              },\n            ],\n          })(<Input name=\"email\" id=\"email\" />)}\n        </FormItem>\n        <FormItem {...formItemLayout} label=\"Password\" hasFeedback>\n          {getFieldDecorator('password', {\n            rules: [\n              {\n                required: true,\n                message: 'Please input your password!',\n              },\n              {\n                validator: this.checkConfirm,\n              },\n            ],\n          })(<Input type=\"password\" />)}\n        </FormItem>\n        <FormItem {...formItemLayout} label=\"Confirm Password\" hasFeedback>\n          {getFieldDecorator('confirm', {\n            rules: [\n              {\n                required: true,\n                message: 'Please confirm your password!',\n              },\n              {\n                validator: this.checkPassword,\n              },\n            ],\n          })(<Input type=\"password\" onBlur={this.handleConfirmBlur} />)}\n        </FormItem>\n        <FormItem {...tailFormItemLayout} style={{ marginBottom: 8 }}>\n          {getFieldDecorator('agreement', {\n            valuePropName: 'checked',\n            rules: [\n              {\n                message: 'Please input your E-mail!',\n                required: true,\n              },\n            ],\n          })(\n            <Checkbox>\n              I have read the <a href=\"# \">agreement</a>\n            </Checkbox>\n          )}\n        </FormItem>\n        <FormItem {...tailFormItemLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Register\n          </Button>\n        </FormItem>\n      </Form>\n    );\n  }\n}\n\nconst WrappedFormWIthSubmissionButton = Form.create()(FormWIthSubmissionButton);\nexport default WrappedFormWIthSubmissionButton;\n","import React, { Component } from 'react';\nimport Form from '../../../components/uielements/form';\nimport Input from '../../../components/uielements/input';\nimport PageHeader from '../../../components/utility/pageHeader';\nimport Box from '../../../components/utility/box';\nimport LayoutWrapper from '../../../components/utility/layoutWrapper.js';\nimport IntlMessages from '../../../components/utility/intlMessages';\nimport FormValidation from './FormValidation';\n\nconst FormItem = Form.Item;\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 5 }\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 12 }\n  }\n};\n\nexport default class extends Component {\n  render() {\n    return (\n      <LayoutWrapper>\n        <PageHeader>\n          {<IntlMessages id=\"forms.formsWithValidation.header\" />}\n        </PageHeader>\n        <Box>\n          <Form>\n            <FormItem\n              {...formItemLayout}\n              label={<IntlMessages id=\"forms.formsWithValidation.failLabel\" />}\n              validateStatus=\"error\"\n              help={<IntlMessages id=\"forms.formsWithValidation.failHelp\" />}\n            >\n              <Input placeholder=\"unavailable choice\" id=\"error\" />\n            </FormItem>\n\n            <FormItem\n              {...formItemLayout}\n              label={\n                <IntlMessages id=\"forms.formsWithValidation.warningLabel\" />\n              }\n              validateStatus=\"warning\"\n            >\n              <Input placeholder=\"Warning\" id=\"warning\" />\n            </FormItem>\n\n            <FormItem\n              {...formItemLayout}\n              label={\n                <IntlMessages id=\"forms.formsWithValidation.ValidatingLabel\" />\n              }\n              hasFeedback\n              validateStatus=\"validating\"\n              help={\n                <IntlMessages id=\"forms.formsWithValidation.ValidatingHelp\" />\n              }\n            >\n              <Input\n                placeholder=\"I'm the content is being validated\"\n                id=\"validating\"\n              />\n            </FormItem>\n\n            <FormItem\n              {...formItemLayout}\n              label={\n                <IntlMessages id=\"forms.formsWithValidation.SuccessLabel\" />\n              }\n              hasFeedback\n              validateStatus=\"success\"\n            >\n              <Input placeholder=\"I'm the content\" id=\"success\" />\n            </FormItem>\n\n            <FormItem\n              {...formItemLayout}\n              label={\n                <IntlMessages id=\"forms.formsWithValidation.WarninghasFeedbackLabel\" />\n              }\n              hasFeedback\n              validateStatus=\"warning\"\n            >\n              <Input placeholder=\"Warning\" id=\"warning1\" />\n            </FormItem>\n\n            <FormItem\n              {...formItemLayout}\n              label={\n                <IntlMessages id=\"forms.formsWithValidation.FailhasFeedbackLabel\" />\n              }\n              hasFeedback\n              validateStatus=\"error\"\n              help={\n                <IntlMessages id=\"forms.formsWithValidation.FailhasFeedbackHelp\" />\n              }\n            >\n              <Input placeholder=\"unavailable choice\" id=\"error1\" />\n            </FormItem>\n          </Form>\n        </Box>\n        <PageHeader>Form Submit Validation</PageHeader>\n        <Box>\n          <FormValidation />\n        </Box>\n      </LayoutWrapper>\n    );\n  }\n}\n"],"sourceRoot":""}