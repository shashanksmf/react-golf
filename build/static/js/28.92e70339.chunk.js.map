{"version":3,"sources":["containers/Overview/radarConfig.js","containers/Overview/data.js","containers/Overview/overview.js"],"names":["data","labels","datasets","label","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","tableData","columns","data_recollection","title","dataIndex","key","render","text","record","react_default","a","createElement","className","name","src","image","spider_focus","personal_records","table4","dataSource","table1","handicap","scoring","rounds","ranking","table2","off","long","approach","green","putting","table3","all","console","log","actions","Overview","this","props","getDataRecollection","_this$props$Overview","_this$props$Overview$","recollectionData","box","table","pagination","react_chartjs_2_es","height","Component","connect","state"],"mappings":"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","file":"static/js/28.92e70339.chunk.js","sourcesContent":["const data = {\n  labels: ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'],\n  datasets: [\n    {\n      label: 'My First dataset',\n      backgroundColor: 'rgba(72,166,242,0.2)',\n      borderColor: 'rgba(72,166,242,1)',\n      pointBackgroundColor: 'rgba(72,166,242,1)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(72,166,242,1)',\n      data: [65, 59, 90, 81, 56, 55, 40]\n    },\n    {\n      label: 'My Second dataset',\n      backgroundColor: 'rgba(255,99,132,0.2)',\n      borderColor: 'rgba(255,99,132,1)',\n      pointBackgroundColor: 'rgba(255,99,132,1)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(255,99,132,1)',\n      data: [28, 48, 40, 19, 96, 27, 100]\n    }\n  ]\n};\n\nexport {\n  data\n}\n","import React, { Component } from \"react\";\nconst tableData = {\n\n  columns:{\n    \"data_recollection\":[\n          {\n        title: \"Name\",\n        dataIndex: \"name\",\n        key: \"name\",\n        render: (text, record) => {\n          return (\n            <div className=\"text-img-wrapper\">\n              <span>{record.name}</span>\n              <br />\n              <img src={record.image} />\n            </div>\n          );\n        }\n      },\n      {\n        title: \"Handicap\",\n        dataIndex: \"handicap\",\n        key: \"Handicap\"\n      },\n      {\n        title: \"Scoring average\",\n        dataIndex: \"scoring\",\n        key: \"scoring\"\n      },\n      {\n        title: \"Rounds\",\n        dataIndex: \"rounds\",\n        key: \"rounds\"\n      },\n      {\n        title: \"Ranking\",\n        dataIndex: \"ranking\",\n        key: \"ranking\"\n      }],\n      \"spider_focus\":[\n      {\n        title: \"Off the tee\",\n        dataIndex: \"off\",\n        key: \"off\"\n      },\n      {\n        title: \"Long Shots\",\n        dataIndex: \"long\",\n        key: \"long\"\n      },\n      {\n        title: \"Approach Green\",\n        dataIndex: \"approach\",\n        key: \"approach\"\n      },\n      {\n        title: \"Greenside\",\n        dataIndex: \"green\",\n        key: \"green\"\n      },\n      {\n        title: \"Putting\",\n        dataIndex: \"putting\",\n        key: \"putting\"\n      },\n      {\n        title: \"Scoring\",\n        dataIndex: \"scoring\",\n        key: \"scoring\"\n      }\n    ],\n      \"personal_records\":[\n        {\n        title: \"All rounds are 18 holes only (completed)\",\n        dataIndex: \"all\",\n        key: \"all\"\n      },\n      {\n        title: \"\",\n        dataIndex: \"rounds\",\n        key: \"rounds\"\n      }\n    ],\n      \"table4\":[\n      {\n        dataIndex: \"putt\",\n        key: \"putt\"\n      },\n      {\n        dataIndex: \"distance\",\n        key: \"distance\"\n      }\n    ]\n  },\n\n  dataSource:{\n    \"table1\":[\n      {\n        key: \"1\",\n        name: \"CÃ©dric DENIS\",\n        handicap: \"+2.7\",\n        scoring: \"68.8\",\n        rounds:\"10\",\n        ranking:\"T12\",\n        image:\"https://s3.amazonaws.com/uifaces/faces/twitter/bluefx_/128.jpg\"\n      }],\n      \"table2\":[\n        {\n        key: \"1\",\n        off: \"0.8\",\n        long: \"0.1\",\n        approach: \"0.9\",\n        green:\"0.1\",\n        putting:\"0.2\",\n        scoring:\"0.1\",\n      }],\n      \"table3\":[\n      {\n        key: \"1\",\n        all: \"Lowest Score (from list of rounds)\",\n        rounds: \"64\",\n      },\n      {\n        key: \"2\",\n        all: \"Birdies (most birdies in one round)\",\n        rounds: \"9\",\n      },\n      {\n        key: \"3\",\n        all: \"GIR (most greens in regulation in one round)\",\n        rounds: \"15\",\n      },\n      {\n        key: \"4\",\n        all: \"Fairways (most fairways in one round %)\",\n        rounds: \"71%\",\n      },\n      {\n        key: \"5\",\n        all: \"least amount of Putts (lowest nbr of putts recorded in a round)\",\n        rounds: \"26\",\n      },\n      {\n        key: \"6\",\n        all: \"longest putt made (Longest distance single putt made during a round) no flash round\",\n        rounds: \"14m\"\n      },\n      {\n        key: \"7\",\n        all: \"Best SG putting (best Strokes gained putting in a single full round) no flash round\",\n        rounds: \"2.681\"\n      }\n    ],\n  }\n}\n\nexport default tableData;\n","import { Table } from \"antd\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Box from \"../../components/utility/box\";\nimport { Radar } from \"react-chartjs-2\";\nimport { data } from \"./radarConfig\";\nimport tableData from \"./data.js\";\nimport actions from './../../redux/overview/actions';\nimport \"./overview.css\";\nconsole.log(\"actions\", actions)\nconsole.log(\"table\", tableData);\nclass Overview extends Component {\n  componentDidMount() {\n    this.props.getDataRecollection();\n  }\n  render() {\n    const {\n      Overview:\n      {\n        recollectionData:\n        {\n          data_recollection,\n          personal_records,\n          spider_focus\n        } = []\n      } = []\n    } = this.props;\n\n    console.log(\"redux spider_focus\", data_recollection)\n    console.log(\"redux personal_records\", personal_records)\n    console.log(\"redux data_recollection\", data_recollection)\n\n    return (\n      <Box>\n        <div>\n          <h2> Data recollection </h2>{\" \"}\n          <Table\n            columns={tableData.columns.data_recollection}\n            dataSource={data_recollection}\n            pagination={false}\n          />\n          <h2> Spider Focus </h2>{\" \"}\n          <Table\n            columns={tableData.columns.spider_focus}\n            dataSource={spider_focus}\n            pagination={false}\n          />\n          <h2> Personal records </h2>{\" \"}\n          <Table\n            columns={tableData.columns.personal_records}\n            dataSource={personal_records}\n            pagination={false}\n          />\n          <h2> Spider Grid </h2> <Radar data={data} height={130} />\n        </div>{\" \"}\n      </Box>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\n\nexport default connect(mapStateToProps, actions)(Overview);\n"],"sourceRoot":""}