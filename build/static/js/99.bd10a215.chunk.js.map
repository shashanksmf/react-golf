{"version":3,"sources":["components/uielements/styles/checkbox.style.js","components/uielements/checkbox.js","containers/Spider_Rankings/data.js","containers/Spider_Rankings/togreen.js"],"names":["AntCheckbox","ComponentName","styled","_templateObject","palette","__webpack_require__","d","__webpack_exports__","CheckboxGroup","checkbox","Checkbox","Group","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_uielements_checkbox__WEBPACK_IMPORTED_MODULE_1__","columns","title","dataIndex","key","render","text","a","createElement","data","dataSource","Name","Score","Togreen","_this","Object","C_Users_aamer_Documents_react_golf_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_aamer_Documents_react_golf_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_aamer_Documents_react_golf_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","setRenderInColumns","columnsData","that","C_Users_aamer_Documents_react_golf_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","forEach","item","record","console","log","react__WEBPACK_IMPORTED_MODULE_6___default","onClick","setState","selectedName","className","state","DATA","rowSelection","onChange","selectedRowKeys","selectedRows","_components_utility_layoutWrapper_js__WEBPACK_IMPORTED_MODULE_11__","_components_utility_box__WEBPACK_IMPORTED_MODULE_7__","_components_utility_contentHolder__WEBPACK_IMPORTED_MODULE_12__","style","marginTop","overflow","antd__WEBPACK_IMPORTED_MODULE_13__","antd__WEBPACK_IMPORTED_MODULE_14__","md","sm","xl","xs","_Tables_antTables_antTable_style__WEBPACK_IMPORTED_MODULE_10__","rowKey","bordered","loading","props","isLoading","pagination","hideOnSinglePage","Component"],"mappings":"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","file":"static/js/99.bd10a215.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\n\r\nconst AntCheckbox = ComponentName => styled(ComponentName)`\r\n  &.ant-checkbox-wrapper {\r\n    font-size: 13px;\r\n    color: ${palette('text', 1)};\r\n    vertical-align: middle;\r\n\r\n    .ant-checkbox {\r\n      top: inherit;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AntCheckbox;\r\n","import { Checkbox } from 'antd';\r\nimport AntCheckbox from './styles/checkbox.style';\r\n\r\nconst checkbox = AntCheckbox(Checkbox);\r\nconst CheckboxGroup = Checkbox.Group;\r\n\r\nexport default checkbox;\r\nexport { CheckboxGroup };\r\n","import React, { Component } from \"react\";\r\nimport Checkbox, {\r\n  CheckboxGroup\r\n} from '../../components/uielements/checkbox';\r\n  let dataSource = [\r\n    {\r\n      Name: 'Ding Golfer',\r\n      Score: \"3\",\r\n    },\r\n    {\r\n      Name: 'Charles Rostating',\r\n      Score: \"8\",\r\n    },\r\n    {\r\n      Name: 'Cedric Denis',\r\n      Score: \"6\",\r\n    },\r\n    {\r\n      Name: 'Ding Rostating',\r\n      Score: \"10\",\r\n    },\r\n    {\r\n      Name: 'Charles Golfer',\r\n      Score: \"4\",\r\n    },\r\n    {\r\n      Name: 'Rostating Denis',\r\n      Score: \"19\",\r\n    },\r\n  ];\r\n  let columns = [\r\n    {\r\n    title: 'Name',\r\n    dataIndex: 'Name',\r\n    key: 'Name',\r\n    render: text =><Checkbox>{text}</Checkbox>,\r\n  },\r\n  {\r\n    title: 'Score',\r\n    dataIndex: 'Score',\r\n    key: 'Score',\r\n  },\r\n\r\n ];\r\n  let data = {};\r\nexport default data = {\r\n    dataSource:dataSource,columns:columns\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Box from '../../components/utility/box';\r\nimport './spider.css'\r\n\r\nimport DATA from './data.js';\r\nimport TableWrapper from '../Tables/antTables/antTable.style';\r\nimport LayoutContentWrapper from '../../components/utility/layoutWrapper.js';\r\nimport ContentHolder from '../../components/utility/contentHolder';\r\nimport { Row, Col, Icon } from 'antd';\r\n\r\n\r\nexport default class Togreen extends Component {\r\n  \r\n  constructor(){\r\n    super()\r\n    this.state = { selectedName : ''}\r\n  \r\n  }\r\n\r\n\r\n  setRenderInColumns = (columnsData) => {\r\n    let that = this;\r\n    columnsData.forEach(item => {\r\n      item.render = function(record, text) {\r\n        console.log(\"record,texst\",record,text,item);\r\n        if(record == text.Name)  {\r\n           return <span onClick={()=>{ that.setState({ selectedName : record})}} className={that.state.selectedName == record ? 'active' : ''}>{record}</span> \r\n        } \r\n        return record\r\n      }\r\n    })\r\n    return columnsData\r\n   }\r\n   \r\n  render() {\r\n    const { dataSource,columns} = DATA;\r\n    \r\n    const rowSelection = {\r\n      onChange: (selectedRowKeys, selectedRows) => {},\r\n    };\r\n   \r\n    return (\r\n      <LayoutContentWrapper>\r\n      <Box>\r\n        <ContentHolder style={{ marginTop: 0, overflow: 'hidden' }}>\r\n         \r\n      \t<Row >\r\n        <Col md={24} sm={8} xl={8} xs={24}>\r\n          <TableWrapper\r\n         \t  // onRow = {record => this.setState({ selectedName:record.Name })}\r\n            rowKey=\"key\"\r\n            rowSelection={rowSelection}\r\n            columns={this.setRenderInColumns(columns)}\r\n            bordered={true}\r\n            dataSource={dataSource}\r\n            loading={this.props.isLoading}\r\n            className=\"isoSimpleTable\"\r\n            pagination={{\r\n              // defaultPageSize: 1,\r\n              hideOnSinglePage: true,\r\n             \r\n            }}\r\n          />\r\n          </Col>\r\n\r\n          <Col md={8} sm={8} xl={8} xs={8}></Col>\r\n\r\n          <TableWrapper\r\n            rowKey=\"key1\"\r\n            rowSelection={rowSelection}\r\n            columns={this.setRenderInColumns(columns)}\r\n            bordered={true}\r\n            dataSource={dataSource}\r\n            loading={this.props.isLoading}\r\n            className=\"isoSimpleTable\"\r\n            pagination={{\r\n              // defaultPageSize: 1,\r\n              hideOnSinglePage: true,\r\n             \r\n            }}\r\n          />\r\n         \r\n          </Row>\r\n        </ContentHolder>\r\n      </Box>\r\n\r\n            {/* ############################################################## */}\r\n      <Box>\r\n        <ContentHolder style={{ marginTop: 0, overflow: 'hidden' }}>\r\n         \r\n      \t<Row >\r\n        <Col md={24} sm={8} xl={8} xs={24}>\r\n          <TableWrapper\r\n         \t  // onRow = {record => this.setState({ selectedName:record.Name })}\r\n            rowKey=\"key\"\r\n            rowSelection={rowSelection}\r\n            columns={this.setRenderInColumns(columns)}\r\n            bordered={true}\r\n            dataSource={dataSource}\r\n            loading={this.props.isLoading}\r\n            className=\"isoSimpleTable\"\r\n            pagination={{\r\n              // defaultPageSize: 1,\r\n              hideOnSinglePage: true,\r\n             \r\n            }}\r\n          />\r\n          </Col>\r\n\r\n          <Col md={8} sm={8} xl={8} xs={8}></Col>\r\n\r\n          <TableWrapper\r\n            rowKey=\"key1\"\r\n            rowSelection={rowSelection}\r\n            columns={this.setRenderInColumns(columns)}\r\n            bordered={true}\r\n            dataSource={dataSource}\r\n            loading={this.props.isLoading}\r\n            className=\"isoSimpleTable\"\r\n            pagination={{\r\n              // defaultPageSize: 1,\r\n              hideOnSinglePage: true,\r\n             \r\n            }}\r\n          />\r\n         \r\n          </Row>\r\n        </ContentHolder>\r\n      </Box>\r\n            \r\n              {/* ############################################################## */}\r\n      <Box>\r\n        <ContentHolder style={{ marginTop: 0, overflow: 'hidden' }}>\r\n         \r\n      \t<Row >\r\n        <Col md={24} sm={8} xl={8} xs={24}>\r\n          <TableWrapper\r\n         \t  // onRow = {record => this.setState({ selectedName:record.Name })}\r\n            rowKey=\"key\"\r\n            rowSelection={rowSelection}\r\n            columns={this.setRenderInColumns(columns)}\r\n            bordered={true}\r\n            dataSource={dataSource}\r\n            loading={this.props.isLoading}\r\n            className=\"isoSimpleTable\"\r\n            pagination={{\r\n              // defaultPageSize: 1,\r\n              hideOnSinglePage: true,\r\n             \r\n            }}\r\n          />\r\n          </Col>\r\n\r\n          <Col md={8} sm={8} xl={8} xs={8}></Col>\r\n\r\n          <TableWrapper\r\n            rowKey=\"key1\"\r\n            rowSelection={rowSelection}\r\n            columns={this.setRenderInColumns(columns)}\r\n            bordered={true}\r\n            dataSource={dataSource}\r\n            loading={this.props.isLoading}\r\n            className=\"isoSimpleTable\"\r\n            pagination={{\r\n              // defaultPageSize: 1,\r\n              hideOnSinglePage: true,\r\n             \r\n            }}\r\n          />\r\n         \r\n          </Row>\r\n        </ContentHolder>\r\n      </Box>\r\n\r\n        {/* ############################################################## */}\r\n        <Box>\r\n        <ContentHolder style={{ marginTop: 0, overflow: 'hidden' }}>\r\n         \r\n      \t<Row >\r\n        <Col md={24} sm={8} xl={8} xs={24}>\r\n          <TableWrapper\r\n         \t  // onRow = {record => this.setState({ selectedName:record.Name })}\r\n            rowKey=\"key\"\r\n            rowSelection={rowSelection}\r\n            columns={this.setRenderInColumns(columns)}\r\n            bordered={true}\r\n            dataSource={dataSource}\r\n            loading={this.props.isLoading}\r\n            className=\"isoSimpleTable\"\r\n            pagination={{\r\n              // defaultPageSize: 1,\r\n              hideOnSinglePage: true,\r\n             \r\n            }}\r\n          />\r\n          </Col>\r\n\r\n          <Col md={8} sm={8} xl={8} xs={8}></Col>\r\n\r\n          <TableWrapper\r\n            rowKey=\"key1\"\r\n            rowSelection={rowSelection}\r\n            columns={this.setRenderInColumns(columns)}\r\n            bordered={true}\r\n            dataSource={dataSource}\r\n            loading={this.props.isLoading}\r\n            className=\"isoSimpleTable\"\r\n            pagination={{\r\n              // defaultPageSize: 1,\r\n              hideOnSinglePage: true,\r\n             \r\n            }}\r\n          />\r\n         \r\n          </Row>\r\n        </ContentHolder>\r\n      </Box>\r\n\r\n        {/* ############################################################## */}\r\n        <Box>\r\n        <ContentHolder style={{ marginTop: 0, overflow: 'hidden' }}>\r\n         \r\n      \t<Row >\r\n        <Col md={24} sm={8} xl={8} xs={24}>\r\n          <TableWrapper\r\n         \t  // onRow = {record => this.setState({ selectedName:record.Name })}\r\n            rowKey=\"key\"\r\n            rowSelection={rowSelection}\r\n            columns={this.setRenderInColumns(columns)}\r\n            bordered={true}\r\n            dataSource={dataSource}\r\n            loading={this.props.isLoading}\r\n            className=\"isoSimpleTable\"\r\n            pagination={{\r\n              // defaultPageSize: 1,\r\n              hideOnSinglePage: true,\r\n             \r\n            }}\r\n          />\r\n          </Col>\r\n\r\n          <Col md={8} sm={8} xl={8} xs={8}></Col>\r\n\r\n          <TableWrapper\r\n            rowKey=\"key1\"\r\n            rowSelection={rowSelection}\r\n            columns={this.setRenderInColumns(columns)}\r\n            bordered={true}\r\n            dataSource={dataSource}\r\n            loading={this.props.isLoading}\r\n            className=\"isoSimpleTable\"\r\n            pagination={{\r\n              // defaultPageSize: 1,\r\n              hideOnSinglePage: true,\r\n             \r\n            }}\r\n          />\r\n         \r\n          </Row>\r\n        </ContentHolder>\r\n      </Box>\r\n\r\n        {/* ############################################################## */}\r\n        <Box>\r\n        <ContentHolder style={{ marginTop: 0, overflow: 'hidden' }}>\r\n         \r\n      \t<Row >\r\n        <Col md={24} sm={8} xl={8} xs={24}>\r\n          <TableWrapper\r\n         \t  // onRow = {record => this.setState({ selectedName:record.Name })}\r\n            rowKey=\"key\"\r\n            rowSelection={rowSelection}\r\n            columns={this.setRenderInColumns(columns)}\r\n            bordered={true}\r\n            dataSource={dataSource}\r\n            loading={this.props.isLoading}\r\n            className=\"isoSimpleTable\"\r\n            pagination={{\r\n              // defaultPageSize: 1,\r\n              hideOnSinglePage: true,\r\n             \r\n            }}\r\n          />\r\n          </Col>\r\n\r\n          <Col md={8} sm={8} xl={8} xs={8}></Col>\r\n\r\n          <TableWrapper\r\n            rowKey=\"key1\"\r\n            rowSelection={rowSelection}\r\n            columns={this.setRenderInColumns(columns)}\r\n            bordered={true}\r\n            dataSource={dataSource}\r\n            loading={this.props.isLoading}\r\n            className=\"isoSimpleTable\"\r\n            pagination={{\r\n              // defaultPageSize: 1,\r\n              hideOnSinglePage: true,\r\n             \r\n            }}\r\n          />\r\n         \r\n          </Row>\r\n        </ContentHolder>\r\n      </Box>\r\n\r\n      \r\n    </LayoutContentWrapper>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}