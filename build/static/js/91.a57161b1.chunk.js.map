{"version":3,"sources":["components/utility/helper-text.js","containers/Invoice/invoice.style.js","containers/Invoice/index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","__webpack_exports__","_ref","_ref$text","text","a","createElement","className","style","display","alignItems","justifyContent","width","padding","BoxWrapper","styled","BoxComponent","_templateObject","CardWrapper","span","_templateObject2","palette","div","_templateObject3","props","Box","WithDirection","Invoices","handleMenuClickToLink","e","message","info","state","selected","columns","title","dataIndex","rowKey","render","react_default","columns_mature","getnewInvoiceId","Date","getTime","_this$props","this","initialInvoices","initData","_this2","dicClicked","dropdown","onClick","key","langClicked","_this$props2","invoices","match","deleteInvoice","rowSelection","hideDefaultSelections","selectedRowKeys","onChange","setState","selections","onSelect","map","invoice","changableRowKeys","length","notification","concat","onSelection","layoutWrapper","pageHeader","intlMessages","id","overlay","uielements_button","margin","rtl","icon","type","invoice_style","helper_text","customScrollBar","antTable_style","dataSource","pagination","Component","connect","Object","objectSpread","invoiceActions"],"mappings":"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","file":"static/js/91.a57161b1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default ({ text = '' }) => (\r\n  <div\r\n    className=\"isoHelperText\"\r\n    style={{\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      width: '100%',\r\n      padding: '20px'\r\n    }}\r\n  >\r\n    <h3>{text}</h3>\r\n  </div>\r\n);\r\n","import styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\nimport BoxComponent from '../../components/utility/box';\r\nimport WithDirection from '../../settings/withDirection';\r\n\r\nconst BoxWrapper = styled(BoxComponent)`\r\n  .isoInvoiceTableBtn {\r\n    display: flex;\r\n    margin-bottom: 20px;\r\n    a {\r\n      margin-left: auto;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StatusTag = styled.span`\r\n  padding: 0 5px;\r\n  height: 20px;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 2px;\r\n  background-color: ${palette('primary', 0)};\r\n  font-size: 12px;\r\n  color: #ffffff;\r\n  text-transform: capitalize;\r\n\r\n  &.pending {\r\n    background-color: ${palette('error', 0)};\r\n  }\r\n\r\n  &.shipped {\r\n    background-color: ${palette('warning', 0)};\r\n  }\r\n\r\n  &.delivered {\r\n    background-color: ${palette('success', 0)};\r\n  }\r\n`;\r\n\r\nconst CardWrapper = styled.div`\r\n  width: auto;\r\n  overflow: inherit;\r\n  position: relative;\r\n  .isoInvoiceTable {\r\n    table {\r\n      tbody {\r\n        tr {\r\n          td {\r\n            .isoInvoiceBtnView {\r\n              display: flex;\r\n              flex-direction: row;\r\n              > a {\r\n                margin: ${props =>\r\n                  props['data-rtl'] === 'rtl' ? '0 0 0 15px' : '0 15px 0 0'};\r\n              }\r\n            }\r\n          }\r\n          &:hover {\r\n            .isoInvoiceBtnView {\r\n              ${'' /* opacity: 1; */};\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .invoiceListTable {\r\n    .ant-dropdown-menu-item,\r\n    .ant-dropdown-menu-submenu-title {\r\n      &:hover {\r\n        background-color: ${palette('secondary', 1)};\r\n      }\r\n    }\r\n\r\n    .invoiceViewBtn {\r\n      color: ${palette('text', 3)};\r\n\r\n      &:hover {\r\n        color: ${palette('primary', 0)};\r\n      }\r\n    }\r\n\r\n    .invoiceDltBtn {\r\n      font-size: 18px;\r\n      border: 0;\r\n      color: ${palette('error', 0)};\r\n\r\n      &:hover {\r\n        border: 0;\r\n        color: ${palette('error', 2)};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Box = WithDirection(BoxWrapper);\r\nexport { Box, StatusTag };\r\nexport default WithDirection(CardWrapper);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport notification from '../../components/notification';\r\n// import Box from '../../components/utility/box';\r\nimport HelperText from '../../components/utility/helper-text';\r\nimport LayoutWrapper from '../../components/utility/layoutWrapper';\r\nimport PageHeader from '../../components/utility/pageHeader';\r\nimport IntlMessages from '../../components/utility/intlMessages';\r\nimport Scrollbars from '../../components/utility/customScrollBar';\r\nimport Button from '../../components/uielements/button';\r\nimport invoiceActions from '../../redux/invoice/actions';\r\nimport CardWrapper, { Box, StatusTag } from './invoice.style';\r\nimport TableWrapper from '../Tables/antTables/antTable.style';\r\nimport { rtl } from '../../settings/withDirection';\r\nimport { Icon, Row, Col } from 'antd';\r\n\r\nimport Dropdown, {\r\n  DropdownButtons,\r\n  DropdownMenu,\r\n  MenuItem,\r\n  SubMenu,\r\n} from '../../components/uielements/dropdown';\r\nimport message from '../../components/uielements/message';\r\n\r\n\r\n\r\nclass Invoices extends Component {\r\n\r\n  handleMenuClickToLink = e => {\r\n    message.info('Click on menu item.');\r\n  };\r\n\r\n  handleMenuClickToLink = e => {\r\n    message.info('Click on menu item.');\r\n  };\r\n  \r\n  state = {\r\n    selected: [],\r\n  };\r\n  componentDidMount() {\r\n    const { initialInvoices, initData } = this.props;\r\n    if (!initialInvoices) {\r\n      initData();\r\n    }\r\n  }\r\n\r\n\r\n  \r\n  columns = [\r\n    {\r\n      title: '#',\r\n      dataIndex: 'number',\r\n      rowKey: 'number',\r\n      width: '15%',\r\n      render: text => <span>{text}</span>,\r\n    },\r\n    {\r\n      title: 'MEN',\r\n      dataIndex: 'number',\r\n      rowKey: 'number',\r\n      width: '15%',\r\n      render: text => <span>{text}</span>,\r\n    },\r\n    {\r\n      title: 'MEN (sr)',\r\n      dataIndex: 'billFrom',\r\n      rowKey: 'billFrom',\r\n      width: '25%',\r\n      render: text => <span>{text}</span>,\r\n    },\r\n    {\r\n      title: 'WOMEN',\r\n      dataIndex: 'billTo',\r\n      rowKey: 'billTo',\r\n      width: '22%',\r\n      render: text => <span>{text}</span>,\r\n    },\r\n    {\r\n      title: 'WOMEN (sr)',\r\n      dataIndex: 'totalCost',\r\n      rowKey: 'totalCost',\r\n      width: '15%',\r\n      render: text => <span>{text}</span>,\r\n    },\r\n    // {\r\n    //   title: 'Status',\r\n    //   dataIndex: 'orderStatus',\r\n    //   rowKey: 'orderStatus',\r\n    //   width: '13%',\r\n    //   render: (text, orderStatus) => {\r\n    //     let className;\r\n    //     if (text === 'shipped' || text === 'Shipped' || text === 'SHIPPED') {\r\n    //       className = 'shipped';\r\n    //     } else if (\r\n    //       text === 'delivered' ||\r\n    //       text === 'Delivered' ||\r\n    //       text === 'DELIVERED'\r\n    //     ) {\r\n    //       className = 'delivered';\r\n    //     } else if (\r\n    //       text === 'pending' ||\r\n    //       text === 'Pending' ||\r\n    //       text === 'PENDING'\r\n    //     ) {\r\n    //       className = 'pending';\r\n    //     }\r\n    //     return <StatusTag className={className}>{text}</StatusTag>;\r\n    //   },\r\n    // },\r\n    // {\r\n    //   title: '',\r\n    //   dataIndex: 'view',\r\n    //   rowKey: 'view',\r\n    //   width: '10%',\r\n    //   render: (text, invoice) => (\r\n    //     <div className=\"isoInvoiceBtnView\">\r\n    //       <Link to={`${this.props.match.path}/${invoice.id}`}>\r\n    //         <Button color=\"primary\" className=\"invoiceViewBtn\">\r\n    //           View\r\n    //         </Button>\r\n    //       </Link>{' '}\r\n    //       <Button\r\n    //         className=\"invoiceDltBtn\"\r\n    //         // icon=\"delete\"\r\n    //         onClick={() => {\r\n    //           notification('error', '1 invoice deleted');\r\n    //           this.props.deleteInvoice([invoice.key]);\r\n    //           this.setState({ selected: [] });\r\n    //         }}\r\n    //       >\r\n    //         <i className=\"ion-android-delete\" />\r\n    //       </Button>\r\n    //     </div>\r\n    //   ),\r\n    // },\r\n  ];\r\n\r\n  columns_mature = [\r\n    {\r\n      title: '#',\r\n      dataIndex: 'number',\r\n      rowKey: 'number',\r\n      width: '20%',\r\n      render: text => <span>{text}</span>,\r\n    },\r\n    {\r\n      title: 'AMATEUR MEN',\r\n      dataIndex: 'number',\r\n      rowKey: 'number',\r\n      width: '20%',\r\n      render: text => <span>{text}</span>,\r\n    },\r\n    {\r\n      title: 'AMATEUR WOMEN',\r\n      dataIndex: 'billFrom',\r\n      rowKey: 'billFrom',\r\n      width: '20%',\r\n      render: text => <span>{text}</span>,\r\n    },\r\n    {\r\n      title: 'JUNIORS',\r\n      dataIndex: 'billTo',\r\n      rowKey: 'billTo',\r\n      width: '31%',\r\n      render: text => <span>{text}</span>,\r\n    },\r\n    // {\r\n    //   title: '',\r\n    //   dataIndex: 'totalCost',\r\n    //   rowKey: 'totalCost',\r\n    //   width: '15%',\r\n    //   render: text => <span>{text}</span>,\r\n    // },\r\n    // {\r\n    //   title: 'Status',\r\n    //   dataIndex: 'orderStatus',\r\n    //   rowKey: 'orderStatus',\r\n    //   width: '13%',\r\n    //   render: (text, orderStatus) => {\r\n    //     let className;\r\n    //     if (text === 'shipped' || text === 'Shipped' || text === 'SHIPPED') {\r\n    //       className = 'shipped';\r\n    //     } else if (\r\n    //       text === 'delivered' ||\r\n    //       text === 'Delivered' ||\r\n    //       text === 'DELIVERED'\r\n    //     ) {\r\n    //       className = 'delivered';\r\n    //     } else if (\r\n    //       text === 'pending' ||\r\n    //       text === 'Pending' ||\r\n    //       text === 'PENDING'\r\n    //     ) {\r\n    //       className = 'pending';\r\n    //     }\r\n    //     return <StatusTag className={className}>{text}</StatusTag>;\r\n    //   },\r\n    // },\r\n    // {\r\n    //   title: '',\r\n    //   dataIndex: 'view',\r\n    //   rowKey: 'view',\r\n    //   width: '10%',\r\n    //   render: (text, invoice) => (\r\n    //     <div className=\"isoInvoiceBtnView\">\r\n    //       <Link to={`${this.props.match.path}/${invoice.id}`}>\r\n    //         <Button color=\"primary\" className=\"invoiceViewBtn\">\r\n    //           View\r\n    //         </Button>\r\n    //       </Link>{' '}\r\n    //       <Button\r\n    //         className=\"invoiceDltBtn\"\r\n    //         // icon=\"delete\"\r\n    //         onClick={() => {\r\n    //           notification('error', '1 invoice deleted');\r\n    //           this.props.deleteInvoice([invoice.key]);\r\n    //           this.setState({ selected: [] });\r\n    //         }}\r\n    //       >\r\n    //         <i className=\"ion-android-delete\" />\r\n    //       </Button>\r\n    //     </div>\r\n    //   ),\r\n    // },\r\n  ];\r\n\r\n  \r\n\r\n  getnewInvoiceId = () => new Date().getTime();\r\n  render() {\r\n\r\n    const dicClicked = (\r\n      <DropdownMenu onClick={this.handleMenuClickToLink}>\r\n        <MenuItem key=\"1\">Yeards</MenuItem>\r\n        <MenuItem key=\"2\">Meters </MenuItem>\r\n        \r\n      </DropdownMenu>\r\n    );\r\n\r\n    const langClicked = (\r\n      <DropdownMenu onClick={this.handleMenuClickToLink}>\r\n        <MenuItem key=\"1\">English</MenuItem>\r\n        <MenuItem key=\"2\">French </MenuItem>\r\n        \r\n      </DropdownMenu>\r\n    );\r\n\r\n    \r\n   const { match, invoices, deleteInvoice } = this.props;\r\n    const { selected } = this.state;\r\n    const rowSelection = {\r\n      hideDefaultSelections: true,\r\n      selectedRowKeys: selected,\r\n      onChange: selected => this.setState({ selected }),\r\n      selections: [\r\n        {\r\n          key: 'all-data',\r\n          text: 'Select All Invoices',\r\n          onSelect: () =>\r\n            this.setState({\r\n              selected: this.props.invoices.map(invoice => invoice.key),\r\n            }),\r\n        },\r\n        {\r\n          key: 'no-data',\r\n          text: 'Unselect all',\r\n          onSelect: () => this.setState({ selected: [] }),\r\n        },\r\n        {\r\n          key: 'delete-selected',\r\n          text: 'Delete selected',\r\n          onSelect: changableRowKeys => {\r\n            if (selected.length > 0) {\r\n              deleteInvoice(selected);\r\n              this.setState({ selected: [] });\r\n              notification('error', `${selected.length} invoices deleted`);\r\n            }\r\n          },\r\n        },\r\n      ],\r\n      onSelection: selected => this.setState({ selected }),\r\n      \r\n    };\r\n    return (\r\n      <LayoutWrapper>\r\n        <PageHeader>\r\n          <IntlMessages id=\"sidebar.invoice\" />\r\n        </PageHeader>\r\n        <Box>\r\n          <div className=\"isoInvoiceTableBtn\">\r\n            \r\n              \r\n                \r\n              <Dropdown overlay={dicClicked}>\r\n              <Button\r\n                style={{\r\n                  margin: rtl === 'rtl' ? '0 8px 0 0' : '0 0 0 8px',\r\n                }}\r\n              >\r\n                Distance measurement  <Icon type=\"down\" />\r\n              </Button>\r\n            </Dropdown>\r\n\r\n            <Dropdown overlay={langClicked}>\r\n              <Button\r\n                style={{\r\n                  margin: rtl === 'rtl' ? '0 8px 0 0' : '0 0 0 8px',\r\n                }}\r\n              >\r\n                Language <Icon type=\"down\" />\r\n              </Button>\r\n            </Dropdown>\r\n            \r\n          </div>\r\n\r\n          <CardWrapper title=\"Invoices\">\r\n            {invoices.length === 0 ? (\r\n              <HelperText text=\"No Invoices\" />\r\n            ) : (\r\n              <div className=\"isoInvoiceTable\">\r\n                <Scrollbars style={{ width: '100%' }}>\r\n                  <TableWrapper\r\n                    rowSelection={rowSelection}\r\n                    dataSource={invoices}\r\n                    columns={this.columns}\r\n                    \r\n                    pagination={false}\r\n                    className=\"invoiceListTable\"\r\n                  />\r\n                       \r\n                  <TableWrapper\r\n                    rowSelection={rowSelection}\r\n                    dataSource={invoices}\r\n                    columns={this.columns_mature}\r\n                    \r\n                    pagination={false}\r\n                    className=\"invoiceListTable\"\r\n                  />\r\n                </Scrollbars>\r\n              </div>\r\n            )}\r\n          </CardWrapper>\r\n        </Box>\r\n      </LayoutWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    ...state.Invoices,\r\n  };\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  invoiceActions\r\n)(Invoices);\r\n"],"sourceRoot":""}