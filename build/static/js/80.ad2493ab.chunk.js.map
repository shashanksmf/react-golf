{"version":3,"sources":["components/card/cardModal.style.js","components/card/modal.style.js","components/card/index.js","containers/Ecommerce/card/index.js"],"names":["ButtonWrapper","styled","div","_templateObject","CardInfoWrapper","_templateObject2","WDInfoFormWrapper","_templateObject3","props","palette","InfoFormWrapper","WithDirection","modal_style_templateObject2","ComponentName","WDModal","isoModal","modal_style_templateObject","borderRadius","Modal","InputField","InputWrapper","Input","_this$props","this","modalType","editView","handleCancel","selectedCard","submitCard","updateCard","columns","title","dataIndex","key","cardConfig","container","formInputsNames","number","expiry","cvc","name","initialValues","classes","valid","invalid","formatting","placeholders","react_default","a","createElement","visible","onCancel","cancelText","onOk","okText","id","className","card_react_form_container_default","uielements_form","map","column","index","placeholder","type","concat","onChange","event","target","value","Component","addCard","cardActions","editCard","deleteCard","restoreCards","Cards","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","addColumn","bind","assertThisInitialized","editColumn","createColumns","state","card","setState","clone","Date","getTime","rowStyle","basicStyle","colStyle","gutter","_this$state","cards","forEach","length","newNumber","i","charAt","createNumber","layoutWrapper","pageHeader","row","style","justify","col","md","sm","xs","box","uielements_button","onClick","simpleView","dataSource","components_card_default","connect","objectSpread"],"mappings":"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","file":"static/js/80.ad2493ab.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\nimport WithDirection from '../../settings/withDirection';\r\n\r\nconst ButtonWrapper = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  margin: 10px 0 30px;\r\n`;\r\n\r\nconst CardInfoWrapper = styled.div`\r\n  margin-bottom: 20px;\r\n\r\n  .jp-card-container {\r\n    margin: 40px auto 60px;\r\n  }\r\n`;\r\n\r\nconst WDInfoFormWrapper = styled.div`\r\n  .isoCardInfoForm {\r\n    display: flex;\r\n    width: 100%;\r\n    flex-wrap: wrap;\r\n\r\n    .isoCardInput {\r\n      margin-bottom: 10px;\r\n\r\n      &.name {\r\n        order: 2;\r\n        margin-bottom: 0;\r\n      }\r\n\r\n      &.expiry,\r\n      &.cvc {\r\n        width: calc(100% / 2 - 5px);\r\n      }\r\n\r\n      &.expiry {\r\n        color: #000000;\r\n        margin: ${props =>\r\n          props['data-rtl'] === 'rtl' ? '0 0 10px 10px' : '0 10px 10px 0'};\r\n      }\r\n\r\n      &::-webkit-input-placeholder {\r\n        text-align: ${props =>\r\n          props['data-rtl'] === 'rtl' ? 'right' : 'left'};\r\n        color: ${palette('grayscale', 0)};\r\n      }\r\n\r\n      &:-moz-placeholder {\r\n        text-align: ${props =>\r\n          props['data-rtl'] === 'rtl' ? 'right' : 'left'};\r\n        color: ${palette('grayscale', 0)};\r\n      }\r\n\r\n      &::-moz-placeholder {\r\n        text-align: ${props =>\r\n          props['data-rtl'] === 'rtl' ? 'right' : 'left'};\r\n        color: ${palette('grayscale', 0)};\r\n      }\r\n      &:-ms-input-placeholder {\r\n        text-align: ${props =>\r\n          props['data-rtl'] === 'rtl' ? 'right' : 'left'};\r\n        color: ${palette('grayscale', 0)};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst InfoFormWrapper = WithDirection(WDInfoFormWrapper);\r\n\r\nexport { ButtonWrapper, CardInfoWrapper, InfoFormWrapper };\r\n","import styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\nimport { borderRadius } from '../../settings/style-util';\r\n\r\nexport default ComponentName => styled(ComponentName)`\r\n  .ant-modal-header {\r\n    padding: 13px 16px;\r\n    background: ${palette('grayscale', 5)};\r\n    color: ${palette('text', 0)};\r\n    border-bottom: 1px solid ${palette('border', 0)};\r\n    ${borderRadius('4px 4px 0 0')};\r\n  }\r\n\r\n  .ant-modal-title {\r\n    margin: 0;\r\n    font-size: 15px;\r\n    line-height: 21px;\r\n    font-weight: 500;\r\n    color: ${palette('text', 0)};\r\n  }\r\n\r\n  .ant-modal-close {\r\n    right: ${props => props['data-rtl'] === 'rtl' ? 'inherit' : '0'};\r\n    left: ${props => props['data-rtl'] === 'rtl' ? '0' : 'inherit'};\r\n  }\r\n\r\n  .ant-modal-body {\r\n    padding: 16px;\r\n    font-size: 13px;\r\n    color: ${palette('text', 3)};\r\n    line-height: 1.5;\r\n  }\r\n\r\n  .ant-modal-footer {\r\n    border-top: 1px solid ${palette('border', 0)};\r\n    padding: 10px 16px 10px 10px;\r\n    text-align: right;\r\n    ${borderRadius('0 0 4px 4px')};\r\n\r\n    .ant-btn-lg {\r\n      padding: 0 35px;\r\n      font-size: 14px;\r\n      height: 42px;\r\n    }\r\n\r\n    button + button {\r\n      margin: ${props =>\r\n  props['data-rtl'] === 'rtl' ? '0 8px 0 0' : '0 0 0 8px'};\r\n    }\r\n  }\r\n\r\n  .ant-confirm {\r\n    .ant-modal-body {\r\n      padding: 30px 35px;\r\n    }\r\n  }\r\n\r\n  .ant-confirm-body {\r\n    .ant-confirm-title {\r\n      color: ${palette('text', 0)};\r\n      font-weight: 700;\r\n      font-size: 15px;\r\n    }\r\n\r\n    .ant-confirm-content {\r\n      margin-left: 42px;\r\n      font-size: 13px;\r\n      color: ${palette('text', 3)};\r\n      margin-top: 8px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ModalContent = styled.div`\r\n  p {\r\n    font-size: 13px;\r\n    color: ${palette('text', 3)};\r\n    line-height: 1.5;\r\n  }\r\n`;\r\n\r\nexport { ModalContent };\r\n","import React, { Component } from 'react';\r\nimport CardReactFormContainer from 'card-react';\r\nimport Form from '../uielements/form';\r\nimport { Input } from 'antd';\r\nimport isoModal from '../feedback/modal';\r\nimport './card.css';\r\nimport { CardInfoWrapper, InfoFormWrapper } from './cardModal.style';\r\nimport { InputWrapper } from '../uielements/styles/input.style';\r\nimport Modals from './modal.style';\r\nimport WithDirection from '../../settings/withDirection';\r\n\r\nconst WDModal = Modals(isoModal);\r\nconst Modal = WithDirection(WDModal);\r\n\r\nconst InputField = InputWrapper(Input);\r\n\r\nexport default class extends Component {\r\n  render() {\r\n    const {\r\n      modalType,\r\n      editView,\r\n      handleCancel,\r\n      selectedCard,\r\n      submitCard,\r\n      updateCard,\r\n    } = this.props;\r\n\r\n    this.columns = [\r\n      {\r\n        title: 'Number',\r\n        dataIndex: 'number',\r\n        key: 'number',\r\n      },\r\n      {\r\n        title: 'Full Name',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n      },\r\n      {\r\n        title: 'Expiry',\r\n        dataIndex: 'expiry',\r\n        key: 'expiry',\r\n      },\r\n      {\r\n        title: 'CVC',\r\n        dataIndex: 'cvc',\r\n        key: 'cvc',\r\n      },\r\n    ];\r\n\r\n    const saveButton = () => {\r\n      submitCard();\r\n    };\r\n    const containerId = 'card-wrapper';\r\n    const cardConfig = {\r\n      container: containerId, // required an object contain the form inputs names. every input must have a unique name prop.\r\n      formInputsNames: {\r\n        number: 'number', // optional — default \"number\"\r\n        expiry: 'expiry', // optional — default \"expiry\"\r\n        cvc: 'cvc', // optional — default \"cvc\"\r\n        name: 'name', // optional - default \"name\"\r\n      },\r\n      initialValues: selectedCard,\r\n      classes: {\r\n        valid: 'valid-input', // optional — default 'jp-card-valid'\r\n        invalid: 'valid-input', // optional — default 'jp-card-invalid'\r\n      },\r\n      formatting: true, // optional - default true\r\n      placeholders: {\r\n        number: '•••• •••• •••• ••••',\r\n        expiry: '••/••',\r\n        cvc: '•••',\r\n        name: 'Full Name',\r\n      },\r\n    };\r\n    return (\r\n      <Modal\r\n        title={modalType === 'edit' ? 'Edit Card' : 'Add Card'}\r\n        visible={editView}\r\n        onCancel={handleCancel}\r\n        cancelText=\"Cancel\"\r\n        onOk={saveButton}\r\n        okText={modalType === 'edit' ? 'Edit Card' : 'Add Card'}\r\n      >\r\n        <CardInfoWrapper id={containerId} className=\"isoCardWrapper\" />\r\n\r\n        <CardReactFormContainer {...cardConfig}>\r\n          <InfoFormWrapper>\r\n            <Form className=\"isoCardInfoForm\">\r\n              {this.columns.map((column, index) => {\r\n                const { key, title } = column;\r\n                return (\r\n                  <InputField\r\n                    placeholder={title}\r\n                    type=\"text\"\r\n                    className={`isoCardInput ${key}`}\r\n                    onChange={event => {\r\n                      selectedCard[key] = event.target.value;\r\n                      updateCard(selectedCard);\r\n                    }}\r\n                    name={key}\r\n                    key={index}\r\n                  />\r\n                );\r\n              })}\r\n            </Form>\r\n          </InfoFormWrapper>\r\n        </CardReactFormContainer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col } from \"antd\";\r\nimport clone from \"clone\";\r\nimport Button from \"../../../components/uielements/button\";\r\nimport PageHeader from \"../../../components/utility/pageHeader\";\r\nimport Box from \"../../../components/utility/box\";\r\nimport LayoutWrapper from \"../../../components/utility/layoutWrapper\";\r\nimport Card from \"../../../components/card\";\r\nimport basicStyle from \"../../../settings/basicStyle\";\r\nimport cardActions from \"../../../redux/card/actions\";\r\nimport { createColumns } from \"./config\";\r\nimport { ButtonWrapper } from \"../../../components/card/cardModal.style\";\r\nimport SimpleTable from \"../../Tables/antTables/tableViews/simpleView\";\r\n\r\nconst { addCard, editCard, deleteCard, restoreCards } = cardActions;\r\nclass Cards extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.addColumn = this.addColumn.bind(this);\r\n    this.editColumn = this.editColumn.bind(this);\r\n    this.handleCancel = this.handleCancel.bind(this);\r\n    this.submitCard = this.submitCard.bind(this);\r\n    this.updateCard = this.updateCard.bind(this);\r\n\r\n    this.columns = createColumns(this.editColumn, this.props.deleteCard);\r\n    this.state = {\r\n      editView: false,\r\n      selectedCard: null,\r\n      modalType: \"\"\r\n    };\r\n  }\r\n  editColumn(card) {\r\n    this.setState({\r\n      editView: true,\r\n      selectedCard: clone(card),\r\n      modalType: \"edit\"\r\n    });\r\n  }\r\n  addColumn() {\r\n    this.setState({\r\n      editView: true,\r\n      selectedCard: {\r\n        id: new Date().getTime(),\r\n        key: new Date().getTime(),\r\n        number: \"\",\r\n        name: \"\",\r\n        expiry: \"\",\r\n        cvc: \"\"\r\n      },\r\n      modalType: \"add\"\r\n    });\r\n  }\r\n  handleCancel() {\r\n    this.setState({\r\n      editView: false,\r\n      selectedCard: null\r\n    });\r\n  }\r\n  submitCard(card) {\r\n    if (this.state.modalType === \"edit\") {\r\n      this.props.editCard(this.state.selectedCard);\r\n    } else {\r\n      this.props.addCard(this.state.selectedCard);\r\n    }\r\n    this.setState({\r\n      editView: false,\r\n      selectedCard: null\r\n    });\r\n  }\r\n  updateCard(selectedCard) {\r\n    this.setState({ selectedCard });\r\n  }\r\n  render() {\r\n    const { rowStyle, colStyle, gutter } = basicStyle;\r\n    const { editView, selectedCard, modalType } = this.state;\r\n    const cards = clone(this.props.cards);\r\n    const createNumber = number => {\r\n      const length = number.length;\r\n      let newNumber = \"\";\r\n      for (let i = 0; i < length - 4; i++) {\r\n        newNumber = `*${newNumber}`;\r\n      }\r\n      for (let i = length - 4; i < length; i++) {\r\n        newNumber = `${newNumber}${number.charAt(i)}`;\r\n      }\r\n      return newNumber;\r\n    };\r\n    cards.forEach((card, index) => {\r\n      cards[index].number = createNumber(card.number);\r\n    });\r\n    return (\r\n      <LayoutWrapper>\r\n        <PageHeader>Cards</PageHeader>\r\n        <Row style={rowStyle} gutter={gutter} justify=\"start\">\r\n          <Col md={24} sm={24} xs={24} style={colStyle}>\r\n            <Box>\r\n              <ButtonWrapper className=\"isoButtonWrapper\">\r\n                <Button type=\"primary\" className=\"\" onClick={this.addColumn}>\r\n                  Add New Card\r\n                </Button>\r\n              </ButtonWrapper>\r\n\r\n              {/* <div className=\"isoSimpleTable\"> */}\r\n              <SimpleTable columns={this.columns} dataSource={cards} />\r\n              {/* </div> */}\r\n              {selectedCard ? (\r\n                <Card\r\n                  editView={editView}\r\n                  modalType={modalType}\r\n                  selectedCard={selectedCard}\r\n                  handleCancel={this.handleCancel}\r\n                  submitCard={this.submitCard}\r\n                  updateCard={this.updateCard}\r\n                />\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </Box>\r\n          </Col>\r\n        </Row>\r\n      </LayoutWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    ...state.Cards\r\n  };\r\n}\r\nexport default connect(mapStateToProps, {\r\n  addCard,\r\n  editCard,\r\n  deleteCard,\r\n  restoreCards\r\n})(Cards);\r\n"],"sourceRoot":""}