{"version":3,"sources":["components/uielements/styles/checkbox.style.js","components/uielements/checkbox.js","containers/Forms/FormsWithValidation/FormValidation.js","containers/Forms/FormsWithValidation/index.js"],"names":["AntCheckbox","ComponentName","styled","_templateObject","palette","__webpack_require__","d","__webpack_exports__","CheckboxGroup","checkbox","Checkbox","Group","FormItem","Form","Item","FormWIthSubmissionButton","state","confirmDirty","handleSubmit","e","preventDefault","_this","props","form","validateFieldsAndScroll","err","values","Notification","JSON","stringify","handleConfirmBlur","value","target","setState","checkPassword","rule","callback","getFieldValue","checkConfirm","validateFields","force","getFieldDecorator","this","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","react_default","a","createElement","uielements_form","onSubmit","Object","assign","label","hasFeedback","rules","type","message","required","es_input","name","id","validator","onBlur","style","marginBottom","valuePropName","uielements_checkbox","href","uielements_button","htmlType","Component","WrappedFormWIthSubmissionButton","create","layoutWrapper","pageHeader","intlMessages","box","FormsWithValidation_FormItem","validateStatus","help","input","placeholder","FormValidation"],"mappings":"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","file":"static/js/41.258b24f3.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\n\r\nconst AntCheckbox = ComponentName => styled(ComponentName)`\r\n  &.ant-checkbox-wrapper {\r\n    font-size: 13px;\r\n    color: ${palette('text', 1)};\r\n    vertical-align: middle;\r\n\r\n    .ant-checkbox {\r\n      top: inherit;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AntCheckbox;\r\n","import { Checkbox } from 'antd';\r\nimport AntCheckbox from './styles/checkbox.style';\r\n\r\nconst checkbox = AntCheckbox(Checkbox);\r\nconst CheckboxGroup = Checkbox.Group;\r\n\r\nexport default checkbox;\r\nexport { CheckboxGroup };\r\n","import React, { Component } from 'react';\r\nimport { Input } from 'antd';\r\nimport Form from '../../../components/uielements/form';\r\nimport Checkbox from '../../../components/uielements/checkbox';\r\nimport Button from '../../../components/uielements/button';\r\nimport Notification from '../../../components/notification';\r\nconst FormItem = Form.Item;\r\n\r\nclass FormWIthSubmissionButton extends Component {\r\n  state = {\r\n    confirmDirty: false,\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        Notification(\r\n          'success',\r\n          'Received values of form',\r\n          JSON.stringify(values)\r\n        );\r\n      }\r\n    });\r\n  };\r\n  handleConfirmBlur = e => {\r\n    const value = e.target.value;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  };\r\n  checkPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && value !== form.getFieldValue('password')) {\r\n      callback('Two passwords that you enter is inconsistent!');\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n  checkConfirm = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && this.state.confirmDirty) {\r\n      form.validateFields(['confirm'], { force: true });\r\n    }\r\n    callback();\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 6 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 14 },\r\n      },\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0,\r\n        },\r\n        sm: {\r\n          span: 14,\r\n          offset: 6,\r\n        },\r\n      },\r\n    };\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <FormItem {...formItemLayout} label=\"E-mail\" hasFeedback>\r\n          {getFieldDecorator('email', {\r\n            rules: [\r\n              {\r\n                type: 'email',\r\n                message: 'The input is not valid E-mail!',\r\n              },\r\n              {\r\n                required: true,\r\n                message: 'Please input your E-mail!',\r\n              },\r\n            ],\r\n          })(<Input name=\"email\" id=\"email\" />)}\r\n        </FormItem>\r\n        <FormItem {...formItemLayout} label=\"Password\" hasFeedback>\r\n          {getFieldDecorator('password', {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: 'Please input your password!',\r\n              },\r\n              {\r\n                validator: this.checkConfirm,\r\n              },\r\n            ],\r\n          })(<Input type=\"password\" />)}\r\n        </FormItem>\r\n        <FormItem {...formItemLayout} label=\"Confirm Password\" hasFeedback>\r\n          {getFieldDecorator('confirm', {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: 'Please confirm your password!',\r\n              },\r\n              {\r\n                validator: this.checkPassword,\r\n              },\r\n            ],\r\n          })(<Input type=\"password\" onBlur={this.handleConfirmBlur} />)}\r\n        </FormItem>\r\n        <FormItem {...tailFormItemLayout} style={{ marginBottom: 8 }}>\r\n          {getFieldDecorator('agreement', {\r\n            valuePropName: 'checked',\r\n            rules: [\r\n              {\r\n                message: 'Please input your E-mail!',\r\n                required: true,\r\n              },\r\n            ],\r\n          })(\r\n            <Checkbox>\r\n              I have read the <a href=\"# \">agreement</a>\r\n            </Checkbox>\r\n          )}\r\n        </FormItem>\r\n        <FormItem {...tailFormItemLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Register\r\n          </Button>\r\n        </FormItem>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedFormWIthSubmissionButton = Form.create()(FormWIthSubmissionButton);\r\nexport default WrappedFormWIthSubmissionButton;\r\n","import React, { Component } from 'react';\r\nimport Form from '../../../components/uielements/form';\r\nimport Input from '../../../components/uielements/input';\r\nimport PageHeader from '../../../components/utility/pageHeader';\r\nimport Box from '../../../components/utility/box';\r\nimport LayoutWrapper from '../../../components/utility/layoutWrapper.js';\r\nimport IntlMessages from '../../../components/utility/intlMessages';\r\nimport FormValidation from './FormValidation';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 5 }\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 12 }\r\n  }\r\n};\r\n\r\nexport default class extends Component {\r\n  render() {\r\n    return (\r\n      <LayoutWrapper>\r\n        <PageHeader>\r\n          {<IntlMessages id=\"forms.formsWithValidation.header\" />}\r\n        </PageHeader>\r\n        <Box>\r\n          <Form>\r\n            <FormItem\r\n              {...formItemLayout}\r\n              label={<IntlMessages id=\"forms.formsWithValidation.failLabel\" />}\r\n              validateStatus=\"error\"\r\n              help={<IntlMessages id=\"forms.formsWithValidation.failHelp\" />}\r\n            >\r\n              <Input placeholder=\"unavailable choice\" id=\"error\" />\r\n            </FormItem>\r\n\r\n            <FormItem\r\n              {...formItemLayout}\r\n              label={\r\n                <IntlMessages id=\"forms.formsWithValidation.warningLabel\" />\r\n              }\r\n              validateStatus=\"warning\"\r\n            >\r\n              <Input placeholder=\"Warning\" id=\"warning\" />\r\n            </FormItem>\r\n\r\n            <FormItem\r\n              {...formItemLayout}\r\n              label={\r\n                <IntlMessages id=\"forms.formsWithValidation.ValidatingLabel\" />\r\n              }\r\n              hasFeedback\r\n              validateStatus=\"validating\"\r\n              help={\r\n                <IntlMessages id=\"forms.formsWithValidation.ValidatingHelp\" />\r\n              }\r\n            >\r\n              <Input\r\n                placeholder=\"I'm the content is being validated\"\r\n                id=\"validating\"\r\n              />\r\n            </FormItem>\r\n\r\n            <FormItem\r\n              {...formItemLayout}\r\n              label={\r\n                <IntlMessages id=\"forms.formsWithValidation.SuccessLabel\" />\r\n              }\r\n              hasFeedback\r\n              validateStatus=\"success\"\r\n            >\r\n              <Input placeholder=\"I'm the content\" id=\"success\" />\r\n            </FormItem>\r\n\r\n            <FormItem\r\n              {...formItemLayout}\r\n              label={\r\n                <IntlMessages id=\"forms.formsWithValidation.WarninghasFeedbackLabel\" />\r\n              }\r\n              hasFeedback\r\n              validateStatus=\"warning\"\r\n            >\r\n              <Input placeholder=\"Warning\" id=\"warning1\" />\r\n            </FormItem>\r\n\r\n            <FormItem\r\n              {...formItemLayout}\r\n              label={\r\n                <IntlMessages id=\"forms.formsWithValidation.FailhasFeedbackLabel\" />\r\n              }\r\n              hasFeedback\r\n              validateStatus=\"error\"\r\n              help={\r\n                <IntlMessages id=\"forms.formsWithValidation.FailhasFeedbackHelp\" />\r\n              }\r\n            >\r\n              <Input placeholder=\"unavailable choice\" id=\"error1\" />\r\n            </FormItem>\r\n          </Form>\r\n        </Box>\r\n        <PageHeader>Form Submit Validation</PageHeader>\r\n        <Box>\r\n          <FormValidation />\r\n        </Box>\r\n      </LayoutWrapper>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}