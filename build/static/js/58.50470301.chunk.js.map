{"version":3,"sources":["containers/Feedback/Notification/notification.style.js","containers/Feedback/Notification/index.js"],"names":["NotificationContent","styled","div","_templateObject","openNotification","args","message","description","react_default","a","createElement","notification_style","notifications","open","customDurationNotification","duration","openNotificationWithIcon","type","openNotificationCustomIcon","icon","style","color","close","openNotificationWithConfirm","key","concat","Date","now","btn","uielements_button","size","onClick","onClose","rowStyle","basicStyle","colStyle","gutter","marginStyle","marginRight","layoutWrapper","pageHeader","intlMessages","id","row","justify","col","md","sm","xs","box","title","subtitle","contentHolder","Component"],"mappings":"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","file":"static/js/58.50470301.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst NotificationContent = styled.div`\n  display: inline-block;\n  font-size: 13px;\n`;\n\nexport default NotificationContent;\n","import React, { Component } from 'react';\nimport { Row, Col, Icon } from 'antd';\nimport notifications from '../../../components/feedback/notification';\nimport Button from '../../../components/uielements/button';\nimport PageHeader from '../../../components/utility/pageHeader';\nimport Box from '../../../components/utility/box';\nimport LayoutWrapper from '../../../components/utility/layoutWrapper.js';\nimport ContentHolder from '../../../components/utility/contentHolder';\nimport basicStyle from '../../../settings/basicStyle';\nimport IntlMessages from '../../../components/utility/intlMessages';\nimport NotificationContent from './notification.style';\n\nconst openNotification = () => {\n  const args = {\n    message: 'Notification Title',\n    description: (\n      <NotificationContent>\n        I will close after 2 seconds automatically. I will be close\n        automatically. I will never close automatically.\n      </NotificationContent>\n    )\n  };\n  notifications.open(args);\n};\n\nconst customDurationNotification = () => {\n  const args = {\n    message: 'Notification Title',\n    description:\n      'I will never close automatically. Click the close button. I will be close automatically. I will never close automatically.',\n    duration: 0\n  };\n  notifications.open(args);\n};\n\nconst openNotificationWithIcon = type => {\n  notifications[type]({\n    message: 'Notification Title',\n    description:\n      'This is the content of the notification. This is the content of the notification. This is the content of the notification.'\n  });\n};\n\nconst openNotificationCustomIcon = () => {\n  notifications.open({\n    message: 'Notification Title',\n    description:\n      'This is the content of the notification. This is the content of the notification. This is the content of the notification.',\n    icon: <Icon type=\"smile-circle\" style={{ color: '#4482FF' }} />\n  });\n};\n\nconst close = () => {};\n\nconst openNotificationWithConfirm = () => {\n  const key = `open${Date.now()}`;\n  const btnClick = function() {\n    notifications.close(key);\n  };\n  const btn = (\n    <Button type=\"primary\" size=\"small\" onClick={btnClick}>\n      Confirm\n    </Button>\n  );\n  notifications.open({\n    message: 'Notification Title',\n    description:\n      'A function will be be called after the notification is closed (automatically after the \"duration\" time of manually).',\n    btn,\n    key,\n    onClose: close\n  });\n};\n\nexport default class extends Component {\n  render() {\n    const { rowStyle, colStyle, gutter } = basicStyle;\n    const marginStyle = { marginRight: '5px' };\n\n    return (\n      <LayoutWrapper>\n        <PageHeader>\n          {<IntlMessages id=\"feedback.alert.notification\" />}\n        </PageHeader>\n\n        <Row style={rowStyle} gutter={gutter} justify=\"start\">\n          <Col md={12} sm={12} xs={24} style={colStyle}>\n            <Box\n              title={\n                <IntlMessages id=\"feedback.alert.notificationBasicTitle\" />\n              }\n              subtitle={\n                <IntlMessages id=\"feedback.alert.notificationBasicSubTitle\" />\n              }\n            >\n              <ContentHolder>\n                <Button type=\"primary\" onClick={openNotification}>\n                  {\n                    <IntlMessages id=\"feedback.alert.notificationBasicDescription\" />\n                  }\n                </Button>\n              </ContentHolder>\n            </Box>\n          </Col>\n          <Col md={12} sm={12} xs={24} style={colStyle}>\n            <Box\n              title={\n                <IntlMessages id=\"feedback.alert.notificationDurationTitle\" />\n              }\n              subtitle={\n                <IntlMessages id=\"feedback.alert.notificationDurationSubTitle\" />\n              }\n            >\n              <ContentHolder>\n                <Button type=\"primary\" onClick={customDurationNotification}>\n                  {\n                    <IntlMessages id=\"feedback.alert.notificationBasicDescription\" />\n                  }\n                </Button>\n              </ContentHolder>\n            </Box>\n          </Col>\n        </Row>\n        <Row style={rowStyle} gutter={gutter} justify=\"start\">\n          <Col md={12} sm={12} xs={24} style={colStyle}>\n            <Box\n              title={\n                <IntlMessages id=\"feedback.alert.notificationwithIconTitle\" />\n              }\n              subtitle={\n                <IntlMessages id=\"feedback.alert.notificationwithIconSubTitle\" />\n              }\n            >\n              <ContentHolder>\n                <Button\n                  onClick={() => openNotificationWithIcon('success')}\n                  style={marginStyle}\n                >\n                  {<IntlMessages id=\"feedback.alert.successTitle\" />}\n                </Button>\n                <Button\n                  onClick={() => openNotificationWithIcon('info')}\n                  style={marginStyle}\n                >\n                  {<IntlMessages id=\"feedback.alert.infoTitle\" />}\n                </Button>\n                <Button\n                  onClick={() => openNotificationWithIcon('warning')}\n                  style={marginStyle}\n                >\n                  {<IntlMessages id=\"feedback.alert.warningTitle\" />}\n                </Button>\n                <Button onClick={() => openNotificationWithIcon('error')}>\n                  {<IntlMessages id=\"feedback.alert.errorTitle\" />}\n                </Button>\n              </ContentHolder>\n            </Box>\n          </Col>\n\n          <Col md={12} sm={12} xs={24} style={colStyle}>\n            <Box\n              title={\n                <IntlMessages id=\"feedback.alert.notificationwithCustomIconTitle\" />\n              }\n              subtitle={\n                <IntlMessages id=\"feedback.alert.notificationwithCustomIconSubTitle\" />\n              }\n            >\n              <ContentHolder>\n                <Button type=\"primary\" onClick={openNotificationCustomIcon}>\n                  {\n                    <IntlMessages id=\"feedback.alert.notificationBasicDescription\" />\n                  }\n                </Button>\n              </ContentHolder>\n            </Box>\n          </Col>\n        </Row>\n        <Row style={rowStyle} gutter={gutter} justify=\"start\">\n          <Col md={12} sm={12} xs={24} style={colStyle}>\n            <Box\n              title={\n                <IntlMessages id=\"feedback.alert.notificationwithCustomButtonTitle\" />\n              }\n              subtitle={\n                <IntlMessages id=\"feedback.alert.notificationwithCustomButtonSubTitle\" />\n              }\n            >\n              <ContentHolder>\n                <Button type=\"primary\" onClick={openNotificationWithConfirm}>\n                  {\n                    <IntlMessages id=\"feedback.alert.notificationBasicDescription\" />\n                  }\n                </Button>\n              </ContentHolder>\n            </Box>\n          </Col>\n        </Row>\n      </LayoutWrapper>\n    );\n  }\n}\n"],"sourceRoot":""}