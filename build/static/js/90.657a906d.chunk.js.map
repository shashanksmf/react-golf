{"version":3,"sources":["components/uielements/styles/datePicker.style.js","components/uielements/datePicker.js","components/utility/loader.style.js","components/utility/loader.js","components/invoice/tableStyle.js","components/invoice/invoiceTable.js","components/invoice/orderStatus.js","containers/Invoice/singleInvoice.style.js","containers/Invoice/editInvoice.js","components/invoice/address.js","containers/Invoice/viewInvoice.js","containers/Invoice/singleInvoice.js"],"names":["AntDatePicker","ComponentName","styled","_templateObject","palette","borderRadius","transition","__webpack_require__","d","__webpack_exports__","DateRangepicker","Datepicker","DatePicker","RangePicker","LoaderComponent","div","Loader","react_default","a","createElement","loader_style","className","viewBox","cx","cy","r","fill","strokeWidth","Table","Tables","props","viewColumns","title","dataIndex","width","rowKey","ViewTable","_ref","invoiceList","tableStyle","columns","dataSource","pagination","EditTable","_ref2","editableInvoice","editInvoice","updateValues","editColumns","render","text","singleInvoice","key","input","placeholder","value","itemName","onChange","event","target","costs","stringToPosetiveInt","qty","length","uielements_button","onClick","newInvoiceList","forEach","invoice","i","push","orderStatus","orderStatusOptions","dropdown","overlay","val","map","option","index","InvoicePageWrapper","singleInvoice_style_templateObject","WithDirection","subTotal","item","price","vatPrice","Math","floor","vatRate","totalCost","checkInvoice","emptyKeys","emptyKeysErrors","concat","onSave","_this$props","_this","isNewInvoice","updateInvoice","error","notification","successMessage","_this$props2","this","redirectPath","toggleView","layoutWrapper","box","singleInvoice_style","Link","to","color","type","number","datePicker","allowClear","moment","Date","orderDate","toDate","getTime","format","animateYearScrolling","billFrom","billFromAddress","rows","billTo","billToAddress","invoiceTable_EditTable","currency","addonAfter","Component","address","companyName","companyAddress","style","whiteSpace","currentInvoice","invoiceTable_ViewTable","SingleInvoice","initialInvoices","initData","toggleCreatedInvoice","nextProps","match","selectCurrentInvoice","invoiceId","params","id","enableEditView","url","replace","loader","editInvoice_default","Object","assign","viewInvoice_default","connect","state","objectSpread","Invoices","invoiceActions"],"mappings":"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","file":"static/js/90.657a906d.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\nimport { transition, borderRadius } from '../../../settings/style-util';\r\n\r\nconst AntDatePicker = ComponentName => styled(ComponentName)`\r\n  .ant-input {\r\n    padding: 4px 10px;\r\n    width: 100%;\r\n    height: 35px;\r\n    cursor: text;\r\n    font-size: 13px;\r\n    line-height: 1.5;\r\n    color: ${palette('text', 1)};\r\n    background-color: #fff;\r\n    background-image: none;\r\n    border: 1px solid ${palette('border', 0)};\r\n    ${borderRadius('4px')};\r\n    ${transition()};\r\n\r\n    &:focus {\r\n      border-color: ${palette('primary', 0)};\r\n    }\r\n\r\n    &::-webkit-input-placeholder {\r\n      color: ${palette('grayscale', 0)};\r\n    }\r\n\r\n    &:-moz-placeholder {\r\n      color: ${palette('grayscale', 0)};\r\n    }\r\n\r\n    &::-moz-placeholder {\r\n      color: ${palette('grayscale', 0)};\r\n    }\r\n    &:-ms-input-placeholder {\r\n      color: ${palette('grayscale', 0)};\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AntDatePicker;\r\n","import { DatePicker } from 'antd';\r\nimport AntDatePicker from './styles/datePicker.style';\r\n\r\nconst Datepicker = AntDatePicker(DatePicker);\r\nconst DateRangepicker = AntDatePicker(DatePicker.RangePicker);\r\n\r\nexport default Datepicker;\r\nexport { DateRangepicker };\r\n","import styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\n\r\nconst LoaderComponent = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: absolute;\r\n  z-index: 10000000000;\r\n  top: 0;\r\n  right: 0;\r\n\r\n  @media only screen and (min-width: 768px) and (max-width: 1220px) {\r\n    width: calc(100% - 80px);\r\n  }\r\n\r\n  @media only screen and (max-width: 767px) {\r\n    width: 100%;\r\n  }\r\n\r\n  .isoContentLoader {\r\n    width: 50px;\r\n    height: 50px;\r\n    animation: svgSpinner 1.4s linear infinite;\r\n  }\r\n\r\n  .isoContentLoaderCircle {\r\n    animation: svgSpinnerCircle 1.4s ease-in-out infinite;\r\n    stroke-dasharray: 80px, 200px;\r\n    stroke-dashoffset: 0px;\r\n    stroke: ${palette('primary', 0)};\r\n    stroke-linecap: round;\r\n  }\r\n\r\n  @keyframes svgSpinner {\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n  @keyframes svgSpinnerCircle {\r\n    0% {\r\n      stroke-dasharray: 1px, 200px;\r\n      stroke-dashoffset: 0px;\r\n    }\r\n    50% {\r\n      stroke-dasharray: 100px, 200px;\r\n      stroke-dashoffset: -15px;\r\n    }\r\n    100% {\r\n      stroke-dasharray: 100px, 200px;\r\n      stroke-dashoffset: -120px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default LoaderComponent;\r\n","import React from \"react\";\r\nimport LoaderComponent from \"./loader.style\";\r\n\r\nexport default Loader => (\r\n  <LoaderComponent>\r\n    <svg className=\"isoContentLoader\" viewBox=\"0 0 50 50\">\r\n      <circle\r\n        className=\"isoContentLoaderCircle\"\r\n        cx=\"25\"\r\n        cy=\"25\"\r\n        r=\"20\"\r\n        fill=\"none\"\r\n        strokeWidth=\"3.6\"\r\n      />\r\n    </svg>\r\n  </LoaderComponent>\r\n);\r\n","import styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\nimport Tables from '../uielements/table';\r\nimport { transition } from '../../settings/style-util.js';\r\n\r\nconst Table = styled(Tables)`\r\n  overflow: hidden;\r\n  overflow-x: auto;\r\n  background-color: #ffffff;\r\n\r\n  .ant-table-thead > tr > th {\r\n    color: ${palette('secondary', 2)};\r\n    font-size: 13px;\r\n    background-color: ${palette('secondary', 1)};\r\n    border-bottom: 0;\r\n\r\n    &.ant-table-column-sort {\r\n      background: ${palette('secondary', 1)};\r\n      margin: ${props =>\r\n        props['data-rtl'] === 'rtl' ? '0 4px 0 0' : '0 0 0 4px'};\r\n    }\r\n  }\r\n\r\n  .ant-table-thead > tr > th,\r\n  .ant-table-tbody > tr > td {\r\n    padding: 16px 15px;\r\n    white-space: nowrap;\r\n    text-align: ${props => (props['data-rtl'] === 'rtl' ? 'right' : 'left')};\r\n\r\n    p {\r\n      margin-bottom: 0;\r\n    }\r\n\r\n    &:first-child {\r\n      text-align: center;\r\n    }\r\n  }\r\n\r\n  .ant-table-tbody > tr > td {\r\n    font-size: 12px;\r\n    color: ${palette('text', 3)};\r\n    border-bottom: 1px solid ${palette('border', 0)};\r\n\r\n    a {\r\n      color: ${palette('primary', 0)};\r\n      ${transition()};\r\n\r\n      &:hover {\r\n        color: ${palette('primary', 4)};\r\n      }\r\n    }\r\n  }\r\n\r\n  .ant-table-thead > tr.ant-table-row-hover > td,\r\n  .ant-table-tbody > tr.ant-table-row-hover > td,\r\n  .ant-table-thead > tr:hover > td,\r\n  .ant-table-tbody > tr:hover > td {\r\n    background-color: transparent;\r\n  }\r\n`;\r\nexport default Table;\r\n","import React from 'react';\r\nimport Input from '../uielements/input';\r\nimport Button from '../uielements/button';\r\nimport { stringToPosetiveInt } from '../../helpers/utility';\r\nimport Table from './tableStyle';\r\n\r\nconst viewColumns = [\r\n  {\r\n    title: '#',\r\n    dataIndex: 'key',\r\n    width: '10%',\r\n    rowKey: 'key',\r\n  },\r\n  {\r\n    title: 'Item Name',\r\n    dataIndex: 'itemName',\r\n    width: '40%',\r\n    rowKey: 'itemName',\r\n  },\r\n  {\r\n    title: 'Unit Costs',\r\n    dataIndex: 'costs',\r\n    width: '15%',\r\n    rowKey: 'costs',\r\n  },\r\n  {\r\n    title: 'Unit',\r\n    dataIndex: 'qty',\r\n    width: '15%',\r\n    rowKey: 'qty',\r\n  },\r\n  {\r\n    title: 'Price',\r\n    dataIndex: 'price',\r\n    width: '20%',\r\n    rowKey: 'price',\r\n  },\r\n];\r\n\r\nconst ViewTable = ({ invoiceList }) => (\r\n  <Table columns={viewColumns} dataSource={invoiceList} pagination={false} />\r\n);\r\n\r\nconst EditTable = ({ editableInvoice, editInvoice, updateValues }) => {\r\n  const { invoiceList } = editableInvoice;\r\n  const editColumns = [\r\n    {\r\n      title: '#',\r\n      dataIndex: 'key',\r\n      rowKey: 'key',\r\n      width: '10%',\r\n      render: (text, singleInvoice) => <span>{singleInvoice.key}</span>,\r\n    },\r\n    {\r\n      title: 'Item Name',\r\n      dataIndex: 'itemName',\r\n      rowKey: 'itemName',\r\n      width: '40%',\r\n      render: (text, singleInvoice) => (\r\n        <Input\r\n          placeholder=\"Item Name\"\r\n          value={singleInvoice.itemName}\r\n          onChange={event => {\r\n            editableInvoice.invoiceList[singleInvoice.key - 1].itemName =\r\n              event.target.value;\r\n            editInvoice(editableInvoice);\r\n          }}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: 'Unit Costs',\r\n      dataIndex: 'costs',\r\n      rowKey: 'costs',\r\n      width: '20%',\r\n      render: (text, singleInvoice) => (\r\n        <Input\r\n          placeholder=\"Unit Cost\"\r\n          value={singleInvoice.costs}\r\n          onChange={event => {\r\n            editableInvoice.invoiceList[\r\n              singleInvoice.key - 1\r\n            ].costs = stringToPosetiveInt(\r\n              event.target.value,\r\n              singleInvoice.costs\r\n            );\r\n            editInvoice(updateValues(editableInvoice));\r\n          }}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: 'Unit',\r\n      dataIndex: 'qty',\r\n      rowKey: 'qty',\r\n      width: '10%',\r\n      render: (text, singleInvoice) => (\r\n        <Input\r\n          placeholder=\"Units\"\r\n          value={singleInvoice.qty}\r\n          onChange={event => {\r\n            editableInvoice.invoiceList[\r\n              singleInvoice.key - 1\r\n            ].qty = stringToPosetiveInt(event.target.value, singleInvoice.qty);\r\n            editInvoice(updateValues(editableInvoice));\r\n          }}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: 'Price',\r\n      dataIndex: 'price',\r\n      rowKey: 'price',\r\n      width: '10%',\r\n    },\r\n    {\r\n      title: '',\r\n      dataIndex: 'delete',\r\n      rowKey: 'delete',\r\n      width: '10%',\r\n      render: (text, singleInvoice) =>\r\n        invoiceList.length === 1 ? (\r\n          ''\r\n        ) : (\r\n          <Button\r\n            onClick={() => {\r\n              const newInvoiceList = [];\r\n              invoiceList.forEach((invoice, i) => {\r\n                if (i !== singleInvoice.key - 1) {\r\n                  newInvoiceList.push(invoice);\r\n                }\r\n              });\r\n              editableInvoice.invoiceList = newInvoiceList;\r\n              editInvoice(updateValues(editableInvoice));\r\n            }}\r\n          >\r\n            Delete\r\n          </Button>\r\n        ),\r\n    },\r\n  ];\r\n  return (\r\n    <Table columns={editColumns} dataSource={invoiceList} pagination={false} />\r\n  );\r\n};\r\nexport { ViewTable, EditTable };\r\n","import React from 'react';\r\nimport {\r\n  DropdownButtons,\r\n  DropdownMenu,\r\n  MenuItem\r\n} from '../uielements/dropdown';\r\n\r\nexport default ({ value, onChange, orderStatusOptions }) => (\r\n  <DropdownButtons\r\n    overlay={\r\n      <DropdownMenu onClick={val => onChange(orderStatusOptions[val.key])}>\r\n        {orderStatusOptions.map((option, index) => (\r\n          <MenuItem key={index}>{option}</MenuItem>\r\n        ))}\r\n      </DropdownMenu>\r\n    }\r\n  >\r\n    {value}\r\n  </DropdownButtons>\r\n);\r\n","import styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\nimport WithDirection from '../../settings/withDirection';\r\n\r\nconst InvoicePageWrapper = styled.div`\r\n  .PageHeader {\r\n    width: 100%;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -webkit-flex-flow: row wrap;\r\n    -ms-flex-flow: row wrap;\r\n    flex-flow: row wrap;\r\n    -webkit-align-items: flex-end;\r\n    -webkit-box-align: flex-end;\r\n    -ms-flex-align: flex-end;\r\n    align-items: flex-end;\r\n    -webkit-box-pack: justify;\r\n    -webkit-justify-content: flex-end;\r\n    -ms-flex-pack: justify;\r\n    justify-content: flex-end;\r\n    margin-bottom: 30px;\r\n\r\n    a {\r\n      text-decoration: none;\r\n    }\r\n    .isoGoInvoBtn {\r\n      margin-right: 15px;\r\n    }\r\n    .isoInvoPrint {\r\n      background: ${palette('blue', 14)};\r\n      margin: ${props =>\r\n        props['data-rtl'] === 'rtl' ? '0 15px 0 0' : '0 0 0 15px'};\r\n      @media (max-width: 500px) {\r\n        margin-top: 15px;\r\n      }\r\n\r\n      @media (max-width: 485px) {\r\n        margin: 0;\r\n        margin-top: 15px;\r\n      }\r\n    }\r\n    .saveBtn {\r\n      background: ${palette('blue', 14)};\r\n      margin: ${props =>\r\n        props['data-rtl'] === 'rtl' ? '0 15px 0 0' : '0 0 0 15px'};\r\n    }\r\n  }\r\n\r\n  .PageContent {\r\n    .OrderInfo {\r\n      width: 100%;\r\n      display: -webkit-box;\r\n      display: -webkit-flex;\r\n      display: -ms-flexbox;\r\n      display: flex;\r\n      -webkit-flex-flow: row wrap;\r\n      -ms-flex-flow: row wrap;\r\n      flex-flow: row wrap;\r\n      -webkit-align-items: baseline;\r\n      -webkit-box-align: baseline;\r\n      -ms-flex-align: baseline;\r\n      align-items: baseline;\r\n      -webkit-box-pack: justify;\r\n      -webkit-justify-content: space-between;\r\n      -ms-flex-pack: justify;\r\n      justify-content: space-between;\r\n      padding-bottom: 30px;\r\n      border-bottom: 1px dashed ${palette('grayscale', 2)};\r\n\r\n      @media (max-width: 560px) {\r\n        flex-direction: column;\r\n      }\r\n\r\n      .Title {\r\n        font-size: 16px;\r\n        font-weight: 500;\r\n        color: ${palette('grey', 8)};\r\n        margin: 0 0 20px;\r\n        line-height: 1;\r\n      }\r\n\r\n      span.InvoiceNumber {\r\n        font-size: 16px;\r\n        font-weight: 400;\r\n        color: ${palette('blue', 11)};\r\n        margin: 0;\r\n      }\r\n\r\n      .RightSideContent {\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        @media (max-width: 769px) {\r\n          align-items: flex-start;\r\n        }\r\n\r\n        @media (max-width: 560px) {\r\n          margin-top: 30px;\r\n        }\r\n\r\n        p {\r\n          font-size: 14px;\r\n          color: ${palette('grey', 8)};\r\n          margin: 0 0 15px;\r\n          font-weight: 500;\r\n\r\n          span.orderStatus {\r\n            margin-left: ${props =>\r\n              props['data-rtl'] === 'rtl' ? '0 8px 0 0' : '0 0 0 8px'};\r\n            font-weight: 400;\r\n          }\r\n          span.orderDate {\r\n            font-weight: 400;\r\n            margin-left: ${props =>\r\n              props['data-rtl'] === 'rtl' ? '0 8px 0 0' : '0 0 0 8px'};\r\n          }\r\n\r\n          &:last-child {\r\n            margin: 0;\r\n          }\r\n          .orderStatusSpan {\r\n            font-size: 14px;\r\n            color: ${palette('grey', 8)};\r\n            margin: 0 0 15px;\r\n            font-weight: 500;\r\n          }\r\n          .orderDateSpan {\r\n            font-size: 14px;\r\n            color: ${palette('grey', 8)};\r\n            margin: 0 0 15px;\r\n            margin-left: ${props =>\r\n              props['data-rtl'] === 'rtl' ? '0 13px 0 0' : '0 0 0 13px'};\r\n            font-weight: 500;\r\n\r\n            @media (max-width: 420px) {\r\n              margin: 0;\r\n            }\r\n          }\r\n        }\r\n        .RightSideStatus {\r\n          display: flex;\r\n          flex-direction: row;\r\n          align-items: center;\r\n          font-size: 14px;\r\n          color: ${palette('grey', 8)};\r\n\r\n          @media (max-width: 560px) {\r\n            margin-bottom: 10px;\r\n          }\r\n\r\n          .RightSideStatusSpan {\r\n            margin: ${props =>\r\n              props['data-rtl'] === 'rtl' ? '0 -10px 0 7px' : '0 7px 0 -10px'};\r\n\r\n            @media (max-width: 560px) {\r\n              margin: ${props =>\r\n                props['data-rtl'] === 'rtl' ? '0 0 0 10px' : '0 10px 0 0'};\r\n            }\r\n          }\r\n          #order-drop-list {\r\n            z-index: 1;\r\n          }\r\n        }\r\n        .RightSideDate {\r\n          display: flex;\r\n          flex-direction: row;\r\n          align-items: center;\r\n          margin-top: 15px;\r\n          font-size: 14px;\r\n          color: ${palette('grey', 8)};\r\n          > span {\r\n            margin: ${props =>\r\n              props['data-rtl'] === 'rtl' ? '0 10px 0 0' : '0 0 0 10px'};\r\n          }\r\n\r\n          @media (max-width: 560px) {\r\n            margin: ${props =>\r\n              props['data-rtl'] === 'rtl' ? '0 13px 0 0' : '0 0 0 13px'};\r\n          }\r\n\r\n          > div {\r\n            margin: ${props =>\r\n              props['data-rtl'] === 'rtl' ? '0 7px 0 0' : '0 0 0 7px'};\r\n            > div {\r\n              &::before {\r\n                background-color: #ececec;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      .LeftSideContent {\r\n        .LeftSideContentInput {\r\n          > div {\r\n            &::before {\r\n              background-color: #ececec;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    .LeftSideContent {\r\n      display: -webkit-box;\r\n      display: -webkit-flex;\r\n      display: -ms-flexbox;\r\n      display: flex;\r\n      -webkit-align-items: flex-start;\r\n      -webkit-box-align: flex-start;\r\n      -ms-flex-align: flex-start;\r\n      align-items: flex-start;\r\n      -webkit-flex-direction: column;\r\n      -ms-flex-direction: column;\r\n      flex-direction: column;\r\n      &.LeftSideContentInput {\r\n        > div {\r\n          &::before {\r\n            background-color: #ececec;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    .RightSideContent {\r\n      display: -webkit-box;\r\n      display: -webkit-flex;\r\n      display: -ms-flexbox;\r\n      display: flex;\r\n      -webkit-align-items: flex-end;\r\n      -webkit-box-align: flex-end;\r\n      -ms-flex-align: flex-end;\r\n      align-items: flex-end;\r\n      -webkit-flex-direction: column;\r\n      -ms-flex-direction: column;\r\n      flex-direction: column;\r\n      text-align: right;\r\n\r\n      @media only screen and (max-width: 767px) {\r\n        -webkit-align-items: flex-start;\r\n        -webkit-box-align: flex-start;\r\n        -ms-flex-align: flex-start;\r\n        align-items: flex-start;\r\n        text-align: left;\r\n      }\r\n\r\n      @media only screen and (min-width: 501px) and (max-width: 767px) {\r\n        -webkit-align-items: flex-end;\r\n        -webkit-box-align: flex-end;\r\n        -ms-flex-align: flex-end;\r\n        align-items: flex-end;\r\n        text-align: right;\r\n      }\r\n    }\r\n\r\n    .BillingInformation {\r\n      width: 100%;\r\n      display: -webkit-box;\r\n      display: -webkit-flex;\r\n      display: -ms-flexbox;\r\n      display: flex;\r\n      -webkit-flex-flow: row wrap;\r\n      -ms-flex-flow: row wrap;\r\n      flex-flow: row wrap;\r\n      -webkit-align-items: baseline;\r\n      -webkit-box-align: baseline;\r\n      -ms-flex-align: baseline;\r\n      align-items: baseline;\r\n      -webkit-box-pack: justify;\r\n      -webkit-justify-content: space-between;\r\n      -ms-flex-pack: justify;\r\n      justify-content: space-between;\r\n      margin-top: 50px;\r\n      margin-bottom: 60px;\r\n\r\n      .LeftSideContent,\r\n      .RightSideContent {\r\n        width: calc(50% - 50px);\r\n        margin: ${props =>\r\n          props['data-rtl'] === 'rtl' ? '0 0 0 10px' : '0 10px 0 0'};\r\n\r\n        @media (max-width: 500px) {\r\n          width: 100%;\r\n          margin: 0;\r\n        }\r\n      }\r\n      .RightSideContent {\r\n        margin: 0;\r\n\r\n        input,\r\n        textarea {\r\n          text-align: ${props =>\r\n            props['data-rtl'] === 'rtl' ? 'left' : 'right'};\r\n\r\n          &::-webkit-input-placeholder {\r\n            text-align: ${props =>\r\n              props['data-rtl'] === 'rtl' ? 'left' : 'right'};\r\n          }\r\n          &:-moz-placeholder {\r\n            text-align: ${props =>\r\n              props['data-rtl'] === 'rtl' ? 'left' : 'right'};\r\n          }\r\n          &::-moz-placeholder {\r\n            text-align: ${props =>\r\n              props['data-rtl'] === 'rtl' ? 'left' : 'right'};\r\n          }\r\n          &:-ms-input-placeholder {\r\n            text-align: ${props =>\r\n              props['data-rtl'] === 'rtl' ? 'left' : 'right'};\r\n          }\r\n        }\r\n      }\r\n      @media only screen and (max-width: 767px) {\r\n        .RightSideContent {\r\n          margin-top: 40px;\r\n        }\r\n      }\r\n\r\n      h3.Title,\r\n      .BillFormTitle {\r\n        font-size: 16px;\r\n        font-weight: 500;\r\n        color: ${palette('grey', 9)};\r\n        margin: 0 0 10px;\r\n        line-height: 1;\r\n        label {\r\n          font-size: 19px;\r\n          font-weight: 500;\r\n          color: ${palette('grey', 9)};\r\n          margin: 0 0 10px;\r\n          line-height: 1;\r\n        }\r\n        > div {\r\n          &::before {\r\n            background-color: #ececec;\r\n          }\r\n        }\r\n        input {\r\n          font-size: 15px;\r\n          color: ${palette('grey', 7)};\r\n          font-weight: 400;\r\n          display: block;\r\n          margin-top: 10px;\r\n        }\r\n      }\r\n      .BillFormAddress {\r\n        width: 100%;\r\n        > div {\r\n          &::before {\r\n            background-color: #ececec;\r\n          }\r\n        }\r\n        textarea {\r\n          height: 100%;\r\n          overflow: hidden;\r\n          font-size: 14px;\r\n          color: ${palette('grey', 7)};\r\n          font-weight: 300;\r\n          font-style: normal;\r\n        }\r\n        textarea.ant-input {\r\n          min-height: 160px !important;\r\n        }\r\n      }\r\n      p.NameEmail {\r\n        span.Name {\r\n          font-size: 15px;\r\n          color: ${palette('grey', 7)};\r\n          font-weight: 400;\r\n          display: block;\r\n        }\r\n\r\n        span.Email {\r\n          font-size: 14px;\r\n          color: ${palette('grey', 7)};\r\n          font-weight: 300;\r\n        }\r\n      }\r\n\r\n      address {\r\n        font-size: 14px;\r\n        color: ${palette('grey', 7)};\r\n        font-weight: 300;\r\n        font-style: normal;\r\n      }\r\n    }\r\n    .customScrollBar {\r\n      .scrollbar-thumb {\r\n        &.scrollbar-thumb-y {\r\n          display: none !important;\r\n        }\r\n      }\r\n    }\r\n    .InvoiceTable {\r\n      table {\r\n        thead {\r\n          background-color: ${palette('grey', 2)};\r\n          tr {\r\n            th {\r\n              color: ${palette('grey', 8)};\r\n            }\r\n          }\r\n        }\r\n\r\n        tbody {\r\n          tr {\r\n            td {\r\n              color: ${palette('grey', 7)};\r\n              > div {\r\n                > div {\r\n                  &::before {\r\n                    background-color: #ececec;\r\n                  }\r\n                }\r\n              }\r\n              input {\r\n                color: ${palette('grey', 7)};\r\n                font-size: 0.8125rem;\r\n              }\r\n              .material-icons {\r\n                color: #757575;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      .InvoiceTableBtn {\r\n        display: flex;\r\n        justify-content: ${props =>\r\n          props['data-rtl'] === 'rtl' ? 'flex-start' : 'flex-end'};\r\n        align-items: ${props =>\r\n          props['data-rtl'] === 'rtl' ? 'flex-start' : 'flex-end'};\r\n        margin-top: 15px;\r\n        .InvoiceEditAddBtn {\r\n          background: ${palette('blue', 14)};\r\n          color: #fff;\r\n        }\r\n      }\r\n      .TotalBill {\r\n        margin-top: 30px;\r\n        display: -webkit-box;\r\n        display: -webkit-flex;\r\n        display: -ms-flexbox;\r\n        display: flex;\r\n        width: 100%;\r\n        align-items: ${props =>\r\n          props['data-rtl'] === 'rtl' ? 'flex-start' : 'flex-end'};\r\n        text-align: ${props =>\r\n          props['data-rtl'] === 'rtl' ? 'left' : 'right'};\r\n        flex-direction: column;\r\n        padding-left: inherit;\r\n\r\n        p {\r\n          margin-top: 0;\r\n          font-size: 14px;\r\n          color: ${palette('grey', 7)};\r\n          margin-bottom: 15px;\r\n          width: 250px;\r\n          display: flex;\r\n          justify-content: ${props =>\r\n            props['data-rtl'] === 'rtl' ? 'flex-start' : 'flex-end'};\r\n          text-align: ${props =>\r\n            props['data-rtl'] === 'rtl' ? 'left' : 'right'};\r\n\r\n          span {\r\n            width: 120px;\r\n          }\r\n        }\r\n        .TotalBillTitle {\r\n          margin: ${props =>\r\n            props['data-rtl'] === 'rtl' ? '0 0 0 -10px' : '0 -10px 0 0'};\r\n        }\r\n        .totalVat {\r\n          width: 186px;\r\n        }\r\n        .vatRateCalc {\r\n          > div {\r\n            margin-top: -12px;\r\n            width: 25px;\r\n            margin: ${props =>\r\n              props['data-rtl'] === 'rtl' ? '0 15px 0 0' : '0 0 0 15px'};\r\n            > div {\r\n              &::before {\r\n                background-color: #ececec;\r\n              }\r\n            }\r\n          }\r\n          input {\r\n            color: ${palette('grey', 7)};\r\n            font-size: 14px;\r\n          }\r\n          > span {\r\n            width: 70px;\r\n            margin: ${props =>\r\n              props['data-rtl'] === 'rtl' ? '-7px 10px 0 0' : '-7px 0 0 10px'};\r\n          }\r\n          .ant-input-group-wrapper {\r\n            width: auto;\r\n            margin: ${props =>\r\n              props['data-rtl'] === 'rtl' ? '-7px 0 0 0' : '-7px 0 0 0'};\r\n          }\r\n          .vatRateCalcWrap {\r\n            > span:last-child {\r\n              margin: ${props =>\r\n                props['data-rtl'] === 'rtl'\r\n                  ? '-7px 10px 0 0'\r\n                  : '-7px 0 0 10px'};\r\n            }\r\n          }\r\n          .ant-input-wrapper.ant-input-group {\r\n            margin: ${props =>\r\n              props['data-rtl'] === 'rtl' ? '0 -22px 0 0' : '0 0 0 -22px'};\r\n            margin-top: 0;\r\n            input.ant-input {\r\n              width: 50px;\r\n            }\r\n          }\r\n        }\r\n        .currencySign {\r\n          > div {\r\n            &::before {\r\n              background-color: #ececec;\r\n            }\r\n          }\r\n          input,\r\n          label {\r\n            color: ${palette('grey', 7)};\r\n            font-size: 14px;\r\n          }\r\n        }\r\n        h3 {\r\n          font-size: 18px;\r\n          color: ${palette('grey', 9)};\r\n          margin: 0;\r\n          font-weight: 400;\r\n          width: 250px;\r\n          display: flex;\r\n          justify-content: ${props =>\r\n            props['data-rtl'] === 'rtl' ? 'flex-start' : 'flex-end'};\r\n          text-align: ${props =>\r\n            props['data-rtl'] === 'rtl' ? 'left' : 'right'};\r\n\r\n          span {\r\n            width: 120px;\r\n          }\r\n        }\r\n        .currencySignWithTotal {\r\n          span {\r\n            width: 100%;\r\n          }\r\n          .currencySign {\r\n            margin: ${props =>\r\n              props['data-rtl'] === 'rtl' ? '0 10px 0 0' : '0 0 0 10px'};\r\n            width: 50px;\r\n            margin-top: -5px;\r\n          }\r\n          .currencySignSpan {\r\n            width: 120px;\r\n          }\r\n        }\r\n        .grandTotal {\r\n          margin-top: 15px;\r\n        }\r\n      }\r\n      &.editInvoiceTable {\r\n        table {\r\n          @media (max-width: 767px) {\r\n            width: 760px;\r\n          }\r\n          thead {\r\n            background-color: ${palette('secondary', 1)};\r\n            tr {\r\n              th {\r\n                color: ${palette('secondary', 2)};\r\n              }\r\n            }\r\n          }\r\n\r\n          tbody {\r\n            tr {\r\n              td {\r\n                color: ${palette('text', 1)};\r\n                border-bottom: 0;\r\n                padding: 8px 15px;\r\n                > div {\r\n                  > div {\r\n                    &::before {\r\n                      background-color: #ececec;\r\n                    }\r\n                  }\r\n                }\r\n                input {\r\n                  color: ${palette('text', 1)};\r\n                  font-size: 0.8125rem;\r\n                  height: 28px;\r\n                }\r\n                .material-icons {\r\n                  color: #757575;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        .TotalBill {\r\n          p {\r\n            width: 300px;\r\n            justify-content: ${props =>\r\n              props['data-rtl'] === 'rtl' ? 'flex-start' : 'flex-end'};\r\n            text-align: ${props =>\r\n              props['data-rtl'] === 'rtl' ? 'left' : 'right'};\r\n            span {\r\n              width: 50%;\r\n            }\r\n            span.TotalBillTitle {\r\n              margin-right: ${props =>\r\n                props['data-rtl'] === 'rtl' ? 'inherit' : '0'};\r\n              margin-left: ${props =>\r\n                props['data-rtl'] === 'rtl' ? '0' : 'inherit'};\r\n            }\r\n          }\r\n          .vatRateCalc {\r\n            width: 300px;\r\n            display: flex;\r\n            justify-content: ${props =>\r\n              props['data-rtl'] === 'rtl' ? 'flex-end' : 'flex-start'};\r\n            .vatRateCalcSpan {\r\n              width: 50%;\r\n            }\r\n            .vatRateCalcWrap {\r\n              width: 50%;\r\n              margin-top: -5px;\r\n              margin-left: ${props =>\r\n                props['data-rtl'] === 'rtl' ? 'inherit' : '0'};\r\n              margin-right: ${props =>\r\n                props['data-rtl'] === 'rtl' ? '0' : 'inherit'};\r\n              .ant-input-wrapper.ant-input-group {\r\n                margin-left: ${props =>\r\n                  props['data-rtl'] === 'rtl' ? 'inherit' : '0'};\r\n                margin-right: ${props =>\r\n                  props['data-rtl'] === 'rtl' ? '0' : 'inherit'};\r\n              }\r\n            }\r\n          }\r\n          .currencySignWithTotal {\r\n            width: 300px;\r\n            display: flex;\r\n            justify-content: ${props =>\r\n              props['data-rtl'] === 'rtl' ? 'flex-end' : 'flex-start'};\r\n            margin-top: 15px;\r\n            .grandTotalSpan {\r\n              width: 50%;\r\n              font-size: 18px;\r\n              font-weight: 500;\r\n              color: rgba(0, 0, 0, 0.85);\r\n            }\r\n            .currencySignWrap {\r\n              width: 50%;\r\n              .currencySign {\r\n                margin-left: ${props =>\r\n                  props['data-rtl'] === 'rtl' ? 'inherit' : '0'};\r\n                margin-right: ${props =>\r\n                  props['data-rtl'] === 'rtl' ? '0' : 'inherit'};\r\n                width: 36px;\r\n              }\r\n              .currencySignSpan {\r\n                margin-left: ${props =>\r\n                  props['data-rtl'] === 'rtl' ? 'inherit' : '15px'};\r\n                margin-right: ${props =>\r\n                  props['data-rtl'] === 'rtl' ? '15px' : 'inherit'};\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    .ButtonWrapper {\r\n      width: 100%;\r\n      display: flex;\r\n      justify-content: ${props =>\r\n        props['data-rtl'] === 'rtl' ? 'flex-start' : 'flex-end'};\r\n      margin-top: 30px;\r\n    }\r\n    .mateInvoPrint {\r\n      background: ${palette('blue', 14)};\r\n      margin-left: ${props =>\r\n        props['data-rtl'] === 'rtl' ? 'inherit' : '15px'};\r\n      margin-right: ${props =>\r\n        props['data-rtl'] === 'rtl' ? '15px' : 'inherit'};\r\n    }\r\n  }\r\n`;\r\n\r\nexport default WithDirection(InvoicePageWrapper);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { EditTable } from '../../components/invoice/invoiceTable';\r\nimport OrderStatus from '../../components/invoice/orderStatus';\r\nimport notification from '../../components/notification';\r\nimport Button from '../../components/uielements/button';\r\nimport Input, { Textarea } from '../../components/uielements/input';\r\nimport DatePicker from '../../components/uielements/datePicker';\r\nimport Box from '../../components/utility/box';\r\nimport LayoutWrapper from '../../components/utility/layoutWrapper.js';\r\nimport InvoicePageWrapper from './singleInvoice.style';\r\nimport { stringToPosetiveInt } from '../../helpers/utility';\r\nimport { orderStatusOptions } from './config';\r\n\r\nconst updateValues = invoice => {\r\n  const { invoiceList } = invoice;\r\n  let subTotal = 0;\r\n  invoiceList.forEach((item, index) => {\r\n    const price = item.costs * item.qty;\r\n    invoice.invoiceList[index].price = price;\r\n    invoice.invoiceList[index].key = index + 1;\r\n    subTotal += price;\r\n  });\r\n  invoice.subTotal = subTotal;\r\n  invoice.vatPrice = Math.floor(invoice.vatRate * subTotal * 0.01);\r\n  invoice.totalCost = invoice.vatPrice + subTotal;\r\n  return invoice;\r\n};\r\nconst checkInvoice = invoice => {\r\n  const emptyKeys = [\r\n    'number',\r\n    'billTo',\r\n    'billToAddress',\r\n    'billFrom',\r\n    'billFromAddress',\r\n    'currency',\r\n  ];\r\n  const emptyKeysErrors = [\r\n    'Invoice Number',\r\n    'Bill To',\r\n    'Bill To Address',\r\n    'Bill From',\r\n    'Bill From Address',\r\n    'Currency',\r\n  ];\r\n  for (let i = 0; i < emptyKeys.length; i++) {\r\n    if (!invoice[emptyKeys[i]]) {\r\n      return `Please fill in ${emptyKeysErrors[i]}`;\r\n    }\r\n  }\r\n  for (let i = 0; i < invoice.invoiceList.length; i++) {\r\n    if (!invoice.invoiceList[i].itemName) {\r\n      return `Please fill in item name of ${i + 1} item`;\r\n    }\r\n    if (invoice.invoiceList[i].costs === 0) {\r\n      return `cost of ${i + 1} item should be positive`;\r\n    }\r\n    if (invoice.invoiceList[i].qty === 0) {\r\n      return `quantity of ${i + 1} item should be positive`;\r\n    }\r\n  }\r\n  return '';\r\n};\r\n\r\nexport default class extends Component {\r\n  onSave = () => {\r\n    const { editableInvoice, isNewInvoice, updateInvoice } = this.props;\r\n    const error = checkInvoice(editableInvoice);\r\n    if (error) {\r\n      notification('error', error);\r\n    } else {\r\n      const successMessage = isNewInvoice\r\n        ? 'A new Invoice added'\r\n        : 'Invoice Updated';\r\n      notification('success', successMessage);\r\n      updateInvoice(editableInvoice);\r\n    }\r\n  };\r\n  render() {\r\n    const {\r\n      editableInvoice,\r\n      isNewInvoice,\r\n      redirectPath,\r\n      toggleView,\r\n      editInvoice,\r\n    } = this.props;\r\n    return (\r\n      <LayoutWrapper>\r\n        <Box>\r\n          <InvoicePageWrapper className=\"editView\">\r\n            <div className=\"PageHeader\">\r\n              {isNewInvoice ? (\r\n                <Link to={redirectPath}>\r\n                  <Button color=\"primary\">\r\n                    <span>Cancel</span>\r\n                  </Button>\r\n                </Link>\r\n              ) : (\r\n                <Button onClick={() => toggleView(false)}>\r\n                  <span>Cancel</span>\r\n                </Button>\r\n              )}\r\n\r\n              <Button type=\"primary\" onClick={this.onSave} className=\"saveBtn\">\r\n                <span>Save</span>\r\n              </Button>\r\n            </div>\r\n            <div className=\"PageContent\">\r\n              <div className=\"OrderInfo\">\r\n                <div className=\"LeftSideContent\">\r\n                  <h3 className=\"Title\">Invoice Info</h3>\r\n                  <Input\r\n                    placeholder=\"Number\"\r\n                    value={editableInvoice.number}\r\n                    onChange={event => {\r\n                      editableInvoice.number = event.target.value;\r\n                      editInvoice(editableInvoice);\r\n                    }}\r\n                    className=\"LeftSideContentInput\"\r\n                  />\r\n                </div>\r\n                <div className=\"RightSideContent\">\r\n                  <div className=\"RightSideStatus\">\r\n                    <span className=\"RightSideStatusSpan\">Order Status: </span>\r\n                    <OrderStatus\r\n                      value={editableInvoice.orderStatus}\r\n                      onChange={orderStatus => {\r\n                        editableInvoice.orderStatus = orderStatus;\r\n                        editInvoice(editableInvoice);\r\n                      }}\r\n                      orderStatusOptions={orderStatusOptions}\r\n                      className=\"RightStatusDropdown\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"RightSideDate\">\r\n                    Order date:{' '}\r\n                    <DatePicker\r\n                      allowClear={false}\r\n                      value={moment(new Date(editableInvoice.orderDate))}\r\n                      onChange={val => {\r\n                        editableInvoice.orderDate = val.toDate().getTime();\r\n                        editInvoice(editableInvoice);\r\n                      }}\r\n                      format=\"MMMM Do YYYY\"\r\n                      animateYearScrolling={true}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"BillingInformation\">\r\n                <div className=\"LeftSideContent\">\r\n                  <Input\r\n                    placeholder=\"Bill From\"\r\n                    value={editableInvoice.billFrom}\r\n                    onChange={event => {\r\n                      editableInvoice.billFrom = event.target.value;\r\n                      editInvoice(editableInvoice);\r\n                    }}\r\n                    className=\"BillFormTitle\"\r\n                  />\r\n                  <Textarea\r\n                    placeholder=\"Bill From Address\"\r\n                    value={editableInvoice.billFromAddress}\r\n                    rows={5}\r\n                    onChange={event => {\r\n                      editableInvoice.billFromAddress = event.target.value;\r\n                      editInvoice(editableInvoice);\r\n                    }}\r\n                    className=\"BillFormAddress\"\r\n                  />\r\n                </div>\r\n                <div className=\"RightSideContent\">\r\n                  <Input\r\n                    placeholder=\"Bill To\"\r\n                    value={editableInvoice.billTo}\r\n                    onChange={event => {\r\n                      editableInvoice.billTo = event.target.value;\r\n                      editInvoice(editableInvoice);\r\n                    }}\r\n                    className=\"BillFormTitle\"\r\n                  />\r\n                  <Textarea\r\n                    placeholder=\"Bill To Address\"\r\n                    value={editableInvoice.billToAddress}\r\n                    rows={5}\r\n                    onChange={event => {\r\n                      editableInvoice.billToAddress = event.target.value;\r\n                      editInvoice(editableInvoice);\r\n                    }}\r\n                    className=\"BillFormAddress\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"InvoiceTable editInvoiceTable\">\r\n                <EditTable\r\n                  editableInvoice={editableInvoice}\r\n                  editInvoice={editInvoice}\r\n                  updateValues={updateValues}\r\n                />\r\n                <div className=\"InvoiceTableBtn\">\r\n                  <Button\r\n                    onClick={() => {\r\n                      editableInvoice.invoiceList.push({\r\n                        key: editableInvoice.invoiceList.length + 1,\r\n                        itemName: '',\r\n                        costs: 0,\r\n                        qty: 0,\r\n                        price: 0,\r\n                      });\r\n                      editInvoice(editableInvoice);\r\n                    }}\r\n                    type=\"primary\"\r\n                  >\r\n                    Add Item\r\n                  </Button>\r\n                </div>\r\n                <div className=\"TotalBill\">\r\n                  <p>\r\n                    <span className=\"TotalBillTitle\">Sub-total : </span>\r\n                    <span>{`${editableInvoice.currency}${\r\n                      editableInvoice.subTotal\r\n                    }`}</span>\r\n                  </p>\r\n                  <div className=\"vatRateCalc\">\r\n                    <span className=\"vatRateCalcSpan\"> Total Vat : </span>\r\n                    <div className=\"vatRateCalcWrap\">\r\n                      <Input\r\n                        value={editableInvoice.vatRate}\r\n                        addonAfter=\"%\"\r\n                        onChange={event => {\r\n                          editableInvoice.vatRate = stringToPosetiveInt(\r\n                            event.target.value,\r\n                            editableInvoice.vatRate\r\n                          );\r\n                          editInvoice(updateValues(editableInvoice));\r\n                        }}\r\n                      />\r\n\r\n                      <span>\r\n                        {`${editableInvoice.currency}${\r\n                          editableInvoice.vatPrice\r\n                        }`}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"currencySignWithTotal\">\r\n                    <span className=\"grandTotalSpan\">Grand Total </span>\r\n                    <div className=\"currencySignWrap\">\r\n                      <Input\r\n                        value={editableInvoice.currency}\r\n                        onChange={event => {\r\n                          editableInvoice.currency = event.target.value;\r\n                          editInvoice(editableInvoice);\r\n                        }}\r\n                        className=\"currencySign\"\r\n                      />\r\n                      <span className=\"currencySignSpan\">\r\n                        {editableInvoice.totalCost}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"ButtonWrapper\" />\r\n            </div>\r\n          </InvoicePageWrapper>\r\n        </Box>\r\n      </LayoutWrapper>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport default ({ companyName, companyAddress }) => (\r\n  <div>\r\n    <p className=\"NameEmail\">\r\n      <span className=\"Name\">{companyName}</span>\r\n      <span className=\"Email\" style={{ whiteSpace: 'pre-line' }}>\r\n        {companyAddress}\r\n      </span>\r\n    </p>\r\n  </div>\r\n);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport Box from '../../components/utility/box';\r\nimport { ViewTable } from '../../components/invoice/invoiceTable';\r\nimport Button from '../../components/uielements/button';\r\nimport LayoutWrapper from '../../components/utility/layoutWrapper.js';\r\nimport InvoiceAddress from '../../components/invoice/address';\r\nimport InvoicePageWrapper from './singleInvoice.style';\r\n\r\nexport default class extends Component {\r\n  render() {\r\n    const { currentInvoice, toggleView, redirectPath } = this.props;\r\n    return (\r\n      <LayoutWrapper>\r\n        <Box>\r\n          <InvoicePageWrapper className=\"InvoicePageWrapper\">\r\n            <div className=\"PageHeader\">\r\n              <Link to={redirectPath}>\r\n                <Button className=\"isoGoInvoBtn\">\r\n                  <span>Go To Invoices</span>\r\n                </Button>\r\n              </Link>\r\n              <Button color=\"secondary\" onClick={() => toggleView(true)}>\r\n                <span>Edit Invoice</span>\r\n              </Button>\r\n              <Button type=\"primary\" className=\"isoInvoPrint\">\r\n                <span>Print Invoice</span>\r\n              </Button>\r\n            </div>\r\n\r\n            <div className=\"PageContent\">\r\n              <div className=\"OrderInfo\">\r\n                <div className=\"LeftSideContent\">\r\n                  <h3 className=\"Title\">Invoice Info</h3>\r\n                  <span className=\"InvoiceNumber\">{currentInvoice.number}</span>\r\n                </div>\r\n                <div className=\"RightSideContent\">\r\n                  <p>\r\n                    <span className=\"orderStatusSpan\">Order Status: </span>\r\n                    <span className=\"orderStatus\">\r\n                      {currentInvoice.orderStatus}\r\n                    </span>\r\n                  </p>\r\n                  <p>\r\n                    <span className=\"orderDateSpan\">Order date: </span>\r\n                    <span className=\"orderDate\">\r\n                      {moment(new Date(currentInvoice.orderDate)).format(\r\n                        'MMMM Do YYYY'\r\n                      )}\r\n                    </span>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"BillingInformation\">\r\n                <div className=\"LeftSideContent\">\r\n                  <h3 className=\"Title\">Bill From</h3>\r\n\r\n                  <InvoiceAddress\r\n                    companyName={currentInvoice.billFrom}\r\n                    companyAddress={currentInvoice.billFromAddress}\r\n                  />\r\n                </div>\r\n                <div className=\"RightSideContent\">\r\n                  <h3 className=\"Title\">Bill To</h3>\r\n\r\n                  <InvoiceAddress\r\n                    companyName={currentInvoice.billTo}\r\n                    companyAddress={currentInvoice.billToAddress}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"InvoiceTable\">\r\n                <ViewTable invoiceList={currentInvoice.invoiceList} />\r\n                <div className=\"TotalBill\">\r\n                  <p>\r\n                    Sub-total :{' '}\r\n                    <span>{`${currentInvoice.currency}${\r\n                      currentInvoice.subTotal\r\n                    }`}</span>\r\n                  </p>\r\n                  <p>\r\n                    Vat :{' '}\r\n                    <span>{`${currentInvoice.currency}${\r\n                      currentInvoice.vatPrice\r\n                    }`}</span>\r\n                  </p>\r\n                  <h3>\r\n                    Grand Total :{' '}\r\n                    <span>{`${currentInvoice.currency}${\r\n                      currentInvoice.totalCost\r\n                    }`}</span>\r\n                  </h3>\r\n                </div>\r\n              </div>\r\n              <div className=\"ButtonWrapper\">\r\n                <Button type=\"primary\" className=\"mateInvoPrint\">\r\n                  <span>Send Invoice</span>\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </InvoicePageWrapper>\r\n        </Box>\r\n      </LayoutWrapper>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport EditInvoice from './editInvoice';\r\nimport ViewInvoice from './viewInvoice';\r\nimport Loader from '../../components/utility/loader';\r\nimport invoiceActions from '../../redux/invoice/actions';\r\n\r\nclass SingleInvoice extends Component {\r\n  componentDidMount() {\r\n    const { initialInvoices, initData } = this.props;\r\n    if (!initialInvoices) {\r\n      initData();\r\n    }\r\n    this.toggleCreatedInvoice(this.props);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    this.toggleCreatedInvoice(nextProps);\r\n  }\r\n  toggleCreatedInvoice(props) {\r\n    const {\r\n      match,\r\n      initialInvoices,\r\n      currentInvoice,\r\n      selectCurrentInvoice\r\n    } = props;\r\n    const { invoiceId } = match.params;\r\n    if (initialInvoices && currentInvoice.id !== invoiceId) {\r\n      selectCurrentInvoice(invoiceId);\r\n    }\r\n  }\r\n  render() {\r\n    const { match, currentInvoice, enableEditView } = this.props;\r\n    const redirectPath = match.url.replace(match.params.invoiceId, '');\r\n    if (currentInvoice.id !== match.params.invoiceId) {\r\n      return <Loader />;\r\n    } else if (enableEditView) {\r\n      return <EditInvoice {...this.props} redirectPath={redirectPath} />;\r\n    } else {\r\n      return <ViewInvoice {...this.props} redirectPath={redirectPath} />;\r\n    }\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    ...state.Invoices\r\n  };\r\n}\r\nexport default connect(mapStateToProps, invoiceActions)(SingleInvoice);\r\n"],"sourceRoot":""}