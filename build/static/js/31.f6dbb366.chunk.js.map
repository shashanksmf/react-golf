{"version":3,"sources":["components/uielements/upload.js","components/contacts/deleteButton.js","components/contacts/contactCard.style.js","components/contacts/singleView.js","components/contacts/editView.js","components/contacts/contactList.style.js","components/contacts/contactList.js","containers/Profile/fakeData.js","containers/Profile/contacts.style.js","containers/Profile/editProfile.js","redux/Profile/actions.js","containers/Profile/profile.js"],"names":["antd__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","Upload","_this$props","this","props","contact","deleteContact","name","firstName","concat","lastName","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_feedback_popconfirm__WEBPACK_IMPORTED_MODULE_6__","title","okText","cancelText","onConfirm","notification","id","_uielements_button__WEBPACK_IMPORTED_MODULE_7__","icon","type","className","Component","WDContactCardWrapper","styled","div","_templateObject","borderRadius","palette","boxShadow","transition","ContactCardWrapper","WithDirection","otherAttributes","extraInfos","forEach","attribute","value","push","key","_contactCard_style__WEBPACK_IMPORTED_MODULE_6__","avatar","alt","src","beforeUpload","file","size","_this","Object","C_Users_shash_Documents_react_golf_git_trunk_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","editContact","event","target","react__WEBPACK_IMPORTED_MODULE_6___default","_uielements_input__WEBPACK_IMPORTED_MODULE_8__","placeholder","rows","onChange","_contactCard_style__WEBPACK_IMPORTED_MODULE_11__","_uielements_upload__WEBPACK_IMPORTED_MODULE_9__","showUploadList","action","antd__WEBPACK_IMPORTED_MODULE_7__","WDContactListWrapper","ContactListWrapper","ContactList","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","singleContact","bind","assertThisInitialized","state","search","seectedId","changeContact","activeClass","react_default","onClick","deleteButton","setState","_this2","contacts","toUpperCase","filter","includes","filterContacts","input","context","intl","formatMessage","length","customScrollBar","map","intlMessages","contextTypes","PropTypes","object","isRequired","JSON","parse","WDContactsWrapper","ContactsWrapper","actions","load_data_profile","getDataProfile","dispatch","Profile","contactAction","addContact","viewChange","Layout","Content","_this$props$Overview","Overview","_this$props$Overview$","recollectionData","data_recollection","console","log","editView","selectedContact","style","background","layout","connect"],"mappings":"4FAAA,IAAAA,EAAAC,EAAA,MAEeC,MAAf,8UCIW,IAAAC,EAC4BC,KAAKC,MAAhCC,EADDH,EACCG,QAASC,EADVJ,EACUI,cACbC,EAAO,GAUX,OATIF,EAAQG,YACVD,EAAI,GAAAE,OAAMJ,EAAQG,UAAd,MAEFH,EAAQK,WACVH,EAAI,GAAAE,OAAMF,GAANE,OAAaJ,EAAQK,WAEtBH,IACHA,EAAO,WAGPI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,MAAK,kBAAAN,OAAoBF,EAApB,KACLS,OAAO,SACPC,WAAW,KACXC,UAAW,WACTC,YAAa,QAAD,GAAAV,OAAaF,EAAb,YAA6B,IACzCD,EAAcD,EAAQe,MAGxBT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAQC,KAAK,QAAQC,KAAK,SAASC,UAAU,yBAvBxBC,g6ICA7B,IAAMC,EAAuBC,IAAOC,IAAVC,IA0BN,SAAAzB,GAAK,MACG,QAAtBA,EAAM,YAAwB,UAAY,QAC7B,SAAAA,GAAK,MAA2B,QAAtBA,EAAM,YAAwB,OAAS,WAoB5D0B,YAAa,OAiBNC,kBAAQ,OAAQ,GA+BdA,kBAAQ,OAAQ,GAGT,SAAA3B,GAAK,MACG,QAAtBA,EAAM,YAAwB,UAAY,QAC7B,SAAAA,GAAK,MACI,QAAtBA,EAAM,YAAwB,OAAS,WAC3B,SAAAA,GAAK,MACK,QAAtBA,EAAM,YAAwB,QAAU,QAMxB,SAAAA,GAAK,MACG,QAAtBA,EAAM,YAAwB,UAAY,KAC7B,SAAAA,GAAK,MACI,QAAtBA,EAAM,YAAwB,IAAM,WACrB,SAAAA,GAAK,MACE,QAAtBA,EAAM,YAAwB,UAAY,QAC5B,SAAAA,GAAK,MACG,QAAtBA,EAAM,YAAwB,OAAS,WAOhC,SAAAA,GAAK,MAA2B,QAAtBA,EAAM,YAAwB,UAAY,KACrD,SAAAA,GAAK,MAA2B,QAAtBA,EAAM,YAAwB,IAAM,WAO/C2B,kBAAQ,OAAQ,GAGX,SAAA3B,GAAK,MACK,QAAtBA,EAAM,YAAwB,QAAU,QAMjC2B,kBAAQ,OAAQ,GAKLA,kBAAQ,SAAU,GAIpCC,YAAU,QACVF,YAAa,OACbG,cAGgBF,kBAAQ,UAAW,GACjCC,YAAU,qCAKID,kBAAQ,UAAW,GAI1BA,kBAAQ,YAAa,GAIrBA,kBAAQ,YAAa,GAIrBA,kBAAQ,YAAa,GAGrBA,kBAAQ,YAAa,GAOvBA,kBAAQ,OAAQ,GAKLA,kBAAQ,SAAU,GAGpCC,YAAU,QACVF,YAAa,OACbG,cAGgBF,kBAAQ,UAAW,GACjCC,YAAU,qCAKID,kBAAQ,UAAW,GAI1BA,kBAAQ,YAAa,GAIrBA,kBAAQ,YAAa,GAIrBA,kBAAQ,YAAa,GAGrBA,kBAAQ,YAAa,IAOlCG,EAAqBC,YAAcT,+TClO9B,IAAAxB,EAC8BC,KAAKC,MAAlCC,EADDH,EACCG,QAAS+B,EADVlC,EACUkC,gBACX7B,EAAOF,EAAQE,KAAOF,EAAQE,KAAO,UACrC8B,EAAa,GAYnB,OAXAD,EAAgBE,QAAQ,SAAAC,GACtB,IAAMC,EAAQnC,EAAQkC,EAAUC,OAC5BA,GACFH,EAAWI,KACT9B,EAAAC,EAAAC,cAAA,OAAKW,UAAU,sBAAsBkB,IAAKH,EAAUC,OAClD7B,EAAAC,EAAAC,cAAA,KAAGW,UAAU,gBAAb,GAAAf,OAAgC8B,EAAUxB,QAC1CJ,EAAAC,EAAAC,cAAA,KAAGW,UAAU,kBAAkBgB,OAMrC7B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAoBnB,UAAU,kBAC5Bb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,sBACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,kBACZnB,EAAQuC,OAASjC,EAAAC,EAAAC,cAAA,OAAKgC,IAAI,IAAIC,IAAKzC,EAAQuC,SAAa,IAE3DjC,EAAAC,EAAAC,cAAA,MAAIW,UAAU,iBAAiBjB,IAEjCI,EAAAC,EAAAC,cAAA,OAAKW,UAAU,yBAAyBa,WAxBnBZ,0MCK7B,SAASsB,EAAaC,GAIpB,MAD4B,eAAdA,EAAKzB,KAKJyB,EAAKC,KAAO,KAAO,KAAO,GAKzC9B,YAAa,UAAW,+BAAgC,KACjD,IAJLA,YAAa,QAAS,+BAAgC,KAC/C,IANPA,YAAa,QAAS,gCAAiC,KAChD,0LAWA,IAAA+B,EAAA/C,KAAAD,EAC8BC,KAAKC,MAAlCC,EADDH,EACCG,QAAS+B,EADVlC,EACUkC,gBACX7B,EAAOF,EAAQE,KAAOF,EAAQE,KAAO,UACrC8B,EAAa,GA6CnB,MAxCA,GAAA5B,OAJc,CACZ,CAAE+B,MAAO,YAAazB,MAAO,cAC7B,CAAEyB,MAAO,WAAYzB,MAAO,cAE9BoC,OAAAC,EAAA,EAAAD,CAAcf,IAAiBE,QAAQ,SAAAC,GACrC,IAAMC,EAAQnC,EAAQkC,EAAUC,OAC1Ba,EAAc,SAAAC,GAClBjD,EAAQkC,EAAUC,OAASc,EAAMC,OAAOf,MACxC,IAAIjC,EAAO,GACPF,EAAQG,YACVD,EAAI,GAAAE,OAAMJ,EAAQG,UAAd,MAEFH,EAAQK,WACVH,EAAI,GAAAE,OAAMF,GAANE,OAAaJ,EAAQK,WAE3BL,EAAQE,KAAOA,EACf2C,EAAK9C,MAAMiD,YAAYhD,IAED,SAApBkC,EAAUC,MACZH,EAAWI,KACTe,EAAA5C,EAAAC,cAAA,OAAKW,UAAU,sBAAsBkB,IAAKH,EAAUC,OAClDgB,EAAA5C,EAAAC,cAAA,KAAGW,UAAU,gBAAb,GAAAf,OAAgC8B,EAAUxB,QAC1CyC,EAAA5C,EAAAC,cAAC4C,EAAA,EAAD,CACEC,YAAW,GAAAjD,OAAK8B,EAAUxB,OAC1ByB,MAAOA,EACPjB,KAAK,WACLoC,KAAM,EACNC,SAAU,SAAAN,GAAK,OAAID,EAAYC,QAKrCjB,EAAWI,KACTe,EAAA5C,EAAAC,cAAA,OAAKW,UAAU,sBAAsBkB,IAAKH,EAAUC,OAClDgB,EAAA5C,EAAAC,cAAA,KAAGW,UAAU,gBAAb,GAAAf,OAAgC8B,EAAUxB,QAC1CyC,EAAA5C,EAAAC,cAAC4C,EAAA,EAAD,CACEC,YAAW,GAAAjD,OAAK8B,EAAUxB,OAC1ByB,MAAOA,EACPoB,SAAU,SAAAN,GAAK,OAAID,EAAYC,UAOvCE,EAAA5C,EAAAC,cAACgD,EAAA,EAAD,CAAoBrC,UAAU,kBAC5BgC,EAAA5C,EAAAC,cAAA,OAAKW,UAAU,sBACbgC,EAAA5C,EAAAC,cAAA,OAAKW,UAAU,kBACbgC,EAAA5C,EAAAC,cAACiD,EAAA,EAAD,CACEtC,UAAU,kBACVjB,KAAK,SACLwD,gBAAgB,EAChBhB,aAAcA,EACdiB,OAAO,IAEN3D,EAAQuC,OACPY,EAAA5C,EAAAC,cAAA,OAAKiC,IAAKzC,EAAQuC,OAAQC,IAAI,GAAGrB,UAAU,WAE3C,GAEFgC,EAAA5C,EAAAC,cAACoD,EAAA,EAAD,CAAM1C,KAAK,OAAOC,UAAU,8BAGhCgC,EAAA5C,EAAAC,cAAA,MAAIW,UAAU,iBAAiBjB,IAEjCiD,EAAA5C,EAAAC,cAAA,OAAKW,UAAU,yBAAyBa,WAtEnBZ,yrHCnB7B,IAAMyC,EAAuBvC,IAAOC,IAAVC,IASbE,kBAAQ,YAAa,GAUnBA,kBAAQ,OAAQ,GAIT,SAAA3B,GAAK,MACG,QAAtBA,EAAM,YAAwB,UAAY,QAC3B,SAAAA,GAAK,MACE,QAAtBA,EAAM,YAAwB,OAAS,WAEd2B,kBAAQ,SAAU,GAI3CC,YAAU,QACVF,cACAG,cAQgBF,kBAAQ,SAAU,GAIzBA,kBAAQ,YAAa,GAIrBA,kBAAQ,YAAa,GAIrBA,kBAAQ,YAAa,GAGrBA,kBAAQ,YAAa,GAQzBA,kBAAQ,YAAa,GA2BX,SAAA3B,GAAK,MACE,QAAtBA,EAAM,YAAwB,OAAS,QACzB,SAAAA,GAAK,MAA2B,QAAtBA,EAAM,YAAwB,OAAS,QACtC2B,kBAAQ,SAAU,GAC/B,SAAA3B,GAAK,MAA2B,QAAtBA,EAAM,YAAwB,QAAU,QAK1C2B,kBAAQ,YAAa,GAazB,SAAA3B,GAAK,MACG,QAAtBA,EAAM,YAAwB,UAAY,QAC7B,SAAAA,GAAK,MACI,QAAtBA,EAAM,YAAwB,OAAS,WAGvC0B,YAAa,OAiBC,SAAA1B,GAAK,MACG,QAAtBA,EAAM,YAAwB,UAAY,QAC7B,SAAAA,GAAK,MACI,QAAtBA,EAAM,YAAwB,OAAS,WAS9B2B,kBAAQ,YAAa,GAMrBA,kBAAQ,YAAa,GAWvB,SAAA3B,GAAK,MAA2B,QAAtBA,EAAM,YAAwB,UAAY,OACrD,SAAAA,GAAK,MAA2B,QAAtBA,EAAM,YAAwB,MAAQ,WAI/C2B,kBAAQ,YAAa,GAC5BE,cAGSF,kBAAQ,UAAW,GAQvBA,kBAAQ,YAAa,IAO9BoC,EAAqBhC,YAAc+B,gDCpLpBE,cACnB,SAAAA,EAAYhE,GAAO,IAAA8C,EAAA,OAAAC,OAAAkB,EAAA,EAAAlB,CAAAhD,KAAAiE,IACjBlB,EAAAC,OAAAmB,EAAA,EAAAnB,CAAAhD,KAAAgD,OAAAoB,EAAA,EAAApB,CAAAiB,GAAAI,KAAArE,KAAMC,KACDqE,cAAgBvB,EAAKuB,cAAcC,KAAnBvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KACrBA,EAAKU,SAAWV,EAAKU,SAASc,KAAdvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KAChBA,EAAK0B,MAAQ,CACXC,OAAQ,IALO3B,6EAQL7C,GAAS,IAAAH,EAC+BC,KAAKC,MAAjD0E,EADa5E,EACb4E,UAAWxE,EADEJ,EACFI,cAAeyE,EADb7E,EACa6E,cAC5BC,EAAcF,IAAczE,EAAQe,GAAK,SAAW,GAE1D,OACE6D,EAAArE,EAAAC,cAAA,OACE6B,IAAKrC,EAAQe,GACbI,UAAS,GAAAf,OAAKuE,EAAL,qBACTE,QALa,kBAAMH,EAAc1E,EAAQe,MAOzC6D,EAAArE,EAAAC,cAAA,OAAKW,UAAU,aACZnB,EAAQuC,OAASqC,EAAArE,EAAAC,cAAA,OAAKgC,IAAI,IAAIC,IAAKzC,EAAQuC,SAAa,IAE3DqC,EAAArE,EAAAC,cAAA,OAAKW,UAAU,kBACbyD,EAAArE,EAAAC,cAAA,UAAKR,EAAQE,KAAOF,EAAQE,KAAO,YAErC0E,EAAArE,EAAAC,cAACsE,EAAA,EAAD,CAAc7E,cAAeA,EAAeD,QAASA,sCAIlDiD,GACPnD,KAAKiF,SAAS,CAAEP,OAAQvB,EAAMC,OAAOf,yCAE9B,IAAA6C,EAAAlF,KACC0E,EAAW1E,KAAKyE,MAAhBC,OACFS,EAzCV,SAAwBA,EAAUT,GAEhC,OADAA,EAASA,EAAOU,eAEZD,EAASE,OAAO,SAAAnF,GAAO,OAAIA,EAAQE,KAAKgF,cAAcE,SAASZ,KAC/DS,EAqCeI,CAAevF,KAAKC,MAAMkF,SAAUT,GACrD,OACEI,EAAArE,EAAAC,cAACsD,EAAD,CAAoB3C,UAAU,yBAC5ByD,EAAArE,EAAAC,cAAC8E,EAAA,EAAD,CACEjC,YAAavD,KAAKyF,QAAQC,KAAKC,cAAc,CAC3C1E,GAAI,+BAENoB,MAAOqC,EACPjB,SAAUzD,KAAKyD,SACfpC,UAAU,iBAEX8D,GAAYA,EAASS,OAAS,EAC7Bd,EAAArE,EAAAC,cAAA,OAAKW,UAAU,kBACbyD,EAAArE,EAAAC,cAACmF,EAAA,EAAD,CAAWxE,UAAU,wBAClB8D,EAASW,IAAI,SAAA5F,GAAO,OAAIgF,EAAKZ,cAAcpE,OAIhD4E,EAAArE,EAAAC,cAAA,QAAMW,UAAU,kBACbyD,EAAArE,EAAAC,cAACqF,EAAA,EAAD,CAAc9E,GAAG,yCArDWK,aA6DzC2C,EAAY+B,aAAe,CACzBN,KAAMO,YAAUC,OAAOC,8KClELC,KAAKC,MAAL,i1KCNpB,IAAMC,EAAoB9E,IAAOC,IAAVC,IAGnB,GAeoBE,kBAAQ,SAAU,GAwBlBA,kBAAQ,SAAU,GACvB,SAAA3B,GAAK,MAA2B,QAAtBA,EAAM,YAAwB,UAAY,KACnD,SAAAA,GAAK,MAA2B,QAAtBA,EAAM,YAAwB,IAAM,WA2BjD2B,kBAAQ,YAAa,GAUVA,kBAAQ,SAAU,GACvB,SAAA3B,GAAK,MACI,QAAtBA,EAAM,YAAwB,UAAY,QAC5B,SAAAA,GAAK,MACG,QAAtBA,EAAM,YAAwB,OAAS,WAEvC0B,cACAG,cAWe,SAAA7B,GAAK,MACI,QAAtBA,EAAM,YAAwB,UAAY,KAC5B,SAAAA,GAAK,MACG,QAAtBA,EAAM,YAAwB,IAAM,WAI7B2B,kBAAQ,UAAW,GACRA,kBAAQ,YAAa,GAKvBA,kBAAQ,UAAW,GAIxB,SAAA3B,GAAK,MACI,QAAtBA,EAAM,YAAwB,UAAY,QAC5B,SAAAA,GAAK,MACG,QAAtBA,EAAM,YAAwB,OAAS,WACvC0B,YAAa,OACbG,cAWoBF,kBAAQ,UAAW,IAyF3C2E,EAAkBvE,YAAcsE,aChOGhF,mBCaxBkF,EAfD,CACZC,kBAAmB,oBACnBC,eAAgB,WAEd,OAAO,SAACC,GAENA,EAAS,CACPvF,KAAM,mBCkBVwF,GAHFC,IALFjC,cAKEiC,IAJFC,WAIED,IAHF3D,YAGE2D,IAFF1G,cAEE0G,IADFE,WAGkBC,IAAZC,oMAIJjH,KAAKC,MAAMyG,kDAIJ,IAAAQ,EAWHlH,KAAKC,MARPkH,SAHKC,GAAAF,OAAA,IAAAA,EAUD,GAVCA,GAKHG,iBAEEC,GAPCF,OAAA,IAAAA,EASC,GATDA,GAODE,kBAMNC,QAAQC,IAAI,qBAAsBF,GAb3B,IAAAvH,EAyBHC,KAAKC,MARPkF,EAjBKpF,EAiBLoF,SACAR,EAlBK5E,EAkBL4E,UAIAzB,GAtBKnD,EAmBL0H,SAnBK1H,EAoBL6E,cApBK7E,EAqBL+G,WArBK/G,EAsBLmD,aAKIwE,GA3BC3H,EAuBLI,cAvBKJ,EAwBLgH,WAGsBpC,EACpBQ,EAASE,OAAO,SAAAnF,GAAO,OAAIA,EAAQe,KAAO0D,IAAW,GACrD,MAEJ4C,QAAQC,IAAI,kBAAkBE,EAAgBxE,GAM9C,OAGE4B,EAAArE,EAAAC,cAAC6F,EAAD,CACElF,UAAU,qBACVsG,MAAO,CAAEC,WAAY,SAGrB9C,EAAArE,EAAAC,cAACmH,EAAA,EAAD,CAAQxG,UAAU,iCApDJC,cAsHPwG,sBALS,SAAArD,GACtB,OAAOA,GAI+B+B,EAAzBsB,CAAkClB","file":"static/js/31.f6dbb366.chunk.js","sourcesContent":["import { Upload } from 'antd';\n\nexport default Upload;","import React, { Component } from 'react';\nimport Popconfirm from '../feedback/popconfirm';\nimport Button from '../uielements/button';\nimport notification from '../notification';\n\nexport default class extends Component {\n  render() {\n    const { contact, deleteContact } = this.props;\n    let name = '';\n    if (contact.firstName) {\n      name = `${contact.firstName} `;\n    }\n    if (contact.lastName) {\n      name = `${name}${contact.lastName}`;\n    }\n    if (!name) {\n      name = 'No Name';\n    }\n    return (\n      <Popconfirm\n        title={`Sure to delete ${name}?`}\n        okText=\"DELETE\"\n        cancelText=\"No\"\n        onConfirm={() => {\n          notification('error', `${name} Deleted`, '');\n          deleteContact(contact.id);\n        }}\n      >\n        <Button icon=\"close\" type=\"button\" className=\"isoDeleteBtn\" />\n      </Popconfirm>\n    );\n  }\n}\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\nimport { transition, borderRadius, boxShadow } from '../../settings/style-util';\nimport WithDirection from '../../settings/withDirection';\n\nconst WDContactCardWrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 145px);\n  padding: 0 35px;\n  display: -webkit-flex;\n  display: -ms-flex;\n  display: flex;\n\n  @media only screen and (max-width: 600px) {\n    flex-direction: column;\n  }\n\n  @media only screen and (max-width: 767px) {\n    padding: 0 20px;\n  }\n\n  @media only screen and (min-width: 767px) and (max-width: 990px) {\n    flex-direction: column;\n  }\n\n  .isoContactCardHead {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 120px;\n    flex-shrink: 0;\n    margin-right: ${props =>\n      props['data-rtl'] === 'rtl' ? 'inherit' : '50px'};\n    margin-left: ${props => (props['data-rtl'] === 'rtl' ? '50px' : 'inherit')};\n    flex-shrink: 0;\n\n    @media only screen and (max-width: 600px) {\n      margin-bottom: 20px;\n    }\n\n    @media only screen and (min-width: 767px) and (max-width: 990px) {\n      margin-bottom: 20px;\n    }\n\n    .isoPersonImage {\n      width: 120px;\n      height: 120px;\n      display: flex;\n      flex-shrink: 0;\n      align-items: center;\n      justify-content: center;\n      margin-bottom: 10px;\n      overflow: hidden;\n      ${borderRadius('5px')};\n\n      .avatar-uploader {\n        width: 100%;\n        height: 100%;\n      }\n\n      img {\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n      }\n    }\n\n    .isoPersonName {\n      font-size: 15px;\n      font-weight: 500;\n      color: ${palette('text', 0)};\n      line-height: 1.5;\n      margin: 0;\n    }\n  }\n\n  .isoContactInfoWrapper {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n\n    @media only screen and (max-width: 767px) {\n      padding: 20px 0;\n    }\n\n    .isoContactCardInfos {\n      width: 100%;\n      display: flex;\n      flex-shrink: 0;\n      align-items: baseline;\n      flex-direction: row;\n      margin-bottom: 15px;\n\n      @media only screen and (max-width: 430px) {\n        flex-direction: column;\n        margin-bottom: 20px;\n      }\n\n      .isoInfoLabel {\n        font-size: 14px;\n        font-weight: 500;\n        color: ${palette('text', 0)};\n        line-height: 1.5;\n        margin: 0;\n        margin-right: ${props =>\n          props['data-rtl'] === 'rtl' ? 'inherit' : '15px'};\n        margin-left: ${props =>\n          props['data-rtl'] === 'rtl' ? '15px' : 'inherit'};\n        text-align: ${props =>\n          props['data-rtl'] === 'rtl' ? 'right' : 'left'};\n        min-width: 80px;\n        position: relative;\n\n        @media only screen and (max-width: 430px) {\n          margin-bottom: 5px;\n          margin-right: ${props =>\n            props['data-rtl'] === 'rtl' ? 'inherit' : '0'};\n          margin-left: ${props =>\n            props['data-rtl'] === 'rtl' ? '0' : 'inherit'};\n          padding-right: ${props =>\n            props['data-rtl'] === 'rtl' ? 'inherit' : '10px'};\n          padding-left: ${props =>\n            props['data-rtl'] === 'rtl' ? '10px' : 'inherit'};\n          min-width: 0;\n        }\n\n        &::after {\n          content: ':';\n          position: absolute;\n          right: ${props => (props['data-rtl'] === 'rtl' ? 'inherit' : '0')};\n          left: ${props => (props['data-rtl'] === 'rtl' ? '0' : 'inherit')};\n        }\n      }\n\n      .isoInfoDetails {\n        font-size: 14px;\n        font-weight: 400;\n        color: ${palette('text', 2)};\n        line-height: 1.5;\n        margin: 0;\n        text-align: ${props =>\n          props['data-rtl'] === 'rtl' ? 'right' : 'left'};\n      }\n\n      input {\n        font-size: 14px;\n        font-weight: 400;\n        color: ${palette('text', 2)};\n        line-height: inherit;\n        height: 36px;\n        padding: 0 15px;\n        margin: 0;\n        border: 1px solid ${palette('border', 0)};\n        outline: 0 !important;\n        overflow: hidden;\n        background-color: #ffffff;\n        ${boxShadow('none')};\n        ${borderRadius('3px')};\n        ${transition()};\n\n        &:focus {\n          border-color: ${palette('primary', 0)};\n          ${boxShadow('0 0 0 2px rgba(68, 130, 255, 0.2)')};\n          outline: 0;\n        }\n\n        &:hover {\n          border-color: ${palette('primary', 0)};\n        }\n\n        &::-webkit-input-placeholder {\n          color: ${palette('grayscale', 0)};\n        }\n\n        &:-moz-placeholder {\n          color: ${palette('grayscale', 0)};\n        }\n\n        &::-moz-placeholder {\n          color: ${palette('grayscale', 0)};\n        }\n        &:-ms-input-placeholder {\n          color: ${palette('grayscale', 0)};\n        }\n      }\n\n      textarea {\n        font-size: 14px;\n        font-weight: 400;\n        color: ${palette('text', 2)};\n        line-height: 24px;\n        height: 210px;\n        padding: 10px 15px;\n        margin: 0;\n        border: 1px solid ${palette('border', 0)};\n        outline: 0 !important;\n        background-color: #ffffff;\n        ${boxShadow('none')};\n        ${borderRadius('3px')};\n        ${transition()};\n\n        &:focus {\n          border-color: ${palette('primary', 0)};\n          ${boxShadow('0 0 0 2px rgba(68, 130, 255, 0.2)')};\n          outline: 0;\n        }\n\n        &:hover {\n          border-color: ${palette('primary', 0)};\n        }\n\n        &::-webkit-input-placeholder {\n          color: ${palette('grayscale', 0)};\n        }\n\n        &:-moz-placeholder {\n          color: ${palette('grayscale', 0)};\n        }\n\n        &::-moz-placeholder {\n          color: ${palette('grayscale', 0)};\n        }\n        &:-ms-input-placeholder {\n          color: ${palette('grayscale', 0)};\n        }\n      }\n    }\n  }\n`;\n\nconst ContactCardWrapper = WithDirection(WDContactCardWrapper);\n\nexport { ContactCardWrapper };\n","import React, { Component } from 'react';\nimport { ContactCardWrapper } from './contactCard.style';\n\nexport default class extends Component {\n  render() {\n    const { contact, otherAttributes } = this.props;\n    const name = contact.name ? contact.name : 'No Name';\n    const extraInfos = [];\n    otherAttributes.forEach(attribute => {\n      const value = contact[attribute.value];\n      if (value) {\n        extraInfos.push(\n          <div className=\"isoContactCardInfos\" key={attribute.value}>\n            <p className=\"isoInfoLabel\">{`${attribute.title}`}</p>\n            <p className=\"isoInfoDetails\">{value}</p>\n          </div>\n        );\n      }\n    });\n    return (\n      <ContactCardWrapper className=\"isoContactCard\">\n        <div className=\"isoContactCardHead\">\n          <div className=\"isoPersonImage\">\n            {contact.avatar ? <img alt=\"#\" src={contact.avatar} /> : ''}\n          </div>\n          <h1 className=\"isoPersonName\">{name}</h1>\n        </div>\n        <div className=\"isoContactInfoWrapper\">{extraInfos}</div>\n      </ContactCardWrapper>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Icon } from 'antd';\nimport Input, { Textarea } from '../uielements/input';\nimport Upload from '../uielements/upload';\nimport notification from '../notification';\nimport { ContactCardWrapper } from './contactCard.style';\nimport './upload.css';\n\nfunction beforeUpload(file) {\n\n  \n  const isJPG = file.type === 'image/jpeg';\n  if (!isJPG) {\n    notification('error', 'You can only upload JPG file!', '');\n    return false;\n  }\n  const isLt2M = file.size / 1024 / 1024 < 2;\n  if (!isLt2M) {\n    notification('error', 'Image must smaller than 2MB!', '');\n    return false;\n  }\n  notification('success', 'Image uploaded successfully!', '');\n  return true;\n}\nexport default class extends Component {\n  render() {\n    const { contact, otherAttributes } = this.props;\n    const name = contact.name ? contact.name : 'No Name';\n    const extraInfos = [];\n    const names = [\n      { value: 'firstName', title: 'First Name' },\n      { value: 'lastName', title: 'Last Name' }\n    ];\n    [...names, ...otherAttributes].forEach(attribute => {\n      const value = contact[attribute.value];\n      const editContact = event => {\n        contact[attribute.value] = event.target.value;\n        let name = '';\n        if (contact.firstName) {\n          name = `${contact.firstName} `;\n        }\n        if (contact.lastName) {\n          name = `${name}${contact.lastName}`;\n        }\n        contact.name = name;\n        this.props.editContact(contact);\n      };\n      if (attribute.value === 'note') {\n        extraInfos.push(\n          <div className=\"isoContactCardInfos\" key={attribute.value}>\n            <p className=\"isoInfoLabel\">{`${attribute.title}`}</p>\n            <Textarea\n              placeholder={`${attribute.title}`}\n              value={value}\n              type=\"textarea\"\n              rows={5}\n              onChange={event => editContact(event)}\n            />\n          </div>\n        );\n      } else {\n        extraInfos.push(\n          <div className=\"isoContactCardInfos\" key={attribute.value}>\n            <p className=\"isoInfoLabel\">{`${attribute.title}`}</p>\n            <Input\n              placeholder={`${attribute.title}`}\n              value={value}\n              onChange={event => editContact(event)}\n            />\n          </div>\n        );\n      }\n    });\n    return (\n      <ContactCardWrapper className=\"isoContactCard\">\n        <div className=\"isoContactCardHead\">\n          <div className=\"isoPersonImage\">\n            <Upload\n              className=\"avatar-uploader\"\n              name=\"avatar\"\n              showUploadList={false}\n              beforeUpload={beforeUpload}\n              action=\"\"\n            >\n              {contact.avatar ? (\n                <img src={contact.avatar} alt=\"\" className=\"avatar\" />\n              ) : (\n                ''\n              )}\n              <Icon type=\"plus\" className=\"avatar-uploader-trigger\" />\n            </Upload>\n          </div>\n          <h1 className=\"isoPersonName\">{name}</h1>\n        </div>\n        <div className=\"isoContactInfoWrapper\">{extraInfos}</div>\n      </ContactCardWrapper>\n    );\n  }\n}\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\nimport { transition, borderRadius, boxShadow } from '../../settings/style-util';\nimport WithDirection from '../../settings/withDirection';\n\nconst WDContactListWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n\n  .isoNoResultMsg {\n    padding: 15px 20px;\n    text-align: center;\n    color: ${palette('secondary', 2)};\n    font-weight: 500;\n    font-size: 14px;\n  }\n\n  .isoSearchBar {\n    .ant-input {\n      width: 100%;\n      font-size: 14px;\n      font-weight: 400;\n      color: ${palette('text', 0)};\n      line-height: inherit;\n      height: 69px;\n      padding: 0 20px;\n      padding-left: ${props =>\n        props['data-rtl'] === 'rtl' ? 'inherit' : '35px'};\n      padding-right: ${props =>\n        props['data-rtl'] === 'rtl' ? '35px' : 'inherit'};\n      border: 0;\n      border-bottom: 1px solid ${palette('border', 0)};\n      outline: 0 !important;\n      overflow: hidden;\n      background-color: #ffffff;\n      ${boxShadow('none')};\n      ${borderRadius()};\n      ${transition()};\n\n      @media only screen and (max-width: 767px) {\n        height: 50px;\n      }\n\n      &:hover,\n      &:focus {\n        border-color: ${palette('border', 0)} !important;\n      }\n\n      &::-webkit-input-placeholder {\n        color: ${palette('grayscale', 0)};\n      }\n\n      &:-moz-placeholder {\n        color: ${palette('grayscale', 0)};\n      }\n\n      &::-moz-placeholder {\n        color: ${palette('grayscale', 0)};\n      }\n      &:-ms-input-placeholder {\n        color: ${palette('grayscale', 0)};\n      }\n    }\n  }\n\n  .ant-input-suffix {\n    left: 10px;\n    right: auto;\n    color: ${palette('grayscale', 0)};\n  }\n\n  .isoContactList {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    max-height: 100%;\n    overflow: hidden;\n    overflow-y: auto;\n\n    .contactListScrollbar {\n      height: calc(100vh - 200px);\n\n      @media only screen and (max-width: 767px) {\n        max-height: 60vh;\n      }\n    }\n\n    .isoSingleContact {\n      width: 100%;\n      margin: 0;\n      display: flex;\n      align-items: center;\n      justify-content: flex-start;\n      flex-shrink: 0;\n      padding: 15px 20px;\n      padding-right: ${props =>\n        props['data-rtl'] === 'rtl' ? '20px' : '35px'};\n      padding-left: ${props => (props['data-rtl'] === 'rtl' ? '35px' : '20px')};\n      border-bottom: 1px solid ${palette('border', 0)};\n      text-align: ${props => (props['data-rtl'] === 'rtl' ? 'right' : 'left')};\n      position: relative;\n      cursor: pointer;\n\n      &.active {\n        background-color: ${palette('secondary', 1)};\n      }\n\n      &:last-child {\n        border-bottom: 0;\n      }\n\n      .isoAvatar {\n        width: 35px;\n        height: 35px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        margin-right: ${props =>\n          props['data-rtl'] === 'rtl' ? 'inherit' : '15px'};\n        margin-left: ${props =>\n          props['data-rtl'] === 'rtl' ? '15px' : 'inherit'};\n        flex-shrink: 0;\n        overflow: hidden;\n        ${borderRadius('50%')};\n\n        img {\n          width: 100%;\n          height: 100%;\n          object-fit: cover;\n        }\n      }\n\n      .isoContactName {\n        h3 {\n          font-size: 15px;\n        }\n      }\n\n      .isoNoteText {\n        width: calc(100% - 60px);\n        margin-right: ${props =>\n          props['data-rtl'] === 'rtl' ? 'inherit' : '20px'};\n        margin-left: ${props =>\n          props['data-rtl'] === 'rtl' ? '20px' : 'inherit'};\n        padding: 20px 0;\n        cursor: pointer;\n\n        h3 {\n          width: 100%;\n          white-space: nowrap;\n          text-overflow: ellipsis;\n          overflow: hidden;\n          color: ${palette('secondary', 2)};\n          font-weight: 500;\n        }\n\n        .isoNoteCreatedDate {\n          font-size: 13px;\n          color: ${palette('grayscale', 0)};\n        }\n      }\n\n      .isoDeleteBtn {\n        width: 24px;\n        height: 24px;\n        background-color: transparent;\n        flex-shrink: 0;\n        position: absolute;\n        top: 20px;\n        right: ${props => (props['data-rtl'] === 'rtl' ? 'inherit' : '5px')};\n        left: ${props => (props['data-rtl'] === 'rtl' ? '5px' : 'inherit')};\n        padding: 0;\n        border: 0;\n        font-size: 14px;\n        color: ${palette('grayscale', 0)};\n        ${transition()};\n\n        &:hover {\n          color: ${palette('primary', 0)};\n        }\n      }\n    }\n\n    .isoNotlistNotice {\n      font-size: 14px;\n      font-weight: 400;\n      color: ${palette('grayscale', 0)};\n      line-height: inherit;\n      padding: 30px 0;\n    }\n  }\n`;\n\nconst ContactListWrapper = WithDirection(WDContactListWrapper);\n\nexport { ContactListWrapper };\n","import React, { Component } from 'react';\nimport IntlMessages from '../utility/intlMessages';\nimport { InputSearch } from '../uielements/input';\nimport DeleteButton from './deleteButton';\nimport { PropTypes } from 'prop-types';\nimport { ContactListWrapper } from './contactList.style';\nimport Scrollbar from '../utility/customScrollBar';\n\nfunction filterContacts(contacts, search) {\n  search = search.toUpperCase();\n  return search\n    ? contacts.filter(contact => contact.name.toUpperCase().includes(search))\n    : contacts;\n}\n\nexport default class ContactList extends Component {\n  constructor(props) {\n    super(props);\n    this.singleContact = this.singleContact.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.state = {\n      search: '',\n    };\n  }\n  singleContact(contact) {\n    const { seectedId, deleteContact, changeContact } = this.props;\n    const activeClass = seectedId === contact.id ? 'active' : '';\n    const onChange = () => changeContact(contact.id);\n    return (\n      <div\n        key={contact.id}\n        className={`${activeClass} isoSingleContact`}\n        onClick={onChange}\n      >\n        <div className=\"isoAvatar\">\n          {contact.avatar ? <img alt=\"#\" src={contact.avatar} /> : ''}\n        </div>\n        <div className=\"isoContactName\">\n          <h3>{contact.name ? contact.name : 'No Name'}</h3>\n        </div>\n        <DeleteButton deleteContact={deleteContact} contact={contact} />\n      </div>\n    );\n  }\n  onChange(event) {\n    this.setState({ search: event.target.value });\n  }\n  render() {\n    const { search } = this.state;\n    const contacts = filterContacts(this.props.contacts, search);\n    return (\n      <ContactListWrapper className=\"isoContactListWrapper\">\n        <InputSearch\n          placeholder={this.context.intl.formatMessage({\n            id: 'contactlist.searchContacts',\n          })}\n          value={search}\n          onChange={this.onChange}\n          className=\"isoSearchBar\"\n        />\n        {contacts && contacts.length > 0 ? (\n          <div className=\"isoContactList\">\n            <Scrollbar className=\"contactListScrollbar\">\n              {contacts.map(contact => this.singleContact(contact))}\n            </Scrollbar>\n          </div>\n        ) : (\n          <span className=\"isoNoResultMsg\">\n            {<IntlMessages id=\"Component.contacts.noOption\" />}\n          </span>\n        )}\n      </ContactListWrapper>\n    );\n  }\n}\n\nContactList.contextTypes = {\n  intl: PropTypes.object.isRequired,\n};\n","export const otherAttributes = [\n \n  { title: 'First Name', value: 'firstName', type: 'phoneNumber' },\n  { title: 'Last Name', value: 'lastName', type: 'phoneNumber' },\n  { title: 'Email', value: 'mobile', type: 'phoneNumber' },\n  { title: 'Gender', value: 'home', type: 'phoneNumber' },\n  { title: 'Status', value: 'company', type: 'company' },\n  { title: 'SG Handicap', value: 'work', type: 'phoneNumber' }\n  \n];\n\nconst contactList = JSON.parse(\n  `[{\n  \"id\": 22143,\n  \"avatar\": \"https://s3.amazonaws.com/uifaces/faces/twitter/dvdwinden/128.jpg\",\n  \"firstName\": \"Benjamin\",\n  \"lastName\": \"Jacobi\",\n  \"name\": \"Benjamin Jacobi\",\n  \"mobile\": \"8888888888\",\n  \"home\": \"555555555\",\n  \"company\": \"Casper Inc\",\n  \"work\": \"777777777777\"\n}]`\n);\n\nexport default class fakeData {\n  constructor(size = 10) {\n    this.size = size;\n    this.datas = [];\n  }\n  dataModel(index) {\n    return contactList[index];\n  }\n  getObjectAt(index) {\n    if (index < 0 || index > this.size) {\n      return undefined;\n    }\n    if (this.datas[index] === undefined) {\n      this.datas[index] = this.dataModel(index);\n    }\n    return this.datas[index];\n  }\n  getAll() {\n    if (this.datas.length < this.size) {\n      for (let i = 0; i < this.size; i++) {\n        this.getObjectAt(i);\n      }\n    }\n    return this.datas\n      .slice()\n      .sort(\n        (contact1, contact2) =>\n          `${contact1.firstName}${contact1.LastName}`.toUpperCase() >\n          `${contact2.firstName}${contact2.LastName}`.toUpperCase()\n      );\n  }\n\n  getSize() {\n    return this.size;\n  }\n}\n","import styled from \"styled-components\";\nimport { palette } from \"styled-theme\";\nimport { transition, borderRadius } from \"../../settings/style-util\";\nimport WithDirection from \"../../settings/withDirection\";\n\nconst WDContactsWrapper = styled.div`\n  padding: 50px 35px;\n  display: flex;\n  ${\"\" /* max-height: calc(100vh - 130px); */} @media only screen and (max-width: 767px) {\n    padding: 50px 20px;\n    flex-direction: column;\n    height: auto;\n  }\n\n  @media only screen and (min-width: 767px) and (max-width: 990px) {\n    padding: 40px 30px;\n  }\n\n  .isoContactListBar {\n    display: flex;\n    flex-direction: column;\n    flex-shrink: 0;\n    background: #ffffff;\n    border: 1px solid ${palette(\"border\", 0)};\n    width: 320px;\n    overflow: hidden;\n    overflow-y: auto;\n\n    @media only screen and (max-width: 767px) {\n      width: auto !important;\n      margin-bottom: 20px;\n      min-width: 0 !important;\n      max-width: 100% !important;\n      flex: 0 !important;\n    }\n\n    @media only screen and (min-width: 767px) and (max-width: 990px) {\n      width: 270px !important;\n      flex: 0 0 270px !important;\n    }\n  }\n\n  .isoContactBoxWrapper {\n    width: 100%;\n    display: flex;\n    justify-content: flex-start;\n    background-color: #ffffff;\n    border: 1px solid ${palette(\"border\", 0)};\n    border-left: ${props => (props[\"data-rtl\"] === \"rtl\" ? \"inherit\" : \"0\")};\n    border-right: ${props => (props[\"data-rtl\"] === \"rtl\" ? \"0\" : \"inherit\")};\n    position: relative;\n\n    .isoContactBox {\n      width: 100%;\n      height: 100%;\n    }\n\n    .contactBoxScrollbar {\n      height: calc(100vh - 225px);\n    }\n\n    .isoContactControl {\n      width: 100%;\n      display: flex;\n      align-items: center;\n      justify-content: flex-start;\n      flex-shrink: 0;\n      padding: 30px;\n      background-color: #ffffff;\n\n      @media only screen and (max-width: 767px) {\n        padding: 30px 20px;\n      }\n\n      button:not(.isoAddContactBtn) {\n        font-size: 16px;\n        color: ${palette(\"secondary\", 0)};\n        width: 35px;\n        height: 35px;\n        display: flex;\n        align-items: center;\n        text-align: center;\n        justify-content: center;\n        background-color: #ffffff;\n        outline: 0;\n        padding: 0;\n        border: 1px solid ${palette(\"border\", 0)};\n        margin-left: ${props =>\n          props[\"data-rtl\"] === \"rtl\" ? \"inherit\" : \"-1px\"};\n        margin-right: ${props =>\n          props[\"data-rtl\"] === \"rtl\" ? \"-1px\" : \"inherit\"};\n        cursor: pointer;\n        ${borderRadius()};\n        ${transition()};\n\n        i {\n          width: 100%;\n        }\n\n        span {\n          display: none;\n        }\n\n        &:first-child {\n          margin-left: ${props =>\n            props[\"data-rtl\"] === \"rtl\" ? \"inherit\" : \"0\"};\n          margin-right: ${props =>\n            props[\"data-rtl\"] === \"rtl\" ? \"0\" : \"inherit\"};\n        }\n\n        &:hover {\n          color: ${palette(\"primary\", 0)};\n          background-color: ${palette(\"grayscale\", 7)};\n        }\n      }\n\n      .isoAddContactBtn {\n        background-color: ${palette(\"primary\", 0)};\n        border: 0;\n        height: 30px;\n        padding: 0 15px;\n        margin-left: ${props =>\n          props[\"data-rtl\"] === \"rtl\" ? \"inherit\" : \"auto\"};\n        margin-right: ${props =>\n          props[\"data-rtl\"] === \"rtl\" ? \"auto\" : \"inherit\"};\n        ${borderRadius(\"3px\")};\n        ${transition()};\n\n        span {\n          font-size: 12px;\n          font-weight: 400;\n          padding: 0;\n          text-transform: uppercase;\n          color: #ffffff;\n        }\n\n        &:hover {\n          background-color: ${palette(\"primary\", 1)};\n        }\n      }\n    }\n    .jaMgbw .isoContactInfoWrapper .isoContactCardInfos {\n      width: 100%;\n      display: -webkit-box;\n      display: -webkit-flex;\n      display: -ms-flexbox;\n      display: flex;\n      -webkit-flex-shrink: 0;\n      -ms-flex-negative: 0;\n      flex-shrink: 0;\n      -webkit-align-items: baseline;\n      -webkit-box-align: baseline;\n      -ms-flex-align: baseline;\n      align-items: baseline;\n      -webkit-flex-direction: row;\n      -ms-flex-direction: row;\n      flex-direction: row;\n      margin-bottom: 15px;\n  }\n\n  .jaMgbw {\n    width: 100%;\n    height: calc(100% - 145px);\n    padding: 0 35px;\n    display: -webkit-flex;\n    display: -ms-flex;\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -ms-flexbox;\n    display: flex;\n}\n\n    .edit-contact-wrapper {\n      padding:20px;\n      width: 100%;\n    }\n    .editcontact-field  {\n      margin-bottom: 20px;\n    }\n  \n    .editcontact-field  input[type=\"radio\"]{\n      margin-right: 20px;\n      margin-left:10px;\n      vertical-align: middle;\n    }\n    .editcontact-field label {\n      width: 20%;\n      margin-right: 20px;\n      min-width: 80px;\n      margin-right: 20px;\n      display: inline-block;\n    }\n\n    .editcontact-field input[type=\"text\"], select{\n      font-size: 14px;\n      font-weight: 400;\n      color: #979797;\n      line-height: inherit;\n      height: 36px;\n      padding: 0 15px;\n      margin: 0;\n      border: 1px solid #e9e9e9;\n      outline: 0 !important;\n      overflow: hidden;\n      background-color: #ffffff;\n      -webkit-box-shadow: none;\n      -moz-box-shadow: none;\n      box-shadow: none;\n      -webkit-border-radius: 3px;\n      -moz-border-radius: 3px;\n      -ms-transition: 3px;\n      -o-border-radius: 3px;\n      border-radius: 3px;\n      -webkit-transition: all 0.3s cubic-bezier(0.215,0.61,0.355,1);\n      -moz-transition: all 0.3s cubic-bezier(0.215,0.61,0.355,1);\n      -ms-transition: all 0.3s cubic-bezier(0.215,0.61,0.355,1);\n      -o-transition: all 0.3s cubic-bezier(0.215,0.61,0.355,1);\n      -webkit-transition: all 0.3s cubic-bezier(0.215,0.61,0.355,1);\n      transition: all 0.3s cubic-bezier(0.215,0.61,0.355,1);\n      box-sizing: content-box;\n      width: 62%;\n    }\n\n  }\n`;\n\nconst ContactsWrapper = WithDirection(WDContactsWrapper);\n\nexport { ContactsWrapper };\n","import React, { Component } from \"react\";\n\nexport default class EditProfile extends Component { \n    handleChange = (event) => {\n        this.setState({value: event.target.value});\n      }\n    render() {\n        return(\n           <div className=\"isoContactCard sc-jzJRlG jaMgbw \">\n      <div className=\"isoContactCardHead\"><div className=\"isoPersonImage\"><img alt=\"#\" src=\"https://s3.amazonaws.com/uifaces/faces/twitter/dvdwinden/128.jpg\" /></div><h1 className=\"isoPersonName\">Benjamin Jacobi</h1></div>\n          <div className=\"isoContactInfoWrapper edit-contact-wrapper\">\n            \n            <div className=\"editcontact-field\">\n                <label>First Name</label>\n                <input type=\"text\" value=\"shashank\" onChange={this.handleChange}  />\n            </div>\n            <div className=\"editcontact-field\">\n                <label>Last Name</label>\n                <input type=\"text\" value=\"Jaiswal\" onChange={this.handleChange}  />\n            </div>\n            <div className=\"editcontact-field\">\n                <label>First Name</label>\n                <input type=\"text\" value=\"shashank@gmail.com\" onChange={this.handleChange}  />\n            </div>\n            <div className=\"editcontact-field\">\n                <label>First Name</label>\n                MALE<input type=\"radio\" name=\"gender\" value=\"male\"  onChange={this.handleChange} />\n                Female<input type=\"radio\" name=\"gender\" value=\"female\"  onChange={this.handleChange} />\n            </div>\n            <div className=\"editcontact-field\">\n                <label>SG Handicap</label>\n                Yes<input type=\"radio\" name=\"handicap\" value=\"Yes\"  onChange={this.handleChange}/>\n                No<input type=\"radio\" name=\"handicap\" value=\"No\"  onChange={this.handleChange}/>\n            </div>\n         \n            <div className=\"editcontact-field\">\n                <label>Status </label>\n               <select  onChange={this.handleChange}>\n                    <option value=\"grapefruit\">AMATEUR</option>\n                    <option value=\"lime\">PRO</option>\n                    <option value=\"coconut\">COACH</option>\n                    <option value=\"mango\">TEAM COACH</option>\n                    <option value=\"mango\">INSTITUTIONS</option>\n                </select>\n            </div>\n        </div>\n        </div>\n        )\n    }\n}","const actions = {\n    load_data_profile: \"LOAD_DATA_PROFILE\",\n    getDataProfile: () => {\n      //console.log(\"community data called\");\n      return (dispatch) => {\n       // console.log(\"dispatch called\");\n        dispatch({\n          type: \"GET_PROFILE\"\n        })\n      }\n    }\n  \n  \n  }\n  \n  export default actions","import React, { Component } from \"react\";\n\nimport contactAction from \"../../redux/contacts/actions\";\nimport { Layout, Icon } from \"antd\";\nimport Button from \"../../components/uielements/button\";\nimport ContactList from \"../../components/contacts/contactList\";\nimport SingleContactView from \"../../components/contacts/singleView\";\nimport EditContactView from \"../../components/contacts/editView\";\nimport DeleteButton from \"../../components/contacts/deleteButton\";\nimport { otherAttributes } from \"./fakeData\";\nimport IntlMessages from \"../../components/utility/intlMessages\";\nimport { ContactsWrapper } from \"./contacts.style\";\nimport Scrollbar from \"../../components/utility/customScrollBar.js\";\nimport EditProfile from \"./editProfile\";\nimport { connect } from \"react-redux\";\nimport actions from './../../redux/Profile/actions';\nconst {\n  changeContact,\n  addContact,\n  editContact,\n  deleteContact,\n  viewChange\n} = contactAction;\n\nconst { Content } = Layout;\nclass Profile extends Component {\n\n  componentDidMount() {\n    this.props.getDataProfile();\n  }\n\n   \n  render() {\n\n    const {\n      Overview:\n      {\n        recollectionData:\n        {\n          data_recollection,\n          \n        } = []\n      } = []\n    } = this.props;\n\n    console.log(\"redux profile data\", data_recollection)\n\n\n    const {\n      contacts,\n      seectedId,\n      editView,\n      changeContact,\n      addContact,\n      editContact,\n      deleteContact,\n      viewChange\n    } = this.props;\n    \n    const selectedContact = seectedId\n      ? contacts.filter(contact => contact.id === seectedId)[0]\n      : null;\n    const onVIewChange = () => viewChange(!editView);\n    console.log(\"selectedContact\",selectedContact,editContact);\n    const myContact = {\n        firstName:\"asdasd\",\n        lastName:\"aaa\",\n        email:\"abc@gmail.com\",\n    };\n    return (\n\n\n      <ContactsWrapper\n        className=\"isomorphicContacts\"\n        style={{ background: \"none\" }}\n      >\n       \n        <Layout className=\"isoContactBoxWrapper\">\n          {/* {selectedContact ? (\n            <Content className=\"isoContactBox\">\n              <div className=\"isoContactControl\">\n                <Button type=\"button\" onClick={onVIewChange}>\n                  {editView ? <Icon type=\"check\" /> : <Icon type=\"edit\" />}{\" \"}\n                </Button>\n                <DeleteButton\n                  deleteContact={deleteContact}\n                  contact={selectedContact}\n                />\n       \n              </div>\n\n              <Scrollbar className=\"contactBoxScrollbar\">\n                {editView ? (\n                  <EditProfile contact={myContact} />\n                ) : (\n                  <SingleContactView\n                    contact={selectedContact}\n                    otherAttributes={otherAttributes}\n                  />\n                )}\n              </Scrollbar>\n            </Content>\n          ) : (\n            <div className=\"isoContactControl\">\n              <Button\n                type=\"primary\"\n                onClick={addContact}\n                className=\"isoAddContactBtn\"\n              >\n                <IntlMessages id=\"contactlist.addNewContact\" />\n              </Button>\n            </div>\n          )} */}\n        </Layout>\n      </ContactsWrapper>\n\n      \n    );\n  }\n}\n\n// function mapStateToProps(state) {\n//     console.log(\"satte\",state);\n//   const { contacts, seectedId, editView } = state.Contacts;\n//   return {\n//     contacts,\n//     seectedId,\n//     editView\n//   };\n// }\n// export default connect(mapStateToProps, {\n//   changeContact,\n//   addContact,\n//   editContact,\n//   deleteContact,\n//   viewChange\n// })(Profile);\n\nconst mapStateToProps = state => {\n  return state;\n};\n\n\nexport default connect(mapStateToProps, actions)(Profile);\n"],"sourceRoot":""}