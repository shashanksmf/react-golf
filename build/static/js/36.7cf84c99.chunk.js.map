{"version":3,"sources":["containers/Tables/antTables/demo.style.js","containers/Tables/antTables/index.js"],"names":["TableDemoStyle","styled","div","_templateObject","palette","dataList","fakeData","AntTable","tableInfo","Component","value","TableViews","react_default","a","createElement","_this","this","layoutWrapper","demo_style","className","tabs","tableinfos","map","tab","title","key","renderTable"],"mappings":"ygBAGA,IAoBeA,EApBQC,IAAOC,IAAVC,IAOLC,kBAAQ,YAAa,GAGRA,kBAAQ,UAAW,GAI9BA,kBAAQ,UAAW,gMCTpC,IAAMC,EAAW,IAAIC,IAAS,IAETC,sLACPC,GACV,IAAIC,EACJ,OAAQD,EAAUE,OAChB,IAAK,WACHD,EAAYE,WACZ,MACF,IAAK,aACHF,EAAYE,aACZ,MACF,IAAK,WACHF,EAAYE,WACZ,MACF,IAAK,YACHF,EAAYE,YACZ,MACF,IAAK,iBACHF,EAAYE,iBACZ,MACF,QACEF,EAAYE,aAEhB,OAAOC,EAAAC,EAAAC,cAACL,EAAD,CAAWD,UAAWA,EAAWH,SAAUA,qCAE3C,IAAAU,EAAAC,KACP,OACEJ,EAAAC,EAAAC,cAACG,EAAA,QAAD,KACEL,EAAAC,EAAAC,cAACI,EAAD,CAAgBC,UAAU,oBACxBP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMD,UAAU,sBACbE,IAAWC,IAAI,SAAAd,GAAS,OACvBI,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAASG,IAAKf,EAAUgB,MAAOC,IAAKjB,EAAUE,OAC3CK,EAAKW,YAAYlB,gBA/BIC","file":"static/js/36.7cf84c99.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { palette } from 'styled-theme';\n\nconst TableDemoStyle = styled.div`\n  .ant-tabs-content {\n    margin-top: 40px;\n  }\n\n  .ant-tabs-nav {\n    > div {\n      color: ${palette('secondary', 2)};\n\n      &.ant-tabs-ink-bar {\n        background-color: ${palette('primary', 0)};\n      }\n\n      &.ant-tabs-tab-active {\n        color: ${palette('primary', 0)};\n      }\n    }\n  }\n`;\n\nexport default TableDemoStyle;\n","import React, { Component } from 'react';\nimport Tabs, { TabPane } from '../../../components/uielements/tabs';\nimport LayoutContentWrapper from '../../../components/utility/layoutWrapper.js';\nimport TableDemoStyle from './demo.style';\nimport fakeData from '../fakeData';\nimport { tableinfos } from './configs';\nimport * as TableViews from './tableViews/';\n\nconst dataList = new fakeData(10);\n\nexport default class AntTable extends Component {\n  renderTable(tableInfo) {\n    let Component;\n    switch (tableInfo.value) {\n      case 'sortView':\n        Component = TableViews.SortView;\n        break;\n      case 'filterView':\n        Component = TableViews.FilterView;\n        break;\n      case 'editView':\n        Component = TableViews.EditView;\n        break;\n      case 'groupView':\n        Component = TableViews.GroupView;\n        break;\n      case 'customizedView':\n        Component = TableViews.CustomizedView;\n        break;\n      default:\n        Component = TableViews.SimpleView;\n    }\n    return <Component tableInfo={tableInfo} dataList={dataList} />;\n  }\n  render() {\n    return (\n      <LayoutContentWrapper>\n        <TableDemoStyle className=\"isoLayoutContent\">\n          <Tabs className=\"isoTableDisplayTab\">\n            {tableinfos.map(tableInfo => (\n              <TabPane tab={tableInfo.title} key={tableInfo.value}>\n                {this.renderTable(tableInfo)}\n              </TabPane>\n            ))}\n          </Tabs>\n        </TableDemoStyle>\n      </LayoutContentWrapper>\n    );\n  }\n}\nexport { TableViews, tableinfos, dataList };\n"],"sourceRoot":""}