{"version":3,"sources":["components/uielements/styles/transfer.style.js","components/uielements/transfer.js","containers/Forms/Transfer/index.js"],"names":["AntTransfer","ComponentName","styled","_templateObject","palette","borderRadius","boxShadow","transition","props","WDTransfers","Transfer","Transfers","WithDirection","state","mockData","targetKeys","getMock","i","data","key","toString","title","concat","description","chosen","Math","random","push","_this","setState","filterOption","inputValue","option","indexOf","handleChange","this","react_default","a","createElement","layoutWrapper","pageHeader","intlMessages","id","box","subtitle","contentHolder","uielements_transfer","dataSource","showSearch","onChange","render","item","className","Component"],"mappings":"0jHAQA,IA6JeA,EA7JK,SAAAC,GAAa,OAAIC,YAAOD,EAAPC,CAAJC,IASTC,kBAAQ,SAAU,GAatBA,kBAAQ,YAAa,GAC1BA,kBAAQ,OAAQ,GACEA,kBAAQ,SAAU,GAQlCA,kBAAQ,OAAQ,GAcZA,kBAAQ,OAAQ,GAILA,kBAAQ,SAAU,GAIpCC,YAAa,OACbC,cACAC,cAIgBH,kBAAQ,SAAU,GAKzBA,kBAAQ,YAAa,GAIrBA,kBAAQ,YAAa,GAIrBA,kBAAQ,YAAa,GAGrBA,kBAAQ,YAAa,GASzBA,kBAAQ,YAAa,GAMRA,kBAAQ,YAAa,GAOrC,SAAAI,GAAK,MACS,QAAtBA,EAAM,YAAwB,YAAc,aAmB1BJ,kBAAQ,UAAW,GACvBA,kBAAQ,UAAW,GAefA,kBAAQ,YAAa,GACzBA,kBAAQ,SAAU,GAMnB,SAAAI,GAAK,MACM,QAAtBA,EAAM,YAAwB,iBAAmB,aAQ9C,SAAAA,GAAK,MAA2B,QAAtBA,EAAM,YAAwB,UAAY,OACrD,SAAAA,GAAK,MAA2B,QAAtBA,EAAM,YAAwB,MAAQ,qBC3JtDC,EAAcT,EAAYU,KAGjBC,EAFGC,YAAcH,sSCI9BI,MAAQ,CACNC,SAAU,GACVC,WAAY,MAKdC,QAAU,WAGR,IAFA,IAAMD,EAAa,GACbD,EAAW,GACRG,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAMC,EAAO,CACXC,IAAKF,EAAEG,WACPC,MAAK,UAAAC,OAAYL,EAAI,GACrBM,YAAW,yBAAAD,OAA2BL,EAAI,GAC1CO,OAAwB,EAAhBC,KAAKC,SAAe,GAE1BR,EAAKM,QACPT,EAAWY,KAAKT,EAAKC,KAEvBL,EAASa,KAAKT,GAEhBU,EAAKC,SAAS,CAAEf,WAAUC,kBAE5Be,aAAe,SAACC,EAAYC,GAC1B,OAAOA,EAAOT,YAAYU,QAAQF,IAAe,KAEnDG,aAAe,SAAAnB,GACba,EAAKC,SAAS,CAAEd,mGAvBhBoB,KAAKnB,2CA0BL,OACEoB,EAAAC,EAAAC,cAACC,EAAA,QAAD,KACEH,EAAAC,EAAAC,cAACE,EAAA,QAAD,KAAaJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAcC,GAAG,2BAE9BN,EAAAC,EAAAC,cAACK,EAAA,QAAD,CACEtB,MAAOe,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAcC,GAAG,yBACxBE,SAAUR,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAcC,GAAG,6BAE3BN,EAAAC,EAAAC,cAACO,EAAA,QAAD,KACET,EAAAC,EAAAC,cAACQ,EAAD,CACEC,WAAYZ,KAAKtB,MAAMC,SACvBkC,YAAU,EACVlB,aAAcK,KAAKL,aACnBf,WAAYoB,KAAKtB,MAAME,WACvBkC,SAAUd,KAAKD,aACfgB,OAAQ,SAAAC,GAAI,OAAIA,EAAK9B,OACrB+B,UAAU,iCAhDKC","file":"static/js/48.61ad26db.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\nimport {\r\n  transition,\r\n  borderRadius,\r\n  boxShadow,\r\n} from '../../../settings/style-util';\r\n\r\nconst AntTransfer = ComponentName => styled(ComponentName)`\r\n  display: flex;\r\n\r\n  @media only screen and (max-width: 560px) {\r\n    flex-direction: column;\r\n  }\r\n\r\n  .ant-transfer-list {\r\n    font-size: 13px;\r\n    border: 1px solid ${palette('border', 0)};;\r\n    background-color: #ffffff;\r\n    display: inline-block;\r\n    border-radius: 5px;\r\n    vertical-align: middle;\r\n    position: relative;\r\n    width: 180px;\r\n    height: 200px;\r\n    padding-top: 33px;\r\n\r\n    .ant-transfer-list-header {\r\n      padding: 7px 15px;\r\n      border-radius: 5px 5px 0 0;\r\n      background: ${palette('secondary', 1)};\r\n      color: ${palette('text', 1)};;\r\n      border-bottom: 1px solid ${palette('border', 0)};\r\n      overflow: hidden;\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      width: 100%;\r\n\r\n      .ant-transfer-list-header-selected {\r\n        color: ${palette('text', 1)};\r\n        font-size: 12px;\r\n      }\r\n    }\r\n\r\n    .ant-transfer-list-body {\r\n      padding-top: 38px;\r\n      .ant-transfer-list-body-search-wrapper {\r\n        padding: 5px;\r\n\r\n        .ant-input {\r\n          &.ant-transfer-list-search {\r\n            font-size: 13px;\r\n            font-weight: 400;\r\n            color: ${palette('text', 2)};\r\n            line-height: inherit;\r\n            padding: 4px 10px;\r\n            height: 28px;\r\n            border: 1px solid ${palette('border', 0)};\r\n            outline: 0 !important;\r\n            overflow: hidden;\r\n            background-color: #ffffff;\r\n            ${borderRadius('3px')};\r\n            ${boxShadow()};\r\n            ${transition()};\r\n\r\n            &:focus,\r\n            &:hover {\r\n              border-color: ${palette('border', 0)};\r\n              box-shadow: none;\r\n            }\r\n\r\n            &::-webkit-input-placeholder {\r\n              color: ${palette('grayscale', 0)};\r\n            }\r\n\r\n            &:-moz-placeholder {\r\n              color: ${palette('grayscale', 0)};\r\n            }\r\n\r\n            &::-moz-placeholder {\r\n              color: ${palette('grayscale', 0)};\r\n            }\r\n            &:-ms-input-placeholder {\r\n              color: ${palette('grayscale', 0)};\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      .ant-transfer-list-content-item {\r\n        span {\r\n          font-size: 12px;\r\n          color: ${palette('secondary', 2)};\r\n        }\r\n\r\n        &:not(.ant-transfer-list-content-item-disabled) {\r\n          &:hover {\r\n            cursor: pointer;\r\n            background-color: ${palette('secondary', 1)};\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    .ant-checkbox-wrapper:not(:last-child) {\r\n      margin: ${props =>\r\n        props['data-rtl'] === 'rtl' ? '0 0 0 8px' : '0 8px 0 0'};\r\n    }\r\n  }\r\n\r\n  .ant-transfer-operation {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n\r\n    @media only screen and (max-width: 560px) {\r\n      margin: 15px 0;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n      align-items: center;\r\n      width: 180px;\r\n    }\r\n    .ant-btn-primary {\r\n      color: #fff;\r\n      background-color: ${palette('primary', 0)};\r\n      border-color: ${palette('primary', 0)};\r\n      padding: 0 8px;\r\n    }\r\n\r\n    .ant-btn-primary.disabled,\r\n    .ant-btn-primary[disabled],\r\n    .ant-btn-primary.disabled:hover,\r\n    .ant-btn-primary[disabled]:hover,\r\n    .ant-btn-primary.disabled:focus,\r\n    .ant-btn-primary[disabled]:focus,\r\n    .ant-btn-primary.disabled:active,\r\n    .ant-btn-primary[disabled]:active,\r\n    .ant-btn-primary.disabled.active,\r\n    .ant-btn-primary[disabled].active {\r\n      color: #d8d8d8;\r\n      background-color: ${palette('grayscale', 4)};\r\n      border-color: ${palette('border', 0)};\r\n    }\r\n\r\n    .ant-btn{\r\n      .anticon-left,\r\n      .anticon-right{\r\n        transform: ${props =>\r\n          props['data-rtl'] === 'rtl' ? 'rotate(180deg)' : 'rotate(0)'};\r\n      }\r\n    }\r\n  }\r\n\r\n  .ant-transfer-list-search-action {\r\n    width: 28px;\r\n    line-height: 28px;\r\n    right: ${props => (props['data-rtl'] === 'rtl' ? 'inherit' : '4px')};\r\n    left: ${props => (props['data-rtl'] === 'rtl' ? '4px' : 'inherit')};\r\n  }\r\n}\r\n\r\n`;\r\n\r\nexport default AntTransfer;\r\n","import { Transfer } from 'antd';\r\nimport AntTransfer from './styles/transfer.style';\r\nimport WithDirection from '../../settings/withDirection';\r\n\r\nconst WDTransfers = AntTransfer(Transfer);\r\nconst Transfers = WithDirection(WDTransfers);\r\n\r\nexport default Transfers;\r\n","import React, { Component } from 'react';\r\nimport Transfer from '../../../components/uielements/transfer';\r\nimport PageHeader from '../../../components/utility/pageHeader';\r\nimport Box from '../../../components/utility/box';\r\nimport LayoutWrapper from '../../../components/utility/layoutWrapper.js';\r\nimport ContentHolder from '../../../components/utility/contentHolder';\r\nimport IntlMessages from '../../../components/utility/intlMessages';\r\n\r\nexport default class extends Component {\r\n  state = {\r\n    mockData: [],\r\n    targetKeys: []\r\n  };\r\n  componentDidMount() {\r\n    this.getMock();\r\n  }\r\n  getMock = () => {\r\n    const targetKeys = [];\r\n    const mockData = [];\r\n    for (let i = 0; i < 20; i++) {\r\n      const data = {\r\n        key: i.toString(),\r\n        title: `content${i + 1}`,\r\n        description: `description of content${i + 1}`,\r\n        chosen: Math.random() * 2 > 1\r\n      };\r\n      if (data.chosen) {\r\n        targetKeys.push(data.key);\r\n      }\r\n      mockData.push(data);\r\n    }\r\n    this.setState({ mockData, targetKeys });\r\n  };\r\n  filterOption = (inputValue, option) => {\r\n    return option.description.indexOf(inputValue) > -1;\r\n  };\r\n  handleChange = targetKeys => {\r\n    this.setState({ targetKeys });\r\n  };\r\n  render() {\r\n    return (\r\n      <LayoutWrapper>\r\n        <PageHeader>{<IntlMessages id=\"forms.transfer.header\" />}</PageHeader>\r\n\r\n        <Box\r\n          title={<IntlMessages id=\"forms.transfer.Title\" />}\r\n          subtitle={<IntlMessages id=\"forms.transfer.SubTitle\" />}\r\n        >\r\n          <ContentHolder>\r\n            <Transfer\r\n              dataSource={this.state.mockData}\r\n              showSearch\r\n              filterOption={this.filterOption}\r\n              targetKeys={this.state.targetKeys}\r\n              onChange={this.handleChange}\r\n              render={item => item.title}\r\n              className=\"isomorphicTransfer\"\r\n            />\r\n          </ContentHolder>\r\n        </Box>\r\n      </LayoutWrapper>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}