{"version":3,"sources":["components/uielements/styles/checkbox.style.js","components/uielements/checkbox.js","containers/Forms/Checkbox/index.js"],"names":["AntCheckbox","ComponentName","styled","_templateObject","palette","__webpack_require__","d","__webpack_exports__","CheckboxGroup","checkbox","Checkbox","Group","defaultCheckedList","plainOptions","state","checkedList","indeterminate","checkAll","handleOnChange","checkedValues","onChange","_this","setState","length","onCheckAllChange","e","target","checked","rowStyle","basicStyle","colStyle","gutter","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_components_utility_layoutWrapper_js__WEBPACK_IMPORTED_MODULE_11__","_components_utility_pageHeader__WEBPACK_IMPORTED_MODULE_9__","_components_utility_intlMessages__WEBPACK_IMPORTED_MODULE_14__","id","antd__WEBPACK_IMPORTED_MODULE_6__","style","justify","antd__WEBPACK_IMPORTED_MODULE_7__","md","sm","xs","_components_utility_box__WEBPACK_IMPORTED_MODULE_10__","title","subtitle","_components_utility_contentHolder__WEBPACK_IMPORTED_MODULE_12__","_components_uielements_checkbox__WEBPACK_IMPORTED_MODULE_8__","this","options","defaultValue","label","value","disabled","borderBottom","paddingBottom","Component"],"mappings":"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","file":"static/js/46.c150cfac.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { palette } from 'styled-theme';\n\nconst AntCheckbox = ComponentName => styled(ComponentName)`\n  &.ant-checkbox-wrapper {\n    font-size: 13px;\n    color: ${palette('text', 1)};\n    vertical-align: middle;\n\n    .ant-checkbox {\n      top: inherit;\n    }\n  }\n`;\n\nexport default AntCheckbox;\n","import { Checkbox } from 'antd';\nimport AntCheckbox from './styles/checkbox.style';\n\nconst checkbox = AntCheckbox(Checkbox);\nconst CheckboxGroup = Checkbox.Group;\n\nexport default checkbox;\nexport { CheckboxGroup };\n","import React, { Component } from 'react';\nimport { Row, Col } from 'antd';\nimport Checkbox, {\n  CheckboxGroup\n} from '../../../components/uielements/checkbox';\nimport PageHeader from '../../../components/utility/pageHeader';\nimport Box from '../../../components/utility/box';\nimport LayoutWrapper from '../../../components/utility/layoutWrapper.js';\nimport ContentHolder from '../../../components/utility/contentHolder';\nimport basicStyle from '../../../settings/basicStyle';\nimport IntlMessages from '../../../components/utility/intlMessages';\n\nconst defaultCheckedList = ['Apple', 'Orange'];\nconst plainOptions = ['Apple', 'Pear', 'Orange'];\nexport default class extends Component {\n  state = {\n    checkedList: defaultCheckedList,\n    indeterminate: true,\n    checkAll: false\n  };\n\n  handleOnChange = checkedValues => {};\n\n  onChange = checkedList => {\n    this.setState({\n      checkedList,\n      indeterminate:\n        !!checkedList.length && checkedList.length < plainOptions.length,\n      checkAll: checkedList.length === plainOptions.length\n    });\n  };\n  onCheckAllChange = e => {\n    this.setState({\n      checkedList: e.target.checked ? plainOptions : [],\n      indeterminate: false,\n      checkAll: e.target.checked\n    });\n  };\n\n  render() {\n    const plainOptions = ['Apple', 'Pear', 'Orange'];\n    const options = [\n      { label: 'Apple', value: 'Apple' },\n      { label: 'Pear', value: 'Pear' },\n      { label: 'Orange', value: 'Orange' }\n    ];\n    const optionsWithDisabled = [\n      { label: 'Apple', value: 'Apple' },\n      { label: 'Pear', value: 'Pear' },\n      { label: 'Orange', value: 'Orange', disabled: false }\n    ];\n    const { rowStyle, colStyle, gutter } = basicStyle;\n    return (\n      <LayoutWrapper>\n        <PageHeader>{<IntlMessages id=\"forms.checkbox.header\" />}</PageHeader>\n        <Row style={rowStyle} gutter={gutter} justify=\"start\">\n          <Col md={12} sm={12} xs={24} style={colStyle}>\n            <Box\n              title={<IntlMessages id=\"forms.checkbox.basicTitle\" />}\n              subtitle={<IntlMessages id=\"forms.checkbox.basicSubTitle\" />}\n            >\n              <ContentHolder>\n                <Checkbox onChange={this.handleOnChange}>Checkbox</Checkbox>\n              </ContentHolder>\n            </Box>\n          </Col>\n          <Col md={12} sm={12} xs={24} style={colStyle}>\n            <Box\n              title={<IntlMessages id=\"forms.checkbox.groupTitle\" />}\n              subtitle={<IntlMessages id=\"forms.checkbox.groupSubTitle\" />}\n            >\n              <ContentHolder>\n                <CheckboxGroup\n                  options={plainOptions}\n                  defaultValue={['Apple']}\n                  onChange={this.handleOnChange}\n                />\n                <br />\n                <CheckboxGroup\n                  options={options}\n                  defaultValue={['Pear']}\n                  onChange={this.handleOnChange}\n                />\n                <br />\n                <CheckboxGroup\n                  options={optionsWithDisabled}\n                  disabled\n                  defaultValue={['Apple']}\n                  onChange={this.handleOnChange}\n                />\n              </ContentHolder>\n            </Box>\n          </Col>\n        </Row>\n        <Row style={rowStyle} gutter={gutter} justify=\"start\">\n          <Col md={12} sm={12} xs={24} style={colStyle}>\n            <Box\n              title={<IntlMessages id=\"forms.checkbox.groupCheckTitle\" />}\n              subtitle={<IntlMessages id=\"forms.checkbox.groupCheckSubTitle\" />}\n            >\n              <ContentHolder>\n                <div>\n                  <div\n                    style={{\n                      borderBottom: '1px solid #E9E9E9',\n                      paddingBottom: '15px'\n                    }}\n                  >\n                    <Checkbox\n                      indeterminate={this.state.indeterminate}\n                      onChange={this.onCheckAllChange}\n                      checked={this.state.checkAll}\n                    >\n                      Check all\n                    </Checkbox>\n                  </div>\n                  <br />\n                  <CheckboxGroup\n                    options={plainOptions}\n                    value={this.state.checkedList}\n                    onChange={this.onChange}\n                  />\n                </div>\n              </ContentHolder>\n            </Box>\n          </Col>\n        </Row>\n      </LayoutWrapper>\n    );\n  }\n}\n"],"sourceRoot":""}