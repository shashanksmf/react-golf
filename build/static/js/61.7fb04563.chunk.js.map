{"version":3,"sources":["image/1.jpg","image/2.jpg","image/3.jpg","image/4.jpg","image/5.jpg","image/6.jpg","image/7.jpg","containers/Shuffle/config.js","containers/Shuffle/Toggle.js","containers/Shuffle/shuffle.style.js","containers/Shuffle/listItem.js","containers/Shuffle/index.js"],"names":["module","exports","__webpack_require__","p","articles","id","timestamp","desc","react_default","a","createElement","intlMessages","img","Img1","Img2","Img3","Img4","Img5","Img6","Img7","Toggle","_ref","clickHandler","text","icon","active","large","buttonClass","classNames","buttonToggle","noIcon","iconClass","concat","className","onClick","es_icon","type","WDSingleCardWrapper","styled","li","_templateObject","boxShadow","palette","transition","borderRadius","props","WDSortableCardWrapper","div","_templateObject2","SingleCardWrapper","WithDirection","SortableCardWrapper","listClass","this","view","style","zIndex","index","alt","src","process","moment","format","Component","_default","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","removedArticles","order","sortingMethod","enterLeaveAnimation","toggleList","bind","assertThisInitialized","toggleGrid","toggleSort","sortRotate","sortShuffle","setState","sort","b","shuffle","source","dest","_this$setState","sourceArticles","slice","destArticles","length","i","findIndex","article","splice","defineProperty","unshift","pop","_this2","map","listItem_default","assign","key","throttle","moveArticle","_this3","Shuffle_Toggle","lib_default","staggerDurationBy","duration","enterAnimation","leaveAnimation","typeName","renderArticles"],"mappings":"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","file":"static/js/61.7fb04563.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.57c4a8ee.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.b3c1af26.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.ce8b33de.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.54022705.jpg\";","module.exports = __webpack_public_path__ + \"static/media/5.5daa9a7e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/6.b0b11045.jpg\";","module.exports = __webpack_public_path__ + \"static/media/7.6f3b92ce.jpg\";","import React from 'react';\r\nimport IntlMessages from '../../components/utility/intlMessages';\r\nimport Img1 from '../../image/1.jpg';\r\nimport Img2 from '../../image/2.jpg';\r\nimport Img3 from '../../image/3.jpg';\r\nimport Img4 from '../../image/4.jpg';\r\nimport Img5 from '../../image/5.jpg';\r\nimport Img6 from '../../image/6.jpg';\r\nimport Img7 from '../../image/7.jpg';\r\n\r\nconst articles = [\r\n  {\r\n    id: 'a',\r\n    timestamp: 811396800000,\r\n    desc: <IntlMessages id=\"shuffle.descriptionOne\" />,\r\n    img: Img1,\r\n  },\r\n  {\r\n    id: 'b',\r\n    timestamp: 1108702800000,\r\n    desc: <IntlMessages id=\"shuffle.descriptionTwo\" />,\r\n    img: Img2,\r\n  },\r\n  { \r\n    id: 'c', \r\n    timestamp: 1156564800000, \r\n    desc: <IntlMessages id=\"shuffle.descriptionThree\" />, \r\n    img: Img3 \r\n  },\r\n  {\r\n    id: 'd',\r\n    timestamp: 1256443200000,\r\n    desc: <IntlMessages id=\"shuffle.descriptionFour\" />,\r\n    img: Img4,\r\n  },\r\n  {\r\n    id: 'e',\r\n    timestamp: 1286942400000,\r\n    desc: <IntlMessages id=\"shuffle.descriptionFive\" />,\r\n    img: Img5,\r\n  },\r\n\r\n  {\r\n    id: 'f',\r\n    timestamp: 1331697600000,\r\n    desc: <IntlMessages id=\"shuffle.descriptionSix\" />,\r\n    img: Img6,\r\n  },\r\n  {\r\n    id: 'g',\r\n    timestamp: 1369800000000,\r\n    desc: <IntlMessages id=\"shuffle.descriptionSeven\" />,\r\n    img: Img7,\r\n  },\r\n];\r\n\r\nexport default articles;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Icon } from 'antd';\r\n\r\nconst Toggle = ({ clickHandler, text, icon, active, large }) => {\r\n  const buttonClass = classNames({\r\n    buttonToggle: true,\r\n    noIcon: !icon,\r\n    active,\r\n    large,\r\n  });\r\n  const iconClass = `${icon}`;\r\n\r\n  return (\r\n    <button className={`isoControlBtn ${buttonClass}`} onClick={clickHandler}>\r\n      <Icon type={iconClass} />\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Toggle;\r\n","import styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\nimport { transition, borderRadius, boxShadow } from '../../settings/style-util';\r\nimport WithDirection from '../../settings/withDirection';\r\n\r\nconst WDSingleCardWrapper = styled.li`\r\n  padding: 15px;\r\n  background-color: #ffffff;\r\n  position: relative;\r\n  margin-bottom: 5px;\r\n  ${boxShadow('0 0 1px rgba(0,0,0,0.15)')};\r\n\r\n  .isoCardImage {\r\n    overflow: hidden;\r\n    flex-shrink: 0;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: ${palette('grayscale', 6)};\r\n\r\n    img {\r\n      width: 100%;\r\n      height: 100%;\r\n      object-fit: cover;\r\n    }\r\n  }\r\n\r\n  .isoCardContent {\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 0 15px;\r\n\r\n    .isoCardTitle {\r\n      font-size: 14px;\r\n      font-weight: 500;\r\n      color: ${palette('text', 0)};\r\n      margin: 0 0 3px;\r\n    }\r\n\r\n    .isoCardDate {\r\n      font-size: 12px;\r\n      font-weight: 400;\r\n      color: ${palette('grayscale', 0)};\r\n    }\r\n  }\r\n\r\n  .isoDeleteBtn {\r\n    width: 24px;\r\n    height: 24px;\r\n    background-color: transparent;\r\n    flex-shrink: 0;\r\n    padding: 0;\r\n    border: 0;\r\n    font-size: 14px;\r\n    color: ${palette('grayscale', 0)};\r\n    cursor: pointer;\r\n    ${transition()};\r\n\r\n    &:hover {\r\n      color: ${palette('primary', 0)};\r\n    }\r\n  }\r\n\r\n  &.list {\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    .isoCardImage {\r\n      width: 35px;\r\n      height: 35px;\r\n      display: -webkit-inline-flex;\r\n      display: -ms-inline-flex;\r\n      display: inline-flex;\r\n      ${borderRadius('50%')};\r\n    }\r\n  }\r\n\r\n  &.grid {\r\n    width: calc(100% / 3 - 15px);\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 0 7px 15px;\r\n    padding: 0;\r\n\r\n    @media only screen and (max-width: 767px) {\r\n      width: calc(100% / 2 - 10px);\r\n      margin: 0 5px 10px;\r\n    }\r\n\r\n    @media only screen and (max-width: 480px) {\r\n      width: 100%;\r\n      margin-right: ${props => (props['data-rtl'] === 'rtl' ? 'inherit' : '0')};\r\n      margin-left: ${props => (props['data-rtl'] === 'rtl' ? '0' : 'inherit')};\r\n    }\r\n\r\n    @media only screen and (min-width: 1400px) {\r\n      width: calc(100% / 4 - 15px);\r\n      margin: 0 7px 15px;\r\n    }\r\n\r\n    .isoCardImage {\r\n      width: 100%;\r\n      height: 260px;\r\n      display: flex;\r\n\r\n      @media only screen and (min-width: 960px) {\r\n        height: 330px;\r\n      }\r\n    }\r\n\r\n    .isoCardContent {\r\n      padding: 15px;\r\n      margin: 0;\r\n    }\r\n\r\n    .isoDeleteBtn {\r\n      position: absolute;\r\n      top: 0;\r\n      right: ${props => (props['data-rtl'] === 'rtl' ? 'inherit' : '0')};\r\n      left: ${props => (props['data-rtl'] === 'rtl' ? '0' : 'inherit')};\r\n    }\r\n  }\r\n`;\r\n\r\nconst WDSortableCardWrapper = styled.div`\r\n  padding: 50px 35px;\r\n\r\n  @media only screen and (max-width: 767px) {\r\n    padding: 30px 20px;\r\n  }\r\n\r\n  .isoControlBar {\r\n    width: 100%;\r\n    display: flex;\r\n    margin-bottom: 30px;\r\n    align-items: center;\r\n\r\n    @media only screen and (max-width: 767px) {\r\n      align-items: flex-start;\r\n      flex-direction: column;\r\n    }\r\n\r\n    > * {\r\n      display: flex;\r\n      align-items: center;\r\n\r\n      .isoControlBtn {\r\n        font-size: 12px;\r\n        font-weight: 400;\r\n        text-transform: uppercase;\r\n        color: #ffffff;\r\n        background-color: ${palette('primary', 0)};\r\n        border: 0;\r\n        outline: 0;\r\n        display: -webkit-inline-flex;\r\n        display: -ms-inline-flex;\r\n        display: inline-flex;\r\n        align-items: center;\r\n        height: 35px;\r\n        padding: 0 15px;\r\n        margin-right: ${props => (props['data-rtl'] === 'rtl' ? '0' : '10px')};\r\n        margin-left: ${props => (props['data-rtl'] === 'rtl' ? '10px' : '0')};\r\n        cursor: pointer;\r\n        ${borderRadius('3px')};\r\n        ${transition()};\r\n\r\n        @media only screen and (max-width: 430px) {\r\n          padding: 0 10px;\r\n        }\r\n\r\n        i {\r\n          padding-right: ${props =>\r\n            props['data-rtl'] === 'rtl' ? '0' : '10px'};\r\n          padding-left: ${props =>\r\n            props['data-rtl'] === 'rtl' ? '10px' : '0'};\r\n        }\r\n\r\n        &:last-child {\r\n          margin-right: ${props => (props['data-rtl'] === 'rtl' ? '0' : '0')};\r\n          margin-left: ${props => (props['data-rtl'] === 'rtl' ? '0' : '0')};\r\n        }\r\n\r\n        &:hover {\r\n          background-color: ${palette('primary', 1)};\r\n        }\r\n      }\r\n\r\n      &.isoControlBtnGroup {\r\n        margin-left: ${props =>\r\n          props['data-rtl'] === 'rtl' ? 'inherit' : 'auto'};\r\n        margin-right: ${props =>\r\n          props['data-rtl'] === 'rtl' ? 'auto' : 'inherit'};\r\n\r\n        @media only screen and (max-width: 767px) {\r\n          margin-left: ${props =>\r\n            props['data-rtl'] === 'rtl' ? 'inherit' : '0'};\r\n          margin-right: ${props =>\r\n            props['data-rtl'] === 'rtl' ? '0' : 'inherit'};\r\n          margin-top: 20px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .isoAddRemoveControlBar {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 30px;\r\n\r\n    .isoControlBtnGroup {\r\n      display: flex;\r\n      align-items: center;\r\n\r\n      .isoControlBtn {\r\n        font-size: 12px;\r\n        font-weight: 400;\r\n        padding: 0;\r\n        text-transform: uppercase;\r\n        color: #ffffff;\r\n        background-color: ${palette('primary', 0)};\r\n        border: 0;\r\n        outline: 0;\r\n        height: 30px;\r\n        padding: 0 15px;\r\n        margin-right: ${props => (props['data-rtl'] === 'rtl' ? '0' : '10px')};\r\n        margin-left: ${props => (props['data-rtl'] === 'rtl' ? '10px' : '0')};\r\n        cursor: pointer;\r\n        ${borderRadius('3px')};\r\n        ${transition()};\r\n\r\n        i {\r\n          padding-right: ${props =>\r\n            props['data-rtl'] === 'rtl' ? '0' : '10px'};\r\n          padding-left: ${props =>\r\n            props['data-rtl'] === 'rtl' ? '10px' : '0'};\r\n        }\r\n\r\n        &:last-child {\r\n          margin: 0;\r\n        }\r\n\r\n        &:hover {\r\n          background-color: ${palette('primary', 1)};\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  &.grid {\r\n    .isoSortableCardsContainer {\r\n      ul {\r\n        width: 100%;\r\n        display: flex;\r\n        flex-flow: row wrap;\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst SingleCardWrapper = WithDirection(WDSingleCardWrapper);\r\nconst SortableCardWrapper = WithDirection(WDSortableCardWrapper);\r\n\r\nexport { SingleCardWrapper, SortableCardWrapper };\r\n","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\nimport { Icon } from 'antd';\r\nimport { SingleCardWrapper } from './shuffle.style';\r\n\r\nexport default class extends Component {\r\n  render() {\r\n    const listClass = `isoSingleCard card ${this.props.view}`;\r\n    const style = { zIndex: 100 - this.props.index };\r\n\r\n    return (\r\n      <SingleCardWrapper id={this.props.id} className={listClass} style={style}>\r\n        <div className=\"isoCardImage\">\r\n          <img alt=\"#\" src={process.env.PUBLIC_URL + this.props.img} />\r\n        </div>\r\n        <div className=\"isoCardContent\">\r\n          <h3 className=\"isoCardTitle\">{this.props.desc}</h3>\r\n          <span className=\"isoCardDate\">\r\n            {moment(this.props.timestamp).format('MMM Do, YYYY')}\r\n          </span>\r\n        </div>\r\n        <button className=\"isoDeleteBtn\" onClick={this.props.clickHandler}>\r\n          <Icon type=\"close\" />\r\n        </button>\r\n      </SingleCardWrapper>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport FlipMove from 'react-flip-move';\r\nimport shuffle from 'lodash/shuffle';\r\nimport throttle from 'lodash/throttle';\r\nimport articles from './config';\r\nimport Toggle from './Toggle.js';\r\nimport ListItem from './listItem';\r\nimport IntlMessages from '../../components/utility/intlMessages';\r\nimport { SortableCardWrapper } from './shuffle.style';\r\n\r\nexport default class extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      removedArticles: [],\r\n      view: 'grid',\r\n      order: 'asc',\r\n      sortingMethod: 'chronological',\r\n      enterLeaveAnimation: 'accordionVertical',\r\n      articles\r\n    };\r\n\r\n    this.toggleList = this.toggleList.bind(this);\r\n    this.toggleGrid = this.toggleGrid.bind(this);\r\n    this.toggleSort = this.toggleSort.bind(this);\r\n    this.sortRotate = this.sortRotate.bind(this);\r\n    this.sortShuffle = this.sortShuffle.bind(this);\r\n  }\r\n\r\n  toggleList() {\r\n    this.setState({\r\n      view: 'list',\r\n      enterLeaveAnimation: 'accordionVertical'\r\n    });\r\n  }\r\n\r\n  toggleGrid() {\r\n    this.setState({\r\n      view: 'grid',\r\n      enterLeaveAnimation: 'accordionHorizontal'\r\n    });\r\n  }\r\n\r\n  toggleSort() {\r\n    const sortAsc = (a, b) => a.timestamp - b.timestamp;\r\n    const sortDesc = (a, b) => b.timestamp - a.timestamp;\r\n\r\n    this.setState({\r\n      order: this.state.order === 'asc' ? 'desc' : 'asc',\r\n      sortingMethod: 'chronological',\r\n      articles: this.state.articles.sort(\r\n        this.state.order === 'asc' ? sortDesc : sortAsc\r\n      )\r\n    });\r\n  }\r\n\r\n  sortShuffle() {\r\n    this.setState({\r\n      sortingMethod: 'shuffle',\r\n      articles: shuffle(this.state.articles)\r\n    });\r\n  }\r\n\r\n  moveArticle(source, dest, id) {\r\n    const sourceArticles = this.state[source].slice();\r\n    let destArticles = this.state[dest].slice();\r\n\r\n    if (!sourceArticles.length) return;\r\n\r\n    // Find the index of the article clicked.\r\n    // If no ID is provided, the index is 0\r\n    const i = id ? sourceArticles.findIndex(article => article.id === id) : 0;\r\n\r\n    // If the article is already removed, do nothing.\r\n    if (i === -1) return;\r\n\r\n    destArticles = [].concat(sourceArticles.splice(i, 1), destArticles);\r\n\r\n    this.setState({\r\n      [source]: sourceArticles,\r\n      [dest]: destArticles\r\n    });\r\n  }\r\n\r\n  sortRotate() {\r\n    const articles = this.state.articles.slice();\r\n    articles.unshift(articles.pop());\r\n\r\n    this.setState({\r\n      sortingMethod: 'rotate',\r\n      articles\r\n    });\r\n  }\r\n\r\n  renderArticles() {\r\n    return this.state.articles.map((article, i) => {\r\n      return (\r\n        <ListItem\r\n          key={article.id}\r\n          view={this.state.view}\r\n          index={i}\r\n          clickHandler={throttle(\r\n            () => this.moveArticle('articles', 'removedArticles', article.id),\r\n            800\r\n          )}\r\n          {...article}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <SortableCardWrapper\r\n        id=\"shuffle\"\r\n        className={`isomorphicSortableCardsHolder ${this.state.view}`}\r\n      >\r\n        <header className=\"isoControlBar\">\r\n          <div className=\"isoViewBtnGroup\">\r\n            <Toggle\r\n              clickHandler={this.toggleList}\r\n              text={<IntlMessages id=\"toggle.list\" />}\r\n              icon=\"bars\"\r\n              active={this.state.view === 'list'}\r\n            />\r\n            <Toggle\r\n              clickHandler={this.toggleGrid}\r\n              text={<IntlMessages id=\"toggle.grid\" />}\r\n              icon=\"appstore\"\r\n              active={this.state.view === 'grid'}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"isoControlBtnGroup\">\r\n            <Toggle\r\n              clickHandler={this.toggleSort}\r\n              text={\r\n                this.state.order === 'asc' ? (\r\n                  <IntlMessages id=\"toggle.ascending\" />\r\n                ) : (\r\n                  <IntlMessages id=\"toggle.descending\" />\r\n                )\r\n              }\r\n              icon={this.state.order === 'asc' ? 'up' : 'down'}\r\n              active={this.state.sortingMethod === 'chronological'}\r\n            />\r\n            <Toggle\r\n              clickHandler={this.sortShuffle}\r\n              text={<IntlMessages id=\"toggle.shuffle\" />}\r\n              icon=\"shake\"\r\n              active={this.state.sortingMethod === 'shuffle'}\r\n            />\r\n            <Toggle\r\n              clickHandler={this.sortRotate}\r\n              text={<IntlMessages id=\"toggle.rotate\" />}\r\n              icon=\"reload\"\r\n              active={this.state.sortingMethod === 'rotate'}\r\n            />\r\n          </div>\r\n        </header>\r\n\r\n        <div className=\"isoSortableCardsContainer\">\r\n          <FlipMove\r\n            staggerDurationBy=\"30\"\r\n            duration={500}\r\n            enterAnimation={this.state.enterLeaveAnimation}\r\n            leaveAnimation={this.state.enterLeaveAnimation}\r\n            typeName=\"ul\"\r\n          >\r\n            {this.renderArticles()}\r\n\r\n            <footer key=\"foot\" className=\"isoAddRemoveControlBar\">\r\n              <div className=\"isoControlBtnGroup\">\r\n                <Toggle\r\n                  clickHandler={() =>\r\n                    this.moveArticle('removedArticles', 'articles')}\r\n                  text={<IntlMessages id=\"toggle.addItem\" />}\r\n                  icon=\"plus\"\r\n                  active={this.state.removedArticles.length > 0}\r\n                />\r\n                <Toggle\r\n                  clickHandler={() =>\r\n                    this.moveArticle('articles', 'removedArticles')}\r\n                  text={<IntlMessages id=\"toggle.removeItem\" />}\r\n                  icon=\"close\"\r\n                  active={this.state.articles.length > 0}\r\n                />\r\n              </div>\r\n            </footer>\r\n          </FlipMove>\r\n        </div>\r\n      </SortableCardWrapper>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}